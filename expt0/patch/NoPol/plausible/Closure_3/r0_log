Source files: [/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src]
Classpath: [file:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/, file:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/, file:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar, file:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar, file:/home/qx5/ssFix2/lib/myprinter.jar, file:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar]
Statement type: CONDITIONAL
Args: [com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckDebuggerStatementTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckSuspiciousCodeTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.CleanupPassesTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.ClosureRewriteClassTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.ExpandJqueryAliasesTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GlobalVarReferenceMapTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlinePropertiesTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.IntegrationTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeCallsTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest, com.google.javascript.jscomp.PeepholeSimplifyRegExpTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessCommonJSModulesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveUnusedClassPropertiesTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.ReorderConstantExpressionTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceMessagesForChromeTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.RescopeGlobalSymbolsTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SourceMapTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.SymbolTableTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TransformAMDToCJSModuleTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.XtbMessageBundleTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphPrunerTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.regex.CharRangesTest, com.google.javascript.rhino.IRTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.EnumElementTypeTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.ParameterizedTypeTest, com.google.javascript.rhino.jstype.PrototypeObjectTypeTest, com.google.javascript.rhino.jstype.RecordTypeTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeTest]
Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=150, timeoutMethodInvocation=2000, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=CONDITIONAL, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/data/people/qx5/nopol-master/nopol/lib/z3/z3_for_linux', projectSourcePath=[/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src], projectClasspath='/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar', projectTests=[com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckDebuggerStatementTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckSuspiciousCodeTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.CleanupPassesTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.ClosureRewriteClassTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.ExpandJqueryAliasesTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GlobalVarReferenceMapTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlinePropertiesTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.IntegrationTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeCallsTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest, com.google.javascript.jscomp.PeepholeSimplifyRegExpTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessCommonJSModulesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveUnusedClassPropertiesTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.ReorderConstantExpressionTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceMessagesForChromeTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.RescopeGlobalSymbolsTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SourceMapTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.SymbolTableTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TransformAMDToCJSModuleTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.XtbMessageBundleTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphPrunerTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.regex.CharRangesTest, com.google.javascript.rhino.IRTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.EnumElementTypeTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.ParameterizedTypeTest, com.google.javascript.rhino.jstype.PrototypeObjectTypeTest, com.google.javascript.rhino.jstype.RecordTypeTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeTest], complianceLevel=7}
Available processors (cores): 4
Free memory: 971 MB
Maximum memory: 7 GB
Total memory available to JVM: 982 MB
Java version: 1.7.0_121
JAVA_HOME: null
PATH: /tmp/765551.1.vlong.q:/usr/local/bin:/bin:/usr/bin
04:16:18.342 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Building Spoon model from /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src]
2017-03-29 04:16:21,593 DEBUG spoon.support.StandardEnvironment - building sources: [/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/Base64.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/Base64VLQ.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/FilePosition.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapConsumer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapConsumerV1.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapConsumerV2.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapFormat.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapGeneratorFactory.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapGeneratorV1.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapLineDecoder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapParseException.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapSection.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapSupplier.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapping.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMappingReversable.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/Util.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AbstractCompiler.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AliasExternals.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AliasKeywords.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AliasStrings.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AmbiguateProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AnalyzeNameReferences.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AnonymousFunctionNamingCallback.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FunctionNames.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AnonymousFunctionNamingPolicy.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AstChangeProxy.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AstParallelizer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AstValidator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/BasicErrorManager.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CssRenamingMap.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ByPathWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CallGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ChainCalls.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckAccessControls.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckDebuggerStatement.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckGlobalNames.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckGlobalThis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ControlFlowAnalysis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckLevel.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckLevelLegacy.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckMissingGetCssName.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckMissingReturn.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckProvides.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckRegExp.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckRequiresForConstructors.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckSideEffects.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckSuspiciousCode.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckUnreachableCode.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CleanupPasses.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ClosureCodeRemoval.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ClosureCodingConvention.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ClosureRewriteClass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CoalesceVariableNames.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CodeChangeHandler.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CodeConsumer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CodeGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CodePrinter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CodingConvention.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CodingConventions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CollapseAnonymousFunctions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CollapseProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CombinedCompilerPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CompilationLevel.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Compiler.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CompilerInput.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CompilerOptions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CompilerPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ComposeWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ConcreteType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ConstCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ControlStructureCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ConvertToDottedProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DefinitionSite.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CustomPassExecutionTime.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DataFlowAnalysis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DefaultPassConfig.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DefinitionProvider.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DefinitionsRemover.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Denormalize.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DependencyOptions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DiagnosticGroup.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DiagnosticGroups.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DiagnosticType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DisambiguateProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DotFormatter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FindExportableNodes.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/EmptyMessageBundle.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ErrorFormat.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ErrorHandler.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ErrorManager.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ErrorPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ExpandJqueryAliases.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ExploitAssigns.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ExportTestFunctions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ExpressionDecomposer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ExternExportsPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FieldCleanupPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FunctionArgumentInjector.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FunctionInjector.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ParallelCompilerPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VariableNameGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FunctionRewriter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FunctionToBlockMutator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FunctionTypeBuilder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GatherRawExports.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GenerateExports.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GlobalNamespace.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GoogleCodingConvention.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GroupVariableDeclarations.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/HotSwapCompilerPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/IgnoreCajaProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InferJSDocInfo.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InlineCostEstimator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InlineFunctions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InlineObjectLiterals.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InlineProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InlineSimpleMethods.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InlineVariables.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InstrumentFunctions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CrossModuleMethodMotion.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InvocationsCallback.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JSError.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JSModule.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JSModuleGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JSSourceFile.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JoinOp.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JqueryCodingConvention.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JsAst.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JsMessage.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JsMessageDefinition.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JsMessageExtractor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JsMessageVisitor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JvmMetrics.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MessageBundle.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/LineNumberCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/LinkedFlowScope.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/LoggerErrorManager.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MemoizedScopeCreator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MessageFormatter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MethodCompilerPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MinimizeExitPoints.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CrossModuleCodeMotion.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MoveFunctionDeclarations.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameAnalyzer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameAnonymousFunctions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameAnonymousFunctionsMapped.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameReferenceGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameReferenceGraphReport.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CreateSyntheticBlocks.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NodeIterators.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NodeNameExtractor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NodeTraversal.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NodeUtil.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Normalize.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/OptimizeArgumentsArray.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/OptimizeCalls.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/OptimizeParameters.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/OptimizeReturns.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PassConfig.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PassFactory.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeFoldConstants.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeFoldWithTypes.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ControlFlowGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeSimplifyRegExp.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PerformanceTracker.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PhaseOptimizer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PrepareAst.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PreprocessorSymbolTable.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PrintStreamErrorManager.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ProcessCommonJSModules.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ProcessDefines.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ProcessTweaks.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PropertyRenamingPolicy.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PureFunctionIdentifier.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RecordFunctionInformation.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RemoveTryCatch.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Region.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RemoveUnusedNames.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RemoveUnusedVars.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RenameLabels.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RenameProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RenamePrototypes.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RenameVars.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReorderConstantExpression.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReplaceCssNames.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReplaceIdGenerators.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReplaceMessages.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReplaceMessagesForChrome.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReplaceStrings.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RescopeGlobalSymbols.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Result.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RhinoErrorReporter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RuntimeTypeCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SanityCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Scope.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ScopeCreator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ScopedAliases.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ShadowVariables.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ShowByPathWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SideEffectsAnalysis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SimpleDefinitionFinder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SimpleRegion.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SourceAst.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SourceFile.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SourceInformationAnnotator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SourceMap.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SpecializationAwareCompilerPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SpecializeModule.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/StatementFusion.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/StrictModeCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/StrictWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Strings.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/StripCode.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SymbolTable.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SyntacticScopeCreator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SyntheticAst.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TightenTypes.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Tracer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TransformAMDToCJSModule.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TypeCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TypeInference.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TypeInferencePass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TypeValidator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TypedCodeGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/UnreachableCodeElimination.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/UseSite.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VarCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VariableMap.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VariableReferenceCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VariableRenamingPolicy.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VerboseMessageFormatter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/WarningLevel.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/WarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/WhitelistWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/XtbMessageBundle.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ant/AntErrorManager.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ant/CompileTask.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ant/Warning.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/DependencyInfo.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/DepsFileParser.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/DepsGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/JsFileLineParser.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/JsFileParser.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/JsFunctionParser.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/PathUtil.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/SortedDependencies.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/AdjacencyGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/Annotatable.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/Annotation.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/DiGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/FixedPointGraphTraversal.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/Graph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/GraphColoring.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/GraphNode.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/GraphPruner.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/GraphReachability.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/GraphvizGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LatticeElement.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/StandardUnionFind.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/SubGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/UndiGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/UnionFind.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/ErrorLevel.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/JsonML.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/JsonMLAst.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/JsonMLError.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/JsonMLException.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/NodeUtil.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/Reader.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/SecureCompiler.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/TagAttr.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/TagType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/Validator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/Writer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/Annotation.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/Config.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/JsDocToken.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/NullErrorReporter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/ParserRunner.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/TypeSafeDispatcher.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/regex/CaseCanonicalize.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/regex/CharRanges.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/regex/RegExpTree.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/testing/SimpleSourceExcerptProvider.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/testing/TestErrorReporter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/type/FlowScope.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/type/ReverseAbstractInterpreter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/webservice/common/AbstractWebServiceException.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/webservice/common/ErrorCode.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/webservice/common/Protocol.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/ErrorReporter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/IR.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/InputId.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/JSDocInfo.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/JSDocInfoBuilder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/JSTypeExpression.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/SimpleErrorReporter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/SourcePosition.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/TokenStream.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/ScriptRuntime.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/AllType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ArrowType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/BooleanLiteralSet.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/BooleanType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/CanCastToVisitor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/EnumElementType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/EnumType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/EquivalenceMethod.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ErrorFunctionType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/FunctionBuilder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/FunctionParamBuilder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/FunctionType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/InstanceObjectType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/JSType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/JSTypeNative.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/JSTypeRegistry.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ModificationVisitor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/NamedType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/NoResolvedType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/NoType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/NullType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/NumberType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ObjectType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/Property.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/PropertyMap.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ProxyObjectType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/RecordType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/RelationshipVisitor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/SimpleReference.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/SimpleSlot.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/SimpleSourceFile.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/StaticReference.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/StaticScope.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/StaticSlot.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/StaticSourceFile.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/StaticSymbolTable.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/StringType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/TemplateType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/IndexedType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ParameterizedType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/TernaryValue.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/UnionType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/UnknownType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ValueType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/Visitor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/VoidType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/testing/AbstractStaticScope.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/testing/Asserts.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/testing/MapBasedScope.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/testing/TestErrorReporter.java]
2017-03-29 04:16:21,787 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/Base64.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/Base64VLQ.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/FilePosition.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapConsumer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapConsumerV1.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapConsumerV2.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapFormat.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapGeneratorFactory.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapGeneratorV1.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapLineDecoder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapParseException.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapSection.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapSupplier.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMapping.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/SourceMappingReversable.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/debugging/sourcemap/Util.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AbstractCompiler.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AliasExternals.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AliasKeywords.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AliasStrings.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AmbiguateProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AnalyzeNameReferences.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AnonymousFunctionNamingCallback.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FunctionNames.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AnonymousFunctionNamingPolicy.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AstChangeProxy.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AstParallelizer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/AstValidator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/BasicErrorManager.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CssRenamingMap.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ByPathWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CallGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ChainCalls.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckAccessControls.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckDebuggerStatement.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckGlobalNames.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckGlobalThis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ControlFlowAnalysis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckLevel.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckLevelLegacy.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckMissingGetCssName.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckMissingReturn.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckProvides.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckRegExp.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckRequiresForConstructors.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckSideEffects.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckSuspiciousCode.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckUnreachableCode.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CleanupPasses.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ClosureCodeRemoval.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ClosureCodingConvention.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ClosureRewriteClass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CoalesceVariableNames.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CodeChangeHandler.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CodeConsumer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CodeGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CodePrinter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CodingConvention.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CodingConventions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CollapseAnonymousFunctions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CollapseProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CombinedCompilerPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CompilationLevel.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Compiler.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CompilerInput.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CompilerOptions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CompilerPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ComposeWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ConcreteType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ConstCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ControlStructureCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ConvertToDottedProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DefinitionSite.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CustomPassExecutionTime.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DataFlowAnalysis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DefaultPassConfig.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DefinitionProvider.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DefinitionsRemover.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Denormalize.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DependencyOptions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DiagnosticGroup.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DiagnosticGroupWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DiagnosticGroups.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DiagnosticType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DisambiguateProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DotFormatter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FindExportableNodes.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/EmptyMessageBundle.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ErrorFormat.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ErrorHandler.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ErrorManager.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ErrorPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ExpandJqueryAliases.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ExploitAssigns.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ExportTestFunctions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ExpressionDecomposer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ExternExportsPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FieldCleanupPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FunctionArgumentInjector.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FunctionInjector.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ParallelCompilerPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VariableNameGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FunctionRewriter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FunctionToBlockMutator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FunctionTypeBuilder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GatherRawExports.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GenerateExports.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GlobalNamespace.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GoogleCodingConvention.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/GroupVariableDeclarations.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/HotSwapCompilerPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/IgnoreCajaProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InferJSDocInfo.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InlineCostEstimator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InlineFunctions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InlineObjectLiterals.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InlineProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InlineSimpleMethods.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InlineVariables.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InstrumentFunctions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CrossModuleMethodMotion.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/InvocationsCallback.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JSError.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JSModule.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JSModuleGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JSSourceFile.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JoinOp.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JqueryCodingConvention.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JsAst.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JsMessage.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JsMessageDefinition.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JsMessageExtractor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JsMessageVisitor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/JvmMetrics.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MessageBundle.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/LineNumberCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/LinkedFlowScope.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/LoggerErrorManager.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MemoizedScopeCreator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MessageFormatter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MethodCompilerPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MinimizeExitPoints.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CrossModuleCodeMotion.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MoveFunctionDeclarations.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameAnalyzer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameAnonymousFunctions.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameAnonymousFunctionsMapped.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameReferenceGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NameReferenceGraphReport.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CreateSyntheticBlocks.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NodeIterators.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NodeNameExtractor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NodeTraversal.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/NodeUtil.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Normalize.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/OptimizeArgumentsArray.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/OptimizeCalls.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/OptimizeParameters.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/OptimizeReturns.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PassConfig.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PassFactory.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeFoldConstants.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeFoldWithTypes.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ControlFlowGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeSimplifyRegExp.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PerformanceTracker.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PhaseOptimizer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PrepareAst.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PreprocessorSymbolTable.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PrintStreamErrorManager.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ProcessCommonJSModules.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ProcessDefines.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ProcessTweaks.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PropertyRenamingPolicy.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/PureFunctionIdentifier.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RecordFunctionInformation.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RemoveTryCatch.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Region.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RemoveUnusedNames.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RemoveUnusedVars.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RenameLabels.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RenameProperties.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RenamePrototypes.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RenameVars.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReorderConstantExpression.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReplaceCssNames.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReplaceIdGenerators.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReplaceMessages.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReplaceMessagesForChrome.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ReplaceStrings.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RescopeGlobalSymbols.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Result.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RhinoErrorReporter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/RuntimeTypeCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SanityCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Scope.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ScopeCreator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ScopedAliases.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ShadowVariables.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ShowByPathWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SideEffectsAnalysis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SimpleDefinitionFinder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SimpleRegion.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SourceAst.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SourceFile.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SourceInformationAnnotator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SourceMap.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SpecializationAwareCompilerPass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SpecializeModule.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/StatementFusion.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/StrictModeCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/StrictWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Strings.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/StripCode.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SymbolTable.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SyntacticScopeCreator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/SyntheticAst.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TightenTypes.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/Tracer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TransformAMDToCJSModule.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TypeCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TypeInference.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TypeInferencePass.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TypeValidator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TypedCodeGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/UnreachableCodeElimination.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/UseSite.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VarCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VariableMap.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VariableReferenceCheck.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VariableRenamingPolicy.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/VerboseMessageFormatter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/WarningLevel.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/WarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/WhitelistWarningsGuard.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/XtbMessageBundle.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ant/AntErrorManager.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ant/CompileTask.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ant/Warning.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/DependencyInfo.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/DepsFileParser.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/DepsGenerator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/JsFileLineParser.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/JsFileParser.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/JsFunctionParser.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/PathUtil.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/deps/SortedDependencies.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/AdjacencyGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/Annotatable.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/Annotation.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/DiGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/FixedPointGraphTraversal.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/Graph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/GraphColoring.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/GraphNode.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/GraphPruner.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/GraphReachability.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/GraphvizGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LatticeElement.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/StandardUnionFind.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/SubGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/UndiGraph.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/UnionFind.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/ErrorLevel.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/JsonML.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/JsonMLAst.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/JsonMLError.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/JsonMLException.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/JsonMLUtil.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/NodeUtil.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/Reader.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/SecureCompiler.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/TagAttr.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/TagType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/Validator.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/jsonml/Writer.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/Annotation.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/Config.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/JsDocToken.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/NullErrorReporter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/ParserRunner.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/parsing/TypeSafeDispatcher.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/regex/CaseCanonicalize.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/regex/CharRanges.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/regex/RegExpTree.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/testing/SimpleSourceExcerptProvider.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/testing/TestErrorReporter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/type/FlowScope.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/type/ReverseAbstractInterpreter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/webservice/common/AbstractWebServiceException.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/webservice/common/ErrorCode.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/webservice/common/Protocol.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/ErrorReporter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/IR.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/InputId.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/JSDocInfo.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/JSDocInfoBuilder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/JSTypeExpression.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/SimpleErrorReporter.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/SourcePosition.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/TokenStream.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/ScriptRuntime.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/AllType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ArrowType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/BooleanLiteralSet.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/BooleanType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/CanCastToVisitor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/EnumElementType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/EnumType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/EquivalenceMethod.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ErrorFunctionType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/FunctionBuilder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/FunctionParamBuilder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/FunctionType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/InstanceObjectType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/JSType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/JSTypeNative.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/JSTypeRegistry.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ModificationVisitor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/NamedType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/NoResolvedType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/NoType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/NullType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/NumberType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ObjectType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/Property.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/PropertyMap.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ProxyObjectType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/RecordType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/RelationshipVisitor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/SimpleReference.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/SimpleSlot.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/SimpleSourceFile.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/StaticReference.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/StaticScope.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/StaticSlot.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/StaticSourceFile.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/StaticSymbolTable.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/StringType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/TemplateType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/IndexedType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ParameterizedType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/TernaryValue.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/UnionType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/UnknownType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/ValueType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/Visitor.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/jstype/VoidType.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/testing/AbstractStaticScope.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/testing/Asserts.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/testing/MapBasedScope.java, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/testing/TestErrorReporter.java]
2017-03-29 04:16:51,464 DEBUG spoon.support.StandardEnvironment - built in 29867 ms
2017-03-29 04:16:51,465 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:16:51,465 DEBUG spoon.support.StandardEnvironment - built in 0 ms
com.google.javascript.jscomp.GoogleCodingConvention{isConstant(Ljava/lang/String;)Z[82 0.0
com.google.javascript.rhino.Token{name(I)Ljava/lang/String;[232 0.7071067811865476
04:22:46.800 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Token{name(I)Ljava/lang/String;[232 0.7071067811865476
04:22:46.811 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:22:51,840 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:22:51,843 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:22:52,033 DEBUG spoon.support.StandardEnvironment - built in 192 ms
2017-03-29 04:22:52,034 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:22:52,034 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:22:52.038 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Token]
2017-03-29 04:22:52,039 DEBUG spoon.support.StandardEnvironment - processing 'Token' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:22:52.055 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Token]
04:22:52.091 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:34.284 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
04:23:34.285 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Token:232.
04:23:34.286 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.MaybeReachingVariableUse{hasExceptionHandler(Lcom/google/javascript/rhino/Node;)Z[163 0.6546536707079772
04:23:34.287 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java]
2017-03-29 04:23:35,239 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java]
2017-03-29 04:23:35,240 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java]
2017-03-29 04:23:35,518 DEBUG spoon.support.StandardEnvironment - built in 279 ms
2017-03-29 04:23:35,518 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:35,518 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:35.520 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.MaybeReachingVariableUse]
2017-03-29 04:23:35,521 DEBUG spoon.support.StandardEnvironment - processing 'MaybeReachingVariableUse' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:23:35.530 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.MaybeReachingVariableUse]
04:23:35.641 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:36.938 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (4 classes)]
04:23:36.939 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.MaybeReachingVariableUse:163.
04:23:36.939 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Node{propToString(I)Ljava/lang/String;[131 0.6123724356957946
04:23:36.940 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:23:37,149 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:23:37,150 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:23:37,542 DEBUG spoon.support.StandardEnvironment - built in 392 ms
2017-03-29 04:23:37,542 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:37,542 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:37.544 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Node]
2017-03-29 04:23:37,545 DEBUG spoon.support.StandardEnvironment - processing 'Node' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:23:37.610 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Node]
04:23:38.307 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:39.180 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (13 classes)]
04:23:39.181 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Node:131.
04:23:39.181 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Token{name(I)Ljava/lang/String;[224 0.5773502691896257
04:23:39.181 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:23:39,366 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:23:39,366 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:23:39,500 DEBUG spoon.support.StandardEnvironment - built in 134 ms
2017-03-29 04:23:39,501 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:39,501 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:39.503 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Token]
2017-03-29 04:23:39,503 DEBUG spoon.support.StandardEnvironment - processing 'Token' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:23:39.512 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Token]
04:23:39.523 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:39.608 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
04:23:39.608 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Token:224.
04:23:39.609 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$1{apply(Lcom/google/javascript/rhino/Node;)Z[112 0.5773502691896257
04:23:39.609 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:39,822 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:39,823 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:40,091 DEBUG spoon.support.StandardEnvironment - built in 268 ms
2017-03-29 04:23:40,092 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:40,092 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:40.094 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:23:40,094 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:23:40.106 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:23:40.126 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:40.642 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:23:40.648 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:40,831 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:40,832 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:41,050 DEBUG spoon.support.StandardEnvironment - built in 219 ms
2017-03-29 04:23:41,050 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:41,050 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:41.052 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:23:41,052 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:23:41.108 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:23:41.126 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:41.526 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:23:41.687 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:23:42.613 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
04:23:42.614 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1 started...]
04:23:42.725 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
04:23:42.726 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2 started...]
04:23:42.764 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
04:23:42.765 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:23:42.799 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
04:23:42.800 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath started...]
04:23:42.850 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
04:23:42.851 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar started...]
04:23:42.947 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
04:23:42.948 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported started...]
04:23:42.971 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
04:23:42.972 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch started...]
04:23:43.022 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
04:23:43.023 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:23:43.111 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
04:23:43.112 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase started...]
04:23:43.136 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
04:23:43.136 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits started...]
04:23:43.160 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
04:23:43.161 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction started...]
04:23:43.189 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
04:23:43.190 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2 started...]
04:23:43.220 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
04:23:43.221 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3 started...]
04:23:43.250 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
04:23:43.251 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:23:43.415 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
04:23:43.416 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:23:43.499 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
04:23:43.499 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:23:43.521 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
04:23:43.521 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors started...]
04:23:43.545 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
04:23:43.546 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits started...]
04:23:43.567 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
04:23:43.568 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop started...]
04:23:43.596 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
04:23:43.597 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits started...]
04:23:43.618 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
04:23:43.619 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:23:43.726 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
04:23:43.727 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp started...]
04:23:43.750 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
04:23:43.750 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:23:43.780 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#24. FAILED]
04:23:43.781 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop started...]
04:23:43.805 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
04:23:43.806 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:23:43.828 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#26. FAILED]
04:23:43.829 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2 started...]
04:23:43.854 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
04:23:43.854 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:23:43.878 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#28. FAILED]
04:23:43.879 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition started...]
04:23:43.898 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
04:23:43.898 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7 started...]
04:23:43.938 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
04:23:43.939 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:23:43.961 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
04:23:43.961 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:23:43.986 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
04:23:43.986 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#33. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:23:44.046 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
04:23:44.046 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#34. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:23:44.065 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
04:23:44.066 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#35. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:23:44.088 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
04:23:44.088 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#36. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:23:44.109 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
04:23:44.110 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#37. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:23:44.129 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
04:23:44.130 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#38. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:23:44.193 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
04:23:44.194 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#39. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:23:44.252 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
04:23:44.252 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#40. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:23:44.308 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
04:23:44.308 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#41. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:23:44.345 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
04:23:44.345 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#42. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:23:44.400 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
04:23:44.454 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#43. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:23:44.488 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
04:23:44.489 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#44. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12 started...]
04:23:44.505 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
04:23:44.506 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#45. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:23:44.530 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
04:23:44.531 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#46. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:23:44.547 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
04:23:44.548 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#47. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath started...]
04:23:44.566 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
04:23:44.567 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#48. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a started...]
04:23:44.593 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
04:23:44.593 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#49. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:23:44.620 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
04:23:44.620 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#50. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle started...]
04:23:44.637 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
04:23:44.637 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#51. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:23:44.656 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
04:23:44.657 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#52. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions started...]
04:23:44.674 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
04:23:44.674 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#53. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:23:44.692 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
04:23:44.693 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#54. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse started...]
04:23:44.710 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
04:23:44.710 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#55. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:23:44.724 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
04:23:44.725 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#56. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:23:44.740 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
04:23:44.740 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#57. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions started...]
04:23:44.754 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
04:23:44.755 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#58. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:23:44.771 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
04:23:44.771 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#59. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp started...]
04:23:44.798 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
04:23:44.798 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#60. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:23:44.819 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
04:23:44.819 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#61. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:23:44.854 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
04:23:44.855 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#62. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement started...]
04:23:44.880 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
04:23:44.881 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#63. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10 started...]
04:23:44.895 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
04:23:44.896 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#64. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:23:44.910 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
04:23:44.911 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#65. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2 started...]
04:23:44.933 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
04:23:44.934 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#66. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:23:44.950 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
04:23:44.951 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#67. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:23:44.967 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
04:23:44.968 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#68. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:23:44.981 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
04:23:44.982 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#69. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:23:44.997 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
04:23:44.997 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#70. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign started...]
04:23:45.010 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
04:23:45.010 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#71. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:23:45.024 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
04:23:45.025 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#72. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath started...]
04:23:45.038 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
04:23:45.039 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#73. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition started...]
04:23:45.069 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
04:23:45.070 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#74. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:23:45.109 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
04:23:45.111 [Thread-1] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (3437 ms)
<> Total tests run: 74
<> Ignored tests: 0
<> Failed tests: 3
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:45.172 [Thread-2] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:23:45.803 [Thread-2] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
04:23:45.804 [Thread-2] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (632 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:45.824 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:23:45.853 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
04:23:45.854 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (30 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:45.875 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:23:45.903 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
04:23:45.904 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (30 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:45.920 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:23:45.957 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
04:23:45.958 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (37 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:45.973 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:23:46.006 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. FAILED]
04:23:46.006 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (33 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:46.021 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:23:46.053 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. FAILED]
04:23:46.054 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (34 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:46.056 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$1:112
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)]
04:23:46.057 [main] DEBUG tests.output - First set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:23:46.057 [main] DEBUG tests.output - Second set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:23:46.058 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$1:112 otherwise the patch would be "true" or "false"
04:23:46.060 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in com.google.javascript.jscomp.FlowSensitiveInlineVariables$1{apply(Lcom/google/javascript/rhino/Node;)Z[112 0.5773502691896257
04:23:46.060 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate{canInline()Z[405 0.5773502691896257
04:23:46.060 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:46,297 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:46,297 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:46,567 DEBUG spoon.support.StandardEnvironment - built in 270 ms
2017-03-29 04:23:46,567 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:46,567 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:46.569 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:23:46,569 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:23:46.575 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:23:46.593 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:47.005 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:23:47.006 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:47,195 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:47,195 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:47,458 DEBUG spoon.support.StandardEnvironment - built in 263 ms
2017-03-29 04:23:47,459 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:47,459 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:47.460 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:23:47,461 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:23:47.471 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:23:47.488 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:47.860 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:23:47.917 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:23:48.565 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
04:23:48.566 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1 started...]
04:23:48.650 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
04:23:48.650 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2 started...]
04:23:48.681 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
04:23:48.682 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:23:48.708 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
04:23:48.708 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath started...]
04:23:48.746 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
04:23:48.747 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar started...]
04:23:48.820 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
04:23:48.820 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported started...]
04:23:48.839 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
04:23:48.840 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch started...]
04:23:48.882 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
04:23:48.883 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:23:48.956 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
04:23:48.957 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase started...]
04:23:48.976 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
04:23:48.976 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits started...]
04:23:48.996 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
04:23:48.996 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction started...]
04:23:49.019 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
04:23:49.020 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2 started...]
04:23:49.045 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
04:23:49.046 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3 started...]
04:23:49.069 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
04:23:49.070 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:23:49.209 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
04:23:49.209 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:23:49.280 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
04:23:49.280 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:23:49.299 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
04:23:49.299 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors started...]
04:23:49.320 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
04:23:49.320 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits started...]
04:23:49.338 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
04:23:49.339 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop started...]
04:23:49.364 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
04:23:49.364 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits started...]
04:23:49.383 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
04:23:49.384 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:23:49.478 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
04:23:49.509 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp started...]
04:23:49.529 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
04:23:49.529 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:23:49.553 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#24. FAILED]
04:23:49.554 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop started...]
04:23:49.575 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
04:23:49.576 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:23:49.595 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#26. FAILED]
04:23:49.596 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2 started...]
04:23:49.619 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
04:23:49.619 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:23:49.640 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#28. FAILED]
04:23:49.641 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition started...]
04:23:49.658 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
04:23:49.658 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7 started...]
04:23:49.691 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
04:23:49.692 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:23:49.712 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
04:23:49.713 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:23:49.735 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
04:23:49.735 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#33. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:23:49.789 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
04:23:49.790 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#34. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:23:49.807 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
04:23:49.807 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#35. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:23:49.827 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
04:23:49.827 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#36. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:23:49.846 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
04:23:49.847 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#37. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:23:49.869 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
04:23:49.870 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#38. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:23:49.926 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
04:23:49.927 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#39. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:23:49.979 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
04:23:49.980 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#40. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:23:50.034 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
04:23:50.035 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#41. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:23:50.069 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
04:23:50.070 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#42. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:23:50.121 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
04:23:50.121 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#43. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:23:50.153 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
04:23:50.153 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#44. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12 started...]
04:23:50.169 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
04:23:50.170 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#45. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:23:50.192 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
04:23:50.192 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#46. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:23:50.207 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
04:23:50.208 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#47. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath started...]
04:23:50.225 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
04:23:50.226 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#48. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a started...]
04:23:50.251 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
04:23:50.251 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#49. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:23:50.276 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
04:23:50.276 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#50. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle started...]
04:23:50.292 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
04:23:50.292 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#51. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:23:50.310 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
04:23:50.310 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#52. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions started...]
04:23:50.325 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
04:23:50.326 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#53. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:23:50.342 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
04:23:50.342 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#54. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse started...]
04:23:50.356 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
04:23:50.357 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#55. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:23:50.369 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
04:23:50.370 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#56. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:23:50.384 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
04:23:50.385 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#57. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions started...]
04:23:50.397 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
04:23:50.398 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#58. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:23:50.413 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
04:23:50.413 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#59. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp started...]
04:23:50.440 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
04:23:50.440 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#60. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:23:50.461 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
04:23:50.462 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#61. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:23:50.498 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
04:23:50.499 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#62. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement started...]
04:23:50.522 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
04:23:50.522 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#63. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10 started...]
04:23:50.537 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
04:23:50.538 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#64. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:23:50.552 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
04:23:50.552 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#65. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2 started...]
04:23:50.568 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
04:23:50.568 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#66. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:23:50.583 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
04:23:50.584 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#67. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:23:50.599 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
04:23:50.600 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#68. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:23:50.612 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
04:23:50.613 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#69. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:23:50.627 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
04:23:50.627 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#70. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign started...]
04:23:50.638 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
04:23:50.639 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#71. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:23:50.652 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
04:23:50.652 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#72. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath started...]
04:23:50.665 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
04:23:50.665 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#73. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition started...]
04:23:50.694 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
04:23:50.694 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#74. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:23:50.729 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
04:23:50.731 [Thread-8] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (2818 ms)
<> Total tests run: 74
<> Ignored tests: 0
<> Failed tests: 3
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:50.784 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:23:51.379 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
04:23:51.380 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (597 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:51.395 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:23:51.421 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
04:23:51.422 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:51.434 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:23:51.461 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
04:23:51.462 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:51.474 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:23:51.504 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. SUCCESS]
04:23:51.504 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1
04:23:51.505 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (30 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:23:51.516 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:23:51.550 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. SUCCESS]
04:23:51.551 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a
04:23:51.551 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (35 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:23:51.562 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:23:51.596 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. SUCCESS]
04:23:51.596 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3
04:23:51.597 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (35 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:23:52.442 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:23:52.515 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#7. SUCCESS]
04:23:52.515 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn
04:23:52.516 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (73 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:23:52.527 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:23:52.662 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#8. SUCCESS]
04:23:52.663 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign
04:23:52.663 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (136 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:23:52.672 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:23:52.695 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#9. FAILED]
04:23:52.695 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (23 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:52.705 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:23:52.728 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#10. FAILED]
04:23:52.728 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (23 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:52.738 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:23:52.762 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#11. FAILED]
04:23:52.762 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (24 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:23:52.772 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:23:52.802 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#12. SUCCESS]
04:23:52.802 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13
04:23:52.802 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (30 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:23:52.812 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:23:52.831 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#13. SUCCESS]
04:23:52.831 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2
04:23:52.832 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:23:52.841 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:23:52.870 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#14. SUCCESS]
04:23:52.871 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698
04:23:52.871 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (30 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:23:52.880 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:23:52.945 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#15. SUCCESS]
04:23:52.946 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels
04:23:52.946 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (66 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:23:52.951 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:53,139 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:53,140 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:53,410 DEBUG spoon.support.StandardEnvironment - built in 271 ms
2017-03-29 04:23:53,410 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:53,411 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:53.413 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate]
2017-03-29 04:23:53,414 DEBUG spoon.support.StandardEnvironment - processing 'Candidate' with 'fr.inria.lille.spirals.repair.synthesizer.collect.spoon.ConstantCollector'...
04:23:53.418 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate]
04:23:53.423 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:53.655 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
FlowSensitiveInlineVariables$Candidate.java:2: error: modifier private not allowed here
private class Candidate {
        ^
FlowSensitiveInlineVariables$Candidate.java:32: error: cannot find symbol
            if (inlinedNewDependencies.contains(dependency)) {
                ^
  symbol:   variable inlinedNewDependencies
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:44: error: SIDE_EFFECT_PREDICATE has private access in com.google.javascript.jscomp.FlowSensitiveInlineVariables
        if (com.google.javascript.jscomp.FlowSensitiveInlineVariables.checkRightOf(def, getDefCfgNode(), com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE)) {
                                                                                                                                                                  ^
FlowSensitiveInlineVariables$Candidate.java:44: error: checkRightOf(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.common.base.Predicate<com.google.javascript.rhino.Node>) has private access in com.google.javascript.jscomp.FlowSensitiveInlineVariables
        if (com.google.javascript.jscomp.FlowSensitiveInlineVariables.checkRightOf(def, getDefCfgNode(), com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE)) {
                                                                     ^
FlowSensitiveInlineVariables$Candidate.java:47: error: SIDE_EFFECT_PREDICATE has private access in com.google.javascript.jscomp.FlowSensitiveInlineVariables
        if (com.google.javascript.jscomp.FlowSensitiveInlineVariables.checkLeftOf(use, useCfgNode, com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE)) {
                                                                                                                                                            ^
FlowSensitiveInlineVariables$Candidate.java:47: error: checkLeftOf(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.common.base.Predicate<com.google.javascript.rhino.Node>) has private access in com.google.javascript.jscomp.FlowSensitiveInlineVariables
        if (com.google.javascript.jscomp.FlowSensitiveInlineVariables.checkLeftOf(use, useCfgNode, com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE)) {
                                                                     ^
FlowSensitiveInlineVariables$Candidate.java:50: error: cannot find symbol
        if (com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(def.getLastChild(), compiler)) {
                                                                                         ^
  symbol:   variable compiler
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:59: error: cannot find symbol
        java.util.Collection<com.google.javascript.rhino.Node> uses = reachingUses.getUses(varName, getDefCfgNode());
                                                                      ^
  symbol:   variable reachingUses
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:86: error: cannot find symbol
            com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch> pathCheck = new com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>(cfg , cfg.getDirectedGraphNode(getDefCfgNode()) , cfg.getDirectedGraphNode(useCfgNode) , com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE , com.google.common.base.Predicates.<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>>alwaysTrue() , false);
                                                                                                                                                                                                                                                                                                                    ^
  symbol:   variable cfg
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:86: error: cannot find symbol
            com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch> pathCheck = new com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>(cfg , cfg.getDirectedGraphNode(getDefCfgNode()) , cfg.getDirectedGraphNode(useCfgNode) , com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE , com.google.common.base.Predicates.<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>>alwaysTrue() , false);
                                                                                                                                                                                                                                                                                                                          ^
  symbol:   variable cfg
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:86: error: cannot find symbol
            com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch> pathCheck = new com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>(cfg , cfg.getDirectedGraphNode(getDefCfgNode()) , cfg.getDirectedGraphNode(useCfgNode) , com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE , com.google.common.base.Predicates.<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>>alwaysTrue() , false);
                                                                                                                                                                                                                                                                                                                                                                      ^
  symbol:   variable cfg
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:86: error: SIDE_EFFECT_PREDICATE has private access in com.google.javascript.jscomp.FlowSensitiveInlineVariables
            com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch> pathCheck = new com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>(cfg , cfg.getDirectedGraphNode(getDefCfgNode()) , cfg.getDirectedGraphNode(useCfgNode) , com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE , com.google.common.base.Predicates.<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>>alwaysTrue() , false);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ^
FlowSensitiveInlineVariables$Candidate.java:113: error: cannot find symbol
        compiler.reportCodeChange();
        ^
  symbol:   variable compiler
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:135: error: cannot find symbol
        com.google.javascript.jscomp.NodeTraversal.traverse(compiler, n, gatherCb);
                                                            ^
  symbol:   variable compiler
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:147: error: cannot find symbol
        com.google.javascript.jscomp.NodeTraversal.traverse(compiler, n, gatherCb);
                                                            ^
  symbol:   variable compiler
  location: class com.google.javascript.jscomp.Candidate
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:124)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:99)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:178)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:23:53.658 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate{canInline()Z[397 0.5773502691896257
04:23:53.658 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:53,840 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:53,840 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:23:54,090 DEBUG spoon.support.StandardEnvironment - built in 249 ms
2017-03-29 04:23:54,090 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:54,090 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:54.091 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:23:54,092 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:23:54.101 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:23:54.119 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:54.444 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:23:54.444 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate:397.
04:23:54.444 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Node{checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;[1440 0.5477225575051661
04:23:54.445 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:23:54,626 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:23:54,627 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:23:54,993 DEBUG spoon.support.StandardEnvironment - built in 367 ms
2017-03-29 04:23:54,993 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:54,993 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:54.995 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Node]
2017-03-29 04:23:54,995 DEBUG spoon.support.StandardEnvironment - processing 'Node' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:23:55.038 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Node]
04:23:55.530 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:56.034 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (13 classes)]
04:23:56.035 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Node:1440.
04:23:56.035 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Node{checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;[1411 0.5477225575051661
04:23:56.035 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:23:56,216 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:23:56,217 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:23:56,543 DEBUG spoon.support.StandardEnvironment - built in 326 ms
2017-03-29 04:23:56,544 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:56,544 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:56.545 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Node]
2017-03-29 04:23:56,545 DEBUG spoon.support.StandardEnvironment - processing 'Node' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:23:56.583 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Node]
04:23:57.028 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:57.437 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (13 classes)]
04:23:57.437 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Node:1411.
04:23:57.437 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Token{name(I)Ljava/lang/String;[261 0.5477225575051661
04:23:57.438 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:23:57,621 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:23:57,622 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:23:57,761 DEBUG spoon.support.StandardEnvironment - built in 139 ms
2017-03-29 04:23:57,761 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:57,761 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:57.763 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Token]
2017-03-29 04:23:57,763 DEBUG spoon.support.StandardEnvironment - processing 'Token' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:23:57.765 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Token]
04:23:57.774 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:57.828 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
04:23:57.828 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Token:261.
04:23:57.829 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Token{name(I)Ljava/lang/String;[184 0.5477225575051661
04:23:57.829 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:23:58,020 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:23:58,021 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:23:58,158 DEBUG spoon.support.StandardEnvironment - built in 138 ms
2017-03-29 04:23:58,159 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:58,176 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:58.177 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Token]
2017-03-29 04:23:58,177 DEBUG spoon.support.StandardEnvironment - processing 'Token' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:23:58.179 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Token]
04:23:58.188 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:58.238 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
04:23:58.239 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Token:184.
04:23:58.239 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[227 0.5477225575051661
04:23:58.239 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:23:58,440 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:23:58,440 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:23:58,591 DEBUG spoon.support.StandardEnvironment - built in 151 ms
2017-03-29 04:23:58,591 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:58,591 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:58.594 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:23:58,594 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:23:58.596 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:23:58.600 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:58.820 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:23:58.821 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:227.
04:23:58.821 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[206 0.5477225575051661
04:23:58.821 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:23:59,297 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:23:59,298 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:23:59,447 DEBUG spoon.support.StandardEnvironment - built in 149 ms
2017-03-29 04:23:59,448 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:23:59,448 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:23:59.449 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:23:59,449 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:23:59.451 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:23:59.455 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:23:59.656 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:23:59.656 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:206.
04:23:59.656 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.ControlFlowGraph{isEnteringNewCfgNode(Lcom/google/javascript/rhino/Node;)Z[201 0.5477225575051661
04:23:59.656 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ControlFlowGraph.java]
2017-03-29 04:23:59,864 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ControlFlowGraph.java]
2017-03-29 04:23:59,865 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/ControlFlowGraph.java]
2017-03-29 04:24:00,040 DEBUG spoon.support.StandardEnvironment - built in 176 ms
2017-03-29 04:24:00,041 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:00,041 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:00.042 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.ControlFlowGraph]
2017-03-29 04:24:00,042 DEBUG spoon.support.StandardEnvironment - processing 'ControlFlowGraph' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:00.043 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.ControlFlowGraph]
04:24:00.047 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:00.266 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (3 classes)]
04:24:00.267 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.ControlFlowGraph:201.
04:24:00.267 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[228 0.5222329678670935
04:24:00.267 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:00,449 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:00,450 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:00,599 DEBUG spoon.support.StandardEnvironment - built in 149 ms
2017-03-29 04:24:00,599 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:00,599 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:00.601 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:00,601 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:00.603 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:00.607 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:00.806 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:00.806 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:228.
04:24:00.807 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Token{name(I)Ljava/lang/String;[229 0.5
04:24:00.807 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:24:00,991 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:24:00,991 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:24:01,129 DEBUG spoon.support.StandardEnvironment - built in 138 ms
2017-03-29 04:24:01,129 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:01,129 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:01.130 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Token]
2017-03-29 04:24:01,131 DEBUG spoon.support.StandardEnvironment - processing 'Token' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:01.132 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Token]
04:24:01.141 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:01.191 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
04:24:01.191 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Token:229.
04:24:01.195 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[224 0.5
04:24:01.195 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:01,508 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:01,509 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:01,658 DEBUG spoon.support.StandardEnvironment - built in 149 ms
2017-03-29 04:24:01,658 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:01,659 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:01.660 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:01,660 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:01.662 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:01.666 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:01.880 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:01.880 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:02,064 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:02,064 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:02,212 DEBUG spoon.support.StandardEnvironment - built in 148 ms
2017-03-29 04:24:02,212 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:02,212 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:02.213 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:02,214 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:24:02.222 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:02.227 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:02.437 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
CheckPathsBetweenNodes.java:129: error: variable e is already defined in method checkSomePathsWithoutBackEdges(com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N,E>,com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N,E>)
            try{spoonDefaultValue=checkSomePathsWithoutBackEdges(next, b);}catch(java.lang.Exception e){};
                                                                                                     ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:24:02.439 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[223 0.5
04:24:02.439 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:02,623 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:02,623 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:02,772 DEBUG spoon.support.StandardEnvironment - built in 149 ms
2017-03-29 04:24:02,773 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:02,773 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:02.774 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:02,775 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:02.776 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:02.780 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:02.976 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:02.976 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:223.
04:24:02.977 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[219 0.5
04:24:02.977 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:03,160 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:03,160 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:03,328 DEBUG spoon.support.StandardEnvironment - built in 168 ms
2017-03-29 04:24:03,328 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:03,328 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:03.330 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:03,330 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:03.332 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:03.336 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:03.539 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:03.539 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:03,723 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:03,723 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:03,872 DEBUG spoon.support.StandardEnvironment - built in 149 ms
2017-03-29 04:24:03,872 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:03,872 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:03.873 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:03,874 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:24:03.882 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:03.887 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:04.085 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
CheckPathsBetweenNodes.java:125: error: variable e is already defined in method checkSomePathsWithoutBackEdges(com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N,E>,com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N,E>)
            try{spoonDefaultValue=(e.getAnnotation()) == (com.google.javascript.jscomp.CheckPathsBetweenNodes.BACK_EDGE);}catch(java.lang.Exception e){};
                                                                                                                                                    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:24:04.086 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[216 0.5
04:24:04.087 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:04,271 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:04,271 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:04,422 DEBUG spoon.support.StandardEnvironment - built in 151 ms
2017-03-29 04:24:04,423 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:04,423 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:04.424 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:04,424 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:04.426 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:04.430 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:04.625 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:04.626 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:04,809 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:04,809 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:04,957 DEBUG spoon.support.StandardEnvironment - built in 148 ms
2017-03-29 04:24:04,957 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:04,958 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:04.959 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:04,959 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:24:04.968 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:04.972 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:05.168 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
CheckPathsBetweenNodes.java:122: error: variable e is already defined in method checkSomePathsWithoutBackEdges(com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N,E>,com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N,E>)
            try{spoonDefaultValue=ignoreEdge(e);}catch(java.lang.Exception e){};
                                                                           ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:24:05.170 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[214 0.5
04:24:05.170 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:05,354 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:05,354 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:05,502 DEBUG spoon.support.StandardEnvironment - built in 148 ms
2017-03-29 04:24:05,503 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:05,503 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:05.504 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:05,505 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:05.506 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:05.510 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:05.705 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:05.705 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:214.
04:24:05.705 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[211 0.5
04:24:05.705 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:05,888 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:05,888 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:06,035 DEBUG spoon.support.StandardEnvironment - built in 147 ms
2017-03-29 04:24:06,036 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:06,036 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:06.037 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:06,038 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:06.039 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:06.043 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:06.236 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:06.237 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:06,421 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:06,422 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:06,569 DEBUG spoon.support.StandardEnvironment - built in 148 ms
2017-03-29 04:24:06,569 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:06,570 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:06.571 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:06,571 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:24:06.580 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:06.584 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:06.777 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
CheckPathsBetweenNodes.java:118: error: variable e is already defined in method checkSomePathsWithoutBackEdges(com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N,E>,com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N,E>)
            try{spoonDefaultValue=(e.getAnnotation()) == (com.google.javascript.jscomp.CheckPathsBetweenNodes.VISITED_EDGE);}catch(java.lang.Exception e){};
                                                                                                                                                       ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:24:06.778 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[208 0.48038446141526137
04:24:06.779 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:06,962 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:06,962 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:07,110 DEBUG spoon.support.StandardEnvironment - built in 148 ms
2017-03-29 04:24:07,111 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:07,111 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:07.112 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:07,113 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:07.114 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:07.118 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:07.311 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:07.312 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:208.
04:24:07.312 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[205 0.48038446141526137
04:24:07.312 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:07,496 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:07,497 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:07,644 DEBUG spoon.support.StandardEnvironment - built in 148 ms
2017-03-29 04:24:07,644 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:07,644 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:07.646 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:07,646 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:07.648 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:07.652 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:07.843 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:07.844 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:08,029 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:08,029 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:08,177 DEBUG spoon.support.StandardEnvironment - built in 148 ms
2017-03-29 04:24:08,177 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:08,184 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:08.185 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:08,185 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:24:08.194 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:08.198 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:08.410 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:08.463 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:24:09.120 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
04:24:09.121 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1 started...]
04:24:09.200 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
04:24:09.200 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2 started...]
04:24:09.231 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
04:24:09.231 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:24:09.255 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
04:24:09.256 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath started...]
04:24:09.290 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
04:24:09.290 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar started...]
04:24:09.357 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
04:24:09.358 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported started...]
04:24:09.375 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
04:24:09.375 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch started...]
04:24:09.414 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
04:24:09.414 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:24:09.480 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
04:24:09.481 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase started...]
04:24:09.498 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
04:24:09.498 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits started...]
04:24:09.516 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
04:24:09.517 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction started...]
04:24:09.538 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
04:24:09.538 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2 started...]
04:24:09.562 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
04:24:09.562 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3 started...]
04:24:09.584 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
04:24:09.584 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:24:09.713 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
04:24:09.713 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:24:09.777 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
04:24:09.778 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:24:09.794 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
04:24:09.794 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors started...]
04:24:09.813 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
04:24:09.813 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits started...]
04:24:09.830 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
04:24:09.830 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop started...]
04:24:09.853 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
04:24:09.853 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits started...]
04:24:09.871 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
04:24:09.871 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:24:09.958 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
04:24:09.958 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp started...]
04:24:09.976 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
04:24:09.977 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:09.998 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#24. FAILED]
04:24:09.999 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop started...]
04:24:10.018 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
04:24:10.019 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:10.037 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#26. FAILED]
04:24:10.037 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2 started...]
04:24:10.058 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
04:24:10.059 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:10.078 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#28. FAILED]
04:24:10.078 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition started...]
04:24:10.094 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
04:24:10.094 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7 started...]
04:24:10.125 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
04:24:10.126 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:24:10.144 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
04:24:10.145 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:24:10.165 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
04:24:10.165 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#33. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:24:10.215 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
04:24:10.216 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#34. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:24:10.232 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
04:24:10.232 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#35. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:24:10.249 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
04:24:10.250 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#36. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:24:10.268 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
04:24:10.268 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#37. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:24:10.284 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
04:24:10.284 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#38. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:24:10.338 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
04:24:10.338 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#39. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:24:10.385 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
04:24:10.386 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#40. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:24:10.437 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
04:24:10.437 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#41. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:24:10.469 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
04:24:10.469 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#42. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:24:10.515 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
04:24:10.516 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#43. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:24:10.544 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
04:24:10.544 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#44. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12 started...]
04:24:10.559 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
04:24:10.559 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#45. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:24:10.580 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
04:24:10.580 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#46. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:24:10.594 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
04:24:10.594 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#47. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath started...]
04:24:10.610 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
04:24:10.610 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#48. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a started...]
04:24:10.631 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
04:24:10.631 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#49. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:24:10.653 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
04:24:10.653 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#50. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle started...]
04:24:10.667 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
04:24:10.667 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#51. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:24:10.684 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
04:24:10.684 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#52. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions started...]
04:24:10.698 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
04:24:10.699 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#53. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:24:10.713 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
04:24:10.714 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#54. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse started...]
04:24:10.727 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
04:24:10.727 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#55. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:24:10.739 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
04:24:10.740 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#56. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:24:10.753 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
04:24:10.753 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#57. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions started...]
04:24:10.765 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
04:24:10.766 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#58. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:24:10.780 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
04:24:10.781 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#59. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp started...]
04:24:10.805 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
04:24:10.805 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#60. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:24:10.825 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
04:24:10.826 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#61. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:24:10.860 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
04:24:10.861 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#62. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement started...]
04:24:10.883 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
04:24:10.883 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#63. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10 started...]
04:24:10.896 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
04:24:10.897 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#64. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:24:10.909 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
04:24:10.909 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#65. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2 started...]
04:24:10.923 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
04:24:10.923 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#66. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:24:10.937 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
04:24:10.937 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#67. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:24:10.951 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
04:24:10.951 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#68. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:24:10.963 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
04:24:10.963 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#69. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:24:10.975 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
04:24:10.976 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#70. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign started...]
04:24:10.986 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
04:24:10.986 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#71. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:24:10.998 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
04:24:10.998 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#72. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath started...]
04:24:11.010 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
04:24:11.010 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#73. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition started...]
04:24:11.036 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
04:24:11.036 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#74. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:24:11.069 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
04:24:11.070 [Thread-24] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (2608 ms)
<> Total tests run: 74
<> Ignored tests: 0
<> Failed tests: 3
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:11.122 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:11.707 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
04:24:11.707 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (585 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:11.717 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:11.743 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
04:24:11.744 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:11.753 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:11.779 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
04:24:11.780 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:11.789 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:11.814 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
04:24:11.815 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (25 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:11.824 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:11.857 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. FAILED]
04:24:11.857 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (33 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:11.867 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:11.900 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. FAILED]
04:24:11.901 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (33 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:11.902 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:205
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)]
04:24:11.903 [main] DEBUG tests.output - First set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:24:11.904 [main] DEBUG tests.output - Second set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:24:11.904 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:205 otherwise the patch would be "true" or "false"
04:24:11.904 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[205 0.48038446141526137
04:24:11.904 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[201 0.48038446141526137
04:24:11.905 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:12,087 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:12,087 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:12,234 DEBUG spoon.support.StandardEnvironment - built in 147 ms
2017-03-29 04:24:12,234 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:12,234 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:12.236 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:12,236 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:12.238 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:12.242 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:12.554 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:12.555 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:12,735 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:12,736 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:12,885 DEBUG spoon.support.StandardEnvironment - built in 150 ms
2017-03-29 04:24:12,886 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:12,886 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:12.887 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:12,888 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:24:12.896 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:12.901 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:13.117 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:13.165 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:24:13.786 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
04:24:13.786 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1 started...]
04:24:13.864 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
04:24:13.865 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2 started...]
04:24:13.896 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
04:24:13.896 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:24:13.920 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
04:24:13.921 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath started...]
04:24:13.954 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
04:24:13.954 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar started...]
04:24:14.020 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
04:24:14.021 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported started...]
04:24:14.038 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
04:24:14.038 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch started...]
04:24:14.076 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
04:24:14.076 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:24:14.142 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
04:24:14.143 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase started...]
04:24:14.160 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
04:24:14.161 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits started...]
04:24:14.179 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
04:24:14.179 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction started...]
04:24:14.200 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
04:24:14.200 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2 started...]
04:24:14.224 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
04:24:14.224 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3 started...]
04:24:14.246 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
04:24:14.246 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:24:14.375 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
04:24:14.375 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:24:14.439 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
04:24:14.439 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:24:14.456 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
04:24:14.456 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors started...]
04:24:14.475 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
04:24:14.475 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits started...]
04:24:14.491 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
04:24:14.492 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop started...]
04:24:14.514 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
04:24:14.514 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits started...]
04:24:14.531 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
04:24:14.532 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:24:14.617 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
04:24:14.618 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp started...]
04:24:14.635 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
04:24:14.636 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:14.657 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#24. FAILED]
04:24:14.657 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop started...]
04:24:14.677 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
04:24:14.677 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:14.695 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#26. FAILED]
04:24:14.695 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2 started...]
04:24:14.716 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
04:24:14.716 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:14.735 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#28. FAILED]
04:24:14.735 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition started...]
04:24:14.750 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
04:24:14.751 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7 started...]
04:24:14.781 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
04:24:14.781 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:24:14.800 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
04:24:14.800 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:24:14.820 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
04:24:14.820 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#33. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:24:14.869 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
04:24:14.869 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#34. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:24:14.885 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
04:24:14.885 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#35. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:24:14.902 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
04:24:14.903 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#36. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:24:14.920 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
04:24:14.920 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#37. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:24:14.936 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
04:24:14.936 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#38. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:24:14.993 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
04:24:14.993 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#39. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:24:15.040 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
04:24:15.041 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#40. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:24:15.089 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
04:24:15.090 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#41. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:24:15.122 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
04:24:15.123 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#42. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:24:15.170 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
04:24:15.171 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#43. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:24:15.199 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
04:24:15.199 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#44. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12 started...]
04:24:15.214 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
04:24:15.214 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#45. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:24:15.233 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
04:24:15.234 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#46. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:24:15.248 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
04:24:15.248 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#47. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath started...]
04:24:15.263 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
04:24:15.264 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#48. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a started...]
04:24:15.285 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
04:24:15.285 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#49. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:24:15.306 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
04:24:15.307 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#50. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle started...]
04:24:15.320 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
04:24:15.321 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#51. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:24:15.336 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
04:24:15.337 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#52. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions started...]
04:24:15.350 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
04:24:15.351 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#53. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:24:15.365 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
04:24:15.366 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#54. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse started...]
04:24:15.378 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
04:24:15.379 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#55. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:24:15.390 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
04:24:15.391 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#56. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:24:15.403 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
04:24:15.404 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#57. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions started...]
04:24:15.416 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
04:24:15.416 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#58. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:24:15.430 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
04:24:15.431 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#59. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp started...]
04:24:15.454 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
04:24:15.454 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#60. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:24:15.474 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
04:24:15.475 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#61. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:24:15.508 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
04:24:15.508 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#62. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement started...]
04:24:15.531 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
04:24:15.531 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#63. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10 started...]
04:24:15.546 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
04:24:15.546 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#64. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:24:15.559 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
04:24:15.560 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#65. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2 started...]
04:24:15.573 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
04:24:15.574 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#66. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:24:15.587 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
04:24:15.588 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#67. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:24:15.601 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
04:24:15.601 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#68. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:24:15.613 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
04:24:15.613 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#69. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:24:15.626 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
04:24:15.626 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#70. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign started...]
04:24:15.636 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
04:24:15.637 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#71. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:24:15.649 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
04:24:15.649 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#72. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath started...]
04:24:15.661 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
04:24:15.661 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#73. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition started...]
04:24:15.689 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
04:24:15.690 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#74. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:24:15.722 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
04:24:15.724 [Thread-31] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (2560 ms)
<> Total tests run: 74
<> Ignored tests: 0
<> Failed tests: 3
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:15.773 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:16.334 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
04:24:16.334 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (561 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:16.347 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:16.373 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
04:24:16.374 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:16.383 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:16.409 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
04:24:16.409 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:16.418 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:16.446 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. SUCCESS]
04:24:16.447 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1
04:24:16.447 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:16.456 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:16.490 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. SUCCESS]
04:24:16.491 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a
04:24:16.491 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (35 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:16.500 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:16.534 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. SUCCESS]
04:24:16.534 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3
04:24:16.534 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (34 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:16.549 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:24:16.618 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#7. SUCCESS]
04:24:16.619 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn
04:24:16.619 [Thread-38] WARN  f.i.l.c.t.SpecificationTestCasesListener - Inconsistent input found when collecting specifications
04:24:16.619 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (70 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:16.628 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:24:16.757 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#8. SUCCESS]
04:24:16.757 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign
04:24:16.758 [Thread-39] WARN  f.i.l.c.t.SpecificationTestCasesListener - Inconsistent input found when collecting specifications
04:24:16.758 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (130 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:16.767 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:16.788 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#9. FAILED]
04:24:16.789 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:16.802 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:16.824 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#10. FAILED]
04:24:16.824 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:16.833 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:16.855 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#11. FAILED]
04:24:16.856 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (23 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:16.865 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:24:16.894 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#12. SUCCESS]
04:24:16.895 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13
04:24:16.895 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (30 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:16.904 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:24:16.923 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#13. SUCCESS]
04:24:16.923 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2
04:24:16.923 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:16.933 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:24:16.972 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#14. SUCCESS]
04:24:16.973 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698
04:24:16.973 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:16.981 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:24:17.044 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#15. SUCCESS]
04:24:17.044 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels
04:24:17.044 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (63 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:17.050 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#16. com.google.javascript.jscomp.CheckPathsBetweenNodesTest#testSomePath1 started...]
04:24:17.054 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#16. SUCCESS]
04:24:17.054 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.CheckPathsBetweenNodesTest#testSomePath1
04:24:17.055 [Thread-47] WARN  f.i.l.c.t.SpecificationTestCasesListener - Inconsistent input found when collecting specifications
04:24:17.055 [Thread-47] WARN  f.i.l.c.t.SpecificationTestCasesListener - Inconsistent input found when collecting specifications
04:24:17.055 [Thread-47] WARN  f.i.l.c.t.SpecificationTestCasesListener - Inconsistent input found when collecting specifications
04:24:17.055 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:17.058 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#17. com.google.javascript.jscomp.CheckPathsBetweenNodesTest#testSomePath2 started...]
04:24:17.060 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#17. SUCCESS]
04:24:17.060 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.CheckPathsBetweenNodesTest#testSomePath2
04:24:17.060 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:17.062 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#18. com.google.javascript.jscomp.CheckPathsBetweenNodesTest#testNonInclusive started...]
04:24:17.064 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#18. SUCCESS]
04:24:17.065 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.CheckPathsBetweenNodesTest#testNonInclusive
04:24:17.065 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:17.071 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#19. com.google.javascript.jscomp.CheckPathsBetweenNodesTest#testSomePathRevisiting started...]
04:24:17.074 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#19. SUCCESS]
04:24:17.075 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.CheckPathsBetweenNodesTest#testSomePathRevisiting
04:24:17.075 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:17.075 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 1 input values set(s). There are not enough tests for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:201 otherwise the patch would be "true" or "false"
04:24:17.076 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in com.google.javascript.jscomp.CheckPathsBetweenNodes{checkSomePathsWithoutBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z[201 0.48038446141526137
04:24:17.076 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{somePathsSatisfyPredicate()Z[125 0.48038446141526137
04:24:17.076 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:17,258 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:17,259 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:17,407 DEBUG spoon.support.StandardEnvironment - built in 149 ms
2017-03-29 04:24:17,408 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:17,408 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:17.409 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:17,409 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:17.411 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:17.415 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:17.607 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:17.607 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:125.
04:24:17.608 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{somePathsSatisfyPredicate()Z[124 0.48038446141526137
04:24:17.608 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:17,794 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:17,795 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:17,944 DEBUG spoon.support.StandardEnvironment - built in 149 ms
2017-03-29 04:24:17,944 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:17,944 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:17.946 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:17,946 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:17.948 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:17.952 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:18.144 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:18.145 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:124.
04:24:18.145 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{somePathsSatisfyPredicate()Z[123 0.48038446141526137
04:24:18.145 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:18,328 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:18,328 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:18,477 DEBUG spoon.support.StandardEnvironment - built in 149 ms
2017-03-29 04:24:18,477 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:18,478 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:18.479 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:18,479 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:18.481 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:18.485 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:18.675 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:18.676 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:123.
04:24:18.676 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{somePathsSatisfyPredicate()Z[122 0.48038446141526137
04:24:18.676 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:18,858 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:18,859 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:24:19,006 DEBUG spoon.support.StandardEnvironment - built in 147 ms
2017-03-29 04:24:19,006 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:19,006 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:19.008 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:24:19,008 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:19.009 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:24:19.013 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:19.202 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:24:19.203 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:122.
04:24:19.203 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Node{checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;[1427 0.4629100498862757
04:24:19.203 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:24:19,386 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:24:19,387 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:24:19,719 DEBUG spoon.support.StandardEnvironment - built in 333 ms
2017-03-29 04:24:19,720 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:19,720 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:19.721 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Node]
2017-03-29 04:24:19,721 DEBUG spoon.support.StandardEnvironment - processing 'Node' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:19.733 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Node]
04:24:20.153 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:20.460 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (13 classes)]
04:24:20.461 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Node:1427.
04:24:20.461 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables{enterScope(Lcom/google/javascript/jscomp/NodeTraversal;)V[166 0.4472135954999579
04:24:20.461 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:20,645 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:20,646 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:20,857 DEBUG spoon.support.StandardEnvironment - built in 211 ms
2017-03-29 04:24:20,857 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:20,857 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:20.858 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:20,859 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:20.861 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:20.874 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:21.144 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:21.144 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables:166.
04:24:21.144 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.DataFlowAnalysis{computeEscaped(Lcom/google/javascript/jscomp/Scope;Ljava/util/Set;Lcom/google/javascript/jscomp/AbstractCompiler;)V[575 0.43301270189221935
04:24:21.144 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DataFlowAnalysis.java]
2017-03-29 04:24:21,339 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DataFlowAnalysis.java]
2017-03-29 04:24:21,340 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/DataFlowAnalysis.java]
2017-03-29 04:24:21,562 DEBUG spoon.support.StandardEnvironment - built in 222 ms
2017-03-29 04:24:21,562 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:21,562 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:21.563 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.DataFlowAnalysis]
2017-03-29 04:24:21,564 DEBUG spoon.support.StandardEnvironment - processing 'DataFlowAnalysis' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:21.566 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.DataFlowAnalysis]
04:24:21.584 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:21.881 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (6 classes)]
04:24:21.881 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.DataFlowAnalysis:575.
04:24:21.881 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate{inlineVariable()V[429 0.42008402520840293
04:24:21.881 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:22,067 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:22,068 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:22,279 DEBUG spoon.support.StandardEnvironment - built in 212 ms
2017-03-29 04:24:22,279 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:22,290 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:22.291 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:22,291 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:22.293 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:22.306 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:22.719 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:22.719 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:23,139 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:23,139 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:23,357 DEBUG spoon.support.StandardEnvironment - built in 218 ms
2017-03-29 04:24:23,357 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:23,358 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:23.359 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:23,359 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:24:23.365 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:23.377 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:23.675 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:23.721 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:24:24.323 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
04:24:24.324 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1 started...]
04:24:24.404 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
04:24:24.404 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2 started...]
04:24:24.435 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
04:24:24.435 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:24:24.459 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
04:24:24.459 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath started...]
04:24:24.491 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
04:24:24.492 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar started...]
04:24:24.557 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
04:24:24.557 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported started...]
04:24:24.574 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
04:24:24.574 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch started...]
04:24:24.610 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
04:24:24.611 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:24:24.675 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
04:24:24.675 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase started...]
04:24:24.694 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
04:24:24.695 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits started...]
04:24:24.712 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
04:24:24.713 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction started...]
04:24:24.733 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
04:24:24.734 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2 started...]
04:24:24.773 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
04:24:24.774 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3 started...]
04:24:24.795 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
04:24:24.795 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:24:24.921 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
04:24:24.922 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:24:24.984 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
04:24:24.984 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:24:25.000 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
04:24:25.000 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors started...]
04:24:25.018 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
04:24:25.018 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits started...]
04:24:25.034 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
04:24:25.035 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop started...]
04:24:25.056 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
04:24:25.057 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits started...]
04:24:25.074 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
04:24:25.074 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:24:25.158 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
04:24:25.159 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp started...]
04:24:25.176 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
04:24:25.177 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:25.197 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#24. FAILED]
04:24:25.198 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop started...]
04:24:25.217 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
04:24:25.217 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:25.234 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#26. FAILED]
04:24:25.235 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2 started...]
04:24:25.255 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
04:24:25.255 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:25.273 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#28. FAILED]
04:24:25.274 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition started...]
04:24:25.289 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
04:24:25.289 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7 started...]
04:24:25.319 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
04:24:25.320 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:24:25.337 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
04:24:25.338 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:24:25.357 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
04:24:25.358 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#33. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:24:25.406 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
04:24:25.406 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#34. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:24:25.421 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
04:24:25.422 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#35. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:24:25.439 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
04:24:25.439 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#36. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:24:25.456 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
04:24:25.456 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#37. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:24:25.472 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
04:24:25.472 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#38. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:24:25.524 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
04:24:25.524 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#39. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:24:25.570 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
04:24:25.570 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#40. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:24:25.617 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
04:24:25.617 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#41. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:24:25.648 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
04:24:25.648 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#42. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:24:25.697 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
04:24:25.698 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#43. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:24:25.725 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
04:24:25.725 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#44. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12 started...]
04:24:25.739 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
04:24:25.739 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#45. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:24:25.758 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
04:24:25.759 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#46. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:24:25.772 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
04:24:25.772 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#47. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath started...]
04:24:25.787 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
04:24:25.788 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#48. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a started...]
04:24:25.808 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
04:24:25.808 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#49. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:24:25.830 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
04:24:25.830 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#50. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle started...]
04:24:25.843 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
04:24:25.844 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#51. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:24:25.859 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
04:24:25.860 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#52. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions started...]
04:24:25.873 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
04:24:25.873 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#53. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:24:25.887 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
04:24:25.887 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#54. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse started...]
04:24:25.899 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
04:24:25.900 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#55. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:24:25.911 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
04:24:25.911 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#56. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:24:25.923 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
04:24:25.924 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#57. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions started...]
04:24:25.935 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
04:24:25.936 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#58. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:24:25.950 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
04:24:25.950 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#59. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp started...]
04:24:25.972 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
04:24:25.973 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#60. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:24:25.993 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
04:24:25.993 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#61. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:24:26.026 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
04:24:26.026 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#62. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement started...]
04:24:26.049 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
04:24:26.049 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#63. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10 started...]
04:24:26.062 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
04:24:26.063 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#64. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:24:26.075 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
04:24:26.076 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#65. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2 started...]
04:24:26.089 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
04:24:26.089 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#66. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:24:26.102 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
04:24:26.103 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#67. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:24:26.116 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
04:24:26.116 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#68. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:24:26.127 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
04:24:26.128 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#69. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:24:26.140 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
04:24:26.140 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#70. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign started...]
04:24:26.150 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
04:24:26.150 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#71. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:24:26.161 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
04:24:26.162 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#72. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath started...]
04:24:26.173 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
04:24:26.173 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#73. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition started...]
04:24:26.198 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
04:24:26.198 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#74. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:24:26.230 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
04:24:26.231 [Thread-51] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (2510 ms)
<> Total tests run: 74
<> Ignored tests: 0
<> Failed tests: 3
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:26.276 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:26.832 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
04:24:26.832 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (556 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:26.840 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:26.866 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
04:24:26.867 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:26.874 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:26.899 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
04:24:26.900 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (25 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:26.907 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:26.931 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
04:24:26.931 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (24 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:26.939 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:26.972 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. FAILED]
04:24:26.972 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (33 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:26.993 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:27.021 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. FAILED]
04:24:27.021 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:27.022 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate:429
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)]
04:24:27.023 [main] DEBUG tests.output - First set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:24:27.023 [main] DEBUG tests.output - Second set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:24:27.024 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate:429 otherwise the patch would be "true" or "false"
04:24:27.024 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate{inlineVariable()V[429 0.42008402520840293
04:24:27.024 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate{inlineVariable()V[428 0.42008402520840293
04:24:27.024 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:27,218 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:27,219 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:27,431 DEBUG spoon.support.StandardEnvironment - built in 212 ms
2017-03-29 04:24:27,449 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:27,450 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:27.451 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:27,451 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:27.453 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:27.466 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:27.734 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:27.734 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate:428.
04:24:27.735 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate{inlineVariable()V[427 0.42008402520840293
04:24:27.735 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:27,914 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:27,915 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:28,129 DEBUG spoon.support.StandardEnvironment - built in 214 ms
2017-03-29 04:24:28,129 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:28,129 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:28.130 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:28,131 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:28.133 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:28.145 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:28.418 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:28.419 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate:427.
04:24:28.419 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate{inlineVariable()V[424 0.42008402520840293
04:24:28.419 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:28,603 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:28,603 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:28,813 DEBUG spoon.support.StandardEnvironment - built in 210 ms
2017-03-29 04:24:28,813 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:28,813 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:28.814 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:28,815 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:28.817 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:28.829 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:29.098 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:29.098 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate:424.
04:24:29.098 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate{inlineVariable()V[423 0.42008402520840293
04:24:29.099 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:29,281 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:29,282 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:29,489 DEBUG spoon.support.StandardEnvironment - built in 207 ms
2017-03-29 04:24:29,490 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:29,490 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:29.491 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:29,491 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:29.494 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:29.506 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:29.775 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:29.775 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate:423.
04:24:29.775 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate{inlineVariable()V[421 0.42008402520840293
04:24:29.775 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:29,958 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:29,958 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:30,162 DEBUG spoon.support.StandardEnvironment - built in 204 ms
2017-03-29 04:24:30,162 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:30,163 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:30.164 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:30,164 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:30.166 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:30.178 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:30.448 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:30.449 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate:421.
04:24:30.449 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate{inlineVariable()V[420 0.42008402520840293
04:24:30.449 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:30,631 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:30,632 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:30,835 DEBUG spoon.support.StandardEnvironment - built in 203 ms
2017-03-29 04:24:30,836 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:30,836 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:30.837 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:30,837 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:30.839 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:30.852 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:31.116 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:31.117 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate:420.
04:24:31.117 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$1{apply(Lcom/google/javascript/rhino/Node;)Z[116 0.408248290463863
04:24:31.117 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:31,301 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:31,301 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:31,505 DEBUG spoon.support.StandardEnvironment - built in 204 ms
2017-03-29 04:24:31,506 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:31,506 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:31.507 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:31,507 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:31.509 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:31.522 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:31.785 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:31.786 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$1:116.
04:24:31.786 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$1{apply(Lcom/google/javascript/rhino/Node;)Z[111 0.408248290463863
04:24:31.786 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:31,968 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:31,968 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:32,177 DEBUG spoon.support.StandardEnvironment - built in 209 ms
2017-03-29 04:24:32,177 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:32,178 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:32.179 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:32,179 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:32.181 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:32.193 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:32.454 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:32.454 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$1:111.
04:24:32.454 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$1{apply(Lcom/google/javascript/rhino/Node;)Z[107 0.408248290463863
04:24:32.455 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:32,636 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:32,637 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:32,862 DEBUG spoon.support.StandardEnvironment - built in 225 ms
2017-03-29 04:24:32,862 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:32,863 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:32.864 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:32,864 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:32.866 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:32.878 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:33.137 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:33.138 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:33,321 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:33,321 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:33,526 DEBUG spoon.support.StandardEnvironment - built in 205 ms
2017-03-29 04:24:33,526 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:33,527 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:33.528 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:33,528 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:24:33.544 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:33.556 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:33.826 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:33.878 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:24:34.541 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
04:24:34.541 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1 started...]
04:24:34.617 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
04:24:34.618 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2 started...]
04:24:34.648 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
04:24:34.648 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:24:34.671 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
04:24:34.671 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath started...]
04:24:34.703 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
04:24:34.704 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar started...]
04:24:34.769 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
04:24:34.769 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported started...]
04:24:34.785 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
04:24:34.786 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch started...]
04:24:34.822 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
04:24:34.822 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:24:34.887 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
04:24:34.887 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase started...]
04:24:34.904 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
04:24:34.904 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits started...]
04:24:34.921 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
04:24:34.922 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction started...]
04:24:34.942 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
04:24:34.942 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2 started...]
04:24:34.965 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
04:24:34.966 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3 started...]
04:24:34.986 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
04:24:34.987 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:24:35.254 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
04:24:35.255 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:24:35.323 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
04:24:35.323 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:24:35.339 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
04:24:35.339 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors started...]
04:24:35.357 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
04:24:35.357 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits started...]
04:24:35.373 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
04:24:35.373 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop started...]
04:24:35.395 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
04:24:35.395 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits started...]
04:24:35.412 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
04:24:35.412 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:24:35.495 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
04:24:35.495 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp started...]
04:24:35.513 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
04:24:35.513 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:35.534 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#24. FAILED]
04:24:35.534 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop started...]
04:24:35.553 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
04:24:35.553 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:35.570 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#26. FAILED]
04:24:35.571 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2 started...]
04:24:35.590 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
04:24:35.591 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:35.609 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#28. FAILED]
04:24:35.609 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition started...]
04:24:35.624 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
04:24:35.624 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7 started...]
04:24:35.654 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
04:24:35.654 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:24:35.671 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
04:24:35.672 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:24:35.691 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
04:24:35.691 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#33. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:24:35.738 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
04:24:35.739 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#34. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:24:35.754 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
04:24:35.754 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#35. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:24:35.771 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
04:24:35.772 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#36. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:24:35.788 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
04:24:35.789 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#37. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:24:35.804 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
04:24:35.804 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#38. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:24:35.856 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
04:24:35.857 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#39. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:24:35.902 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
04:24:35.902 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#40. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:24:35.948 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
04:24:35.948 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#41. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:24:35.979 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
04:24:35.979 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#42. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:24:36.024 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
04:24:36.024 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#43. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:24:36.051 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
04:24:36.051 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#44. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12 started...]
04:24:36.065 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
04:24:36.065 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#45. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:24:36.084 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
04:24:36.085 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#46. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:24:36.098 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
04:24:36.098 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#47. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath started...]
04:24:36.113 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
04:24:36.114 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#48. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a started...]
04:24:36.134 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
04:24:36.134 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#49. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:24:36.156 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
04:24:36.156 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#50. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle started...]
04:24:36.170 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
04:24:36.170 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#51. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:24:36.187 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
04:24:36.187 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#52. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions started...]
04:24:36.201 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
04:24:36.202 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#53. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:24:36.217 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
04:24:36.218 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#54. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse started...]
04:24:36.230 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
04:24:36.231 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#55. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:24:36.244 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
04:24:36.244 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#56. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:24:36.258 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
04:24:36.258 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#57. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions started...]
04:24:36.271 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
04:24:36.271 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#58. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:24:36.286 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
04:24:36.287 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#59. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp started...]
04:24:36.311 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
04:24:36.312 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#60. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:24:36.333 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
04:24:36.334 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#61. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:24:36.369 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
04:24:36.369 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#62. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement started...]
04:24:36.395 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
04:24:36.395 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#63. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10 started...]
04:24:36.409 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
04:24:36.409 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#64. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:24:36.422 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
04:24:36.423 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#65. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2 started...]
04:24:36.438 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
04:24:36.438 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#66. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:24:36.453 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
04:24:36.453 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#67. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:24:36.468 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
04:24:36.469 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#68. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:24:36.481 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
04:24:36.482 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#69. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:24:36.495 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
04:24:36.495 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#70. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign started...]
04:24:36.506 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
04:24:36.507 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#71. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:24:36.519 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
04:24:36.520 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#72. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath started...]
04:24:36.531 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
04:24:36.532 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#73. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition started...]
04:24:36.557 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
04:24:36.557 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#74. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:24:36.591 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
04:24:36.592 [Thread-58] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (2715 ms)
<> Total tests run: 74
<> Ignored tests: 0
<> Failed tests: 3
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:36.636 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:37.201 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
04:24:37.201 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (565 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:37.209 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:37.236 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
04:24:37.237 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:37.244 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:37.269 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
04:24:37.270 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:37.277 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:37.303 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
04:24:37.304 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:37.311 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:37.342 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. FAILED]
04:24:37.343 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:37.350 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:37.384 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. FAILED]
04:24:37.384 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (34 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:37.386 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$1:107
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)]
04:24:37.386 [main] DEBUG tests.output - First set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:24:37.386 [main] DEBUG tests.output - Second set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:24:37.387 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$1:107 otherwise the patch would be "true" or "false"
04:24:37.387 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in com.google.javascript.jscomp.FlowSensitiveInlineVariables$1{apply(Lcom/google/javascript/rhino/Node;)Z[107 0.408248290463863
04:24:37.387 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$1{apply(Lcom/google/javascript/rhino/Node;)Z[103 0.408248290463863
04:24:37.387 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:37,573 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:37,574 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:37,776 DEBUG spoon.support.StandardEnvironment - built in 202 ms
2017-03-29 04:24:37,777 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:37,793 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:37.794 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:37,794 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:37.797 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:37.808 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:38.083 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:38.084 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:38,267 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:38,267 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:38,472 DEBUG spoon.support.StandardEnvironment - built in 205 ms
2017-03-29 04:24:38,472 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:38,472 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:38.473 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:38,473 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:24:38.489 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:38.500 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:38.765 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:38.810 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:24:39.396 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
04:24:39.396 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1 started...]
04:24:39.473 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
04:24:39.473 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2 started...]
04:24:39.503 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
04:24:39.503 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:24:39.526 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
04:24:39.526 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath started...]
04:24:39.558 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
04:24:39.558 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar started...]
04:24:39.622 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
04:24:39.622 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported started...]
04:24:39.638 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
04:24:39.639 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch started...]
04:24:39.674 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
04:24:39.675 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:24:39.738 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
04:24:39.738 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase started...]
04:24:39.754 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
04:24:39.755 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits started...]
04:24:39.773 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
04:24:39.773 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction started...]
04:24:39.793 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
04:24:39.794 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2 started...]
04:24:39.817 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
04:24:39.818 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3 started...]
04:24:39.839 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
04:24:39.839 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:24:39.963 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
04:24:39.963 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:24:40.025 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
04:24:40.025 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:24:40.041 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
04:24:40.041 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors started...]
04:24:40.058 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
04:24:40.059 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits started...]
04:24:40.075 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
04:24:40.075 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop started...]
04:24:40.097 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
04:24:40.097 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits started...]
04:24:40.113 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
04:24:40.114 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:24:40.198 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
04:24:40.198 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp started...]
04:24:40.215 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
04:24:40.216 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:40.236 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#24. FAILED]
04:24:40.237 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop started...]
04:24:40.255 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
04:24:40.256 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:40.273 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#26. FAILED]
04:24:40.273 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2 started...]
04:24:40.293 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
04:24:40.294 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:40.312 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#28. FAILED]
04:24:40.312 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition started...]
04:24:40.327 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
04:24:40.328 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7 started...]
04:24:40.357 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
04:24:40.358 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:24:40.376 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
04:24:40.376 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:24:40.395 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
04:24:40.396 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#33. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:24:40.443 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
04:24:40.444 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#34. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:24:40.459 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
04:24:40.459 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#35. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:24:40.476 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
04:24:40.476 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#36. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:24:40.493 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
04:24:40.493 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#37. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:24:40.508 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
04:24:40.508 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#38. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:24:40.560 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
04:24:40.560 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#39. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:24:40.605 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
04:24:40.606 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#40. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:24:40.651 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
04:24:40.652 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#41. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:24:40.681 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
04:24:40.681 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#42. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:24:40.724 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
04:24:40.725 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#43. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:24:40.752 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
04:24:40.752 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#44. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12 started...]
04:24:40.765 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
04:24:40.766 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#45. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:24:40.786 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
04:24:40.786 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#46. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:24:40.799 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
04:24:40.799 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#47. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath started...]
04:24:40.814 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
04:24:40.814 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#48. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a started...]
04:24:40.834 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
04:24:40.834 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#49. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:24:40.855 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
04:24:40.855 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#50. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle started...]
04:24:40.868 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
04:24:40.868 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#51. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:24:40.884 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
04:24:40.884 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#52. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions started...]
04:24:40.897 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
04:24:40.897 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#53. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:24:40.911 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
04:24:40.911 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#54. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse started...]
04:24:40.923 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
04:24:40.923 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#55. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:24:40.934 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
04:24:40.934 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#56. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:24:40.947 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
04:24:40.947 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#57. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions started...]
04:24:40.958 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
04:24:40.959 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#58. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:24:40.972 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
04:24:40.972 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#59. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp started...]
04:24:40.995 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
04:24:40.996 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#60. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:24:41.015 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
04:24:41.016 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#61. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:24:41.048 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
04:24:41.048 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#62. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement started...]
04:24:41.071 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
04:24:41.071 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#63. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10 started...]
04:24:41.083 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
04:24:41.084 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#64. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:24:41.095 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
04:24:41.096 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#65. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2 started...]
04:24:41.109 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
04:24:41.109 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#66. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:24:41.122 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
04:24:41.122 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#67. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:24:41.135 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
04:24:41.135 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#68. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:24:41.146 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
04:24:41.147 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#69. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:24:41.158 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
04:24:41.158 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#70. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign started...]
04:24:41.168 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
04:24:41.168 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#71. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:24:41.180 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
04:24:41.180 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#72. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath started...]
04:24:41.191 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
04:24:41.191 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#73. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition started...]
04:24:41.215 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
04:24:41.216 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#74. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:24:41.247 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
04:24:41.248 [Thread-65] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (2439 ms)
<> Total tests run: 74
<> Ignored tests: 0
<> Failed tests: 3
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:41.292 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:41.843 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
04:24:41.844 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (551 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:41.851 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:41.877 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
04:24:41.877 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:41.885 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:41.909 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
04:24:41.910 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (24 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:41.917 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:41.940 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
04:24:41.941 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (23 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:41.948 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:41.979 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. FAILED]
04:24:41.980 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:41.987 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:42.021 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. FAILED]
04:24:42.021 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (34 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:42.023 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$1:103
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)]
04:24:42.023 [main] DEBUG tests.output - First set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:24:42.023 [main] DEBUG tests.output - Second set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:24:42.024 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$1:103 otherwise the patch would be "true" or "false"
04:24:42.024 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in com.google.javascript.jscomp.FlowSensitiveInlineVariables$1{apply(Lcom/google/javascript/rhino/Node;)Z[103 0.408248290463863
04:24:42.024 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$1{apply(Ljava/lang/Object;)Z[87 0.39735970711951313
04:24:42.024 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:42,206 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:42,207 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:42,410 DEBUG spoon.support.StandardEnvironment - built in 204 ms
2017-03-29 04:24:42,411 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:42,411 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:42.412 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:42,412 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:42.414 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:42.425 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:42.679 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:42.679 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$1:87.
04:24:42.679 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$1{apply(Lcom/google/javascript/rhino/Node;)Z[99 0.39735970711951313
04:24:42.679 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:42,862 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:42,863 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:43,087 DEBUG spoon.support.StandardEnvironment - built in 225 ms
2017-03-29 04:24:43,087 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:43,087 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:43.088 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:43,088 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:43.090 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:43.101 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:43.355 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:43.356 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:43,536 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:43,536 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:43,738 DEBUG spoon.support.StandardEnvironment - built in 202 ms
2017-03-29 04:24:43,738 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:43,738 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:43.740 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:43,740 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:24:43.755 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:43.766 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:44.028 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:44.072 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:24:44.663 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
04:24:44.664 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1 started...]
04:24:44.740 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
04:24:44.740 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2 started...]
04:24:44.770 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
04:24:44.770 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:24:44.793 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
04:24:44.793 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath started...]
04:24:44.825 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
04:24:44.825 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar started...]
04:24:44.889 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
04:24:44.889 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported started...]
04:24:44.905 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
04:24:44.906 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch started...]
04:24:44.941 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
04:24:44.942 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:24:45.004 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
04:24:45.004 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase started...]
04:24:45.020 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
04:24:45.021 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits started...]
04:24:45.039 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
04:24:45.039 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction started...]
04:24:45.059 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
04:24:45.059 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2 started...]
04:24:45.082 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
04:24:45.082 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3 started...]
04:24:45.103 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
04:24:45.103 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:24:45.241 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
04:24:45.241 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:24:45.302 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
04:24:45.303 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:24:45.318 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
04:24:45.319 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors started...]
04:24:45.336 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
04:24:45.336 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits started...]
04:24:45.352 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
04:24:45.352 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop started...]
04:24:45.373 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
04:24:45.374 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits started...]
04:24:45.390 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
04:24:45.391 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:24:45.473 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
04:24:45.474 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp started...]
04:24:45.491 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
04:24:45.491 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:45.512 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#24. FAILED]
04:24:45.512 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop started...]
04:24:45.531 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
04:24:45.531 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:45.548 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#26. FAILED]
04:24:45.549 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2 started...]
04:24:45.568 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
04:24:45.569 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:45.587 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#28. FAILED]
04:24:45.587 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition started...]
04:24:45.602 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
04:24:45.602 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7 started...]
04:24:45.632 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
04:24:45.632 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:24:45.650 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
04:24:45.650 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:24:45.669 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
04:24:45.669 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#33. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:24:45.716 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
04:24:45.716 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#34. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:24:45.731 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
04:24:45.732 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#35. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:24:45.748 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
04:24:45.749 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#36. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:24:45.765 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
04:24:45.766 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#37. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:24:45.781 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
04:24:45.781 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#38. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:24:45.832 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
04:24:45.832 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#39. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:24:45.877 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
04:24:45.878 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#40. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:24:45.923 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
04:24:45.923 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#41. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:24:45.954 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
04:24:45.954 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#42. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:24:45.998 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
04:24:45.999 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#43. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:24:46.025 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
04:24:46.025 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#44. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12 started...]
04:24:46.039 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
04:24:46.040 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#45. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:24:46.059 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
04:24:46.059 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#46. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:24:46.073 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
04:24:46.073 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#47. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath started...]
04:24:46.088 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
04:24:46.089 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#48. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a started...]
04:24:46.110 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
04:24:46.110 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#49. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:24:46.133 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
04:24:46.133 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#50. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle started...]
04:24:46.146 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
04:24:46.147 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#51. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:24:46.162 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
04:24:46.162 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#52. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions started...]
04:24:46.175 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
04:24:46.175 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#53. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:24:46.189 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
04:24:46.189 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#54. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse started...]
04:24:46.201 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
04:24:46.201 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#55. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:24:46.212 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
04:24:46.212 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#56. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:24:46.224 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
04:24:46.225 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#57. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions started...]
04:24:46.236 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
04:24:46.237 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#58. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:24:46.250 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
04:24:46.250 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#59. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp started...]
04:24:46.272 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
04:24:46.272 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#60. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:24:46.292 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
04:24:46.292 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#61. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:24:46.324 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
04:24:46.325 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#62. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement started...]
04:24:46.346 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
04:24:46.347 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#63. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10 started...]
04:24:46.360 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
04:24:46.361 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#64. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:24:46.372 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
04:24:46.373 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#65. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2 started...]
04:24:46.386 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
04:24:46.386 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#66. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:24:46.399 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
04:24:46.399 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#67. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:24:46.412 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
04:24:46.412 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#68. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:24:46.423 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
04:24:46.423 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#69. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:24:46.435 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
04:24:46.435 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#70. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign started...]
04:24:46.445 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
04:24:46.445 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#71. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:24:46.456 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
04:24:46.457 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#72. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath started...]
04:24:46.467 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
04:24:46.468 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#73. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition started...]
04:24:46.492 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
04:24:46.492 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#74. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:24:46.523 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
04:24:46.524 [Thread-72] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (2452 ms)
<> Total tests run: 74
<> Ignored tests: 0
<> Failed tests: 3
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:46.567 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:47.121 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
04:24:47.122 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (554 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:47.129 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:47.156 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
04:24:47.157 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:47.164 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:47.189 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
04:24:47.189 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (25 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:47.197 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:47.220 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
04:24:47.220 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (23 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:47.228 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:47.259 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. FAILED]
04:24:47.260 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:47.268 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:47.301 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. FAILED]
04:24:47.301 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (34 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:47.303 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$1:99
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)]
04:24:47.303 [main] DEBUG tests.output - First set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:24:47.303 [main] DEBUG tests.output - Second set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:24:47.304 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$1:99 otherwise the patch would be "true" or "false"
04:24:47.304 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in com.google.javascript.jscomp.FlowSensitiveInlineVariables$1{apply(Lcom/google/javascript/rhino/Node;)Z[99 0.39735970711951313
04:24:47.304 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$1{apply(Lcom/google/javascript/rhino/Node;)Z[92 0.39735970711951313
04:24:47.304 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:47,798 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:47,799 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:48,005 DEBUG spoon.support.StandardEnvironment - built in 206 ms
2017-03-29 04:24:48,005 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:48,029 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:48.030 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:48,030 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:48.032 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:48.043 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:48.299 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:48.300 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:48,492 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:48,492 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:48,715 DEBUG spoon.support.StandardEnvironment - built in 223 ms
2017-03-29 04:24:48,715 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:48,715 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:48.716 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:48,717 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:24:48.732 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:48.743 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:49.006 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:49.051 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:24:49.640 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
04:24:49.641 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1 started...]
04:24:49.718 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
04:24:49.718 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2 started...]
04:24:49.748 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
04:24:49.749 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:24:49.771 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
04:24:49.771 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath started...]
04:24:49.803 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
04:24:49.803 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar started...]
04:24:49.866 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
04:24:49.866 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported started...]
04:24:49.882 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
04:24:49.883 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch started...]
04:24:49.918 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
04:24:49.918 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:24:49.980 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
04:24:49.980 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase started...]
04:24:49.997 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
04:24:49.997 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits started...]
04:24:50.015 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
04:24:50.015 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction started...]
04:24:50.035 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
04:24:50.036 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2 started...]
04:24:50.069 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
04:24:50.070 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3 started...]
04:24:50.090 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
04:24:50.091 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:24:50.214 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
04:24:50.214 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:24:50.275 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
04:24:50.275 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:24:50.291 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
04:24:50.291 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors started...]
04:24:50.308 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
04:24:50.309 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits started...]
04:24:50.326 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
04:24:50.326 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop started...]
04:24:50.348 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
04:24:50.348 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits started...]
04:24:50.365 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
04:24:50.365 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:24:50.448 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
04:24:50.448 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp started...]
04:24:50.466 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
04:24:50.466 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:50.487 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#24. FAILED]
04:24:50.487 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop started...]
04:24:50.506 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
04:24:50.506 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:50.523 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#26. FAILED]
04:24:50.524 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2 started...]
04:24:50.543 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
04:24:50.544 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:50.561 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#28. FAILED]
04:24:50.562 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition started...]
04:24:50.577 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
04:24:50.577 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7 started...]
04:24:50.606 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
04:24:50.607 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:24:50.624 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
04:24:50.624 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:24:50.643 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
04:24:50.644 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#33. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:24:50.691 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
04:24:50.691 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#34. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:24:50.706 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
04:24:50.706 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#35. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:24:50.723 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
04:24:50.723 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#36. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:24:50.740 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
04:24:50.740 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#37. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:24:50.755 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
04:24:50.756 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#38. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:24:50.807 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
04:24:50.807 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#39. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:24:50.852 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
04:24:50.852 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#40. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:24:50.898 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
04:24:50.898 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#41. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:24:50.929 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
04:24:50.929 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#42. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:24:50.973 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
04:24:50.974 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#43. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:24:51.000 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
04:24:51.001 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#44. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12 started...]
04:24:51.017 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
04:24:51.017 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#45. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:24:51.060 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
04:24:51.060 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#46. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:24:51.074 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
04:24:51.074 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#47. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath started...]
04:24:51.089 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
04:24:51.089 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#48. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a started...]
04:24:51.109 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
04:24:51.109 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#49. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:24:51.132 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
04:24:51.132 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#50. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle started...]
04:24:51.145 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
04:24:51.145 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#51. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:24:51.161 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
04:24:51.161 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#52. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions started...]
04:24:51.174 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
04:24:51.174 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#53. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:24:51.188 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
04:24:51.188 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#54. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse started...]
04:24:51.200 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
04:24:51.200 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#55. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:24:51.211 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
04:24:51.212 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#56. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:24:51.224 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
04:24:51.224 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#57. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions started...]
04:24:51.235 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
04:24:51.236 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#58. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:24:51.249 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
04:24:51.250 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#59. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp started...]
04:24:51.272 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
04:24:51.272 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#60. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:24:51.291 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
04:24:51.292 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#61. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:24:51.324 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
04:24:51.325 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#62. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement started...]
04:24:51.347 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
04:24:51.347 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#63. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10 started...]
04:24:51.360 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
04:24:51.360 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#64. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:24:51.372 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
04:24:51.372 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#65. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2 started...]
04:24:51.385 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
04:24:51.385 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#66. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:24:51.397 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
04:24:51.398 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#67. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:24:51.411 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
04:24:51.411 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#68. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:24:51.422 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
04:24:51.422 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#69. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:24:51.434 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
04:24:51.434 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#70. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign started...]
04:24:51.443 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
04:24:51.444 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#71. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:24:51.455 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
04:24:51.455 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#72. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath started...]
04:24:51.466 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
04:24:51.466 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#73. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition started...]
04:24:51.490 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
04:24:51.491 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#74. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:24:51.522 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
04:24:51.523 [Thread-79] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (2472 ms)
<> Total tests run: 74
<> Ignored tests: 0
<> Failed tests: 3
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:51.569 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:52.120 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
04:24:52.121 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (552 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:52.133 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:52.160 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
04:24:52.161 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:52.168 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:52.193 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
04:24:52.193 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (25 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:52.201 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:52.227 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
04:24:52.228 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:52.382 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:52.416 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. FAILED]
04:24:52.417 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (34 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:52.425 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:52.449 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. FAILED]
04:24:52.449 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (25 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:52.451 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$1:92
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)]
04:24:52.451 [main] DEBUG tests.output - First set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:24:52.452 [main] DEBUG tests.output - Second set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:24:52.452 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$1:92 otherwise the patch would be "true" or "false"
04:24:52.452 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in com.google.javascript.jscomp.FlowSensitiveInlineVariables$1{apply(Lcom/google/javascript/rhino/Node;)Z[92 0.39735970711951313
04:24:52.452 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables{access$900(Lcom/google/javascript/jscomp/FlowSensitiveInlineVariables;)Ljava/util/Set;[60 0.3872983346207417
04:24:52.453 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:52,636 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:52,637 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:52,841 DEBUG spoon.support.StandardEnvironment - built in 205 ms
2017-03-29 04:24:52,841 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:52,841 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:52.842 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:52,842 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:52.844 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:52.856 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:53.107 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:53.107 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables:60.
04:24:53.107 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate{canInline()Z[293 0.3872983346207417
04:24:53.108 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:53,296 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:53,296 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:53,500 DEBUG spoon.support.StandardEnvironment - built in 204 ms
2017-03-29 04:24:53,500 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:53,501 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:53.502 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:53,502 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:53.504 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:53.515 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:53.765 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:53.765 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate:293.
04:24:53.765 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate{canInline()Z[290 0.3872983346207417
04:24:53.765 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:53,947 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:53,948 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:54,150 DEBUG spoon.support.StandardEnvironment - built in 202 ms
2017-03-29 04:24:54,151 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:54,151 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:54.152 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:54,152 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:24:54.154 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:54.166 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:54.416 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:54.417 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:54,610 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:54,610 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:54,812 DEBUG spoon.support.StandardEnvironment - built in 202 ms
2017-03-29 04:24:54,812 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:24:54,812 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:24:54.813 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:24:54,814 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:24:54.819 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:24:54.831 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:24:55.096 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:24:55.140 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:24:55.727 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
04:24:55.728 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1 started...]
04:24:55.805 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
04:24:55.805 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2 started...]
04:24:55.835 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
04:24:55.836 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:24:55.858 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
04:24:55.859 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath started...]
04:24:55.890 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
04:24:55.891 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar started...]
04:24:55.954 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
04:24:55.954 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported started...]
04:24:55.970 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
04:24:55.971 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch started...]
04:24:56.006 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
04:24:56.007 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:24:56.069 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
04:24:56.070 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase started...]
04:24:56.086 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
04:24:56.087 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits started...]
04:24:56.104 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
04:24:56.104 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction started...]
04:24:56.127 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
04:24:56.127 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2 started...]
04:24:56.155 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
04:24:56.155 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3 started...]
04:24:56.175 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
04:24:56.176 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:24:56.299 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
04:24:56.300 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:24:56.361 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
04:24:56.361 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:24:56.377 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
04:24:56.377 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors started...]
04:24:56.395 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
04:24:56.395 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits started...]
04:24:56.414 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
04:24:56.414 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop started...]
04:24:56.435 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
04:24:56.436 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits started...]
04:24:56.452 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
04:24:56.452 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:24:56.535 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
04:24:56.535 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp started...]
04:24:56.552 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
04:24:56.553 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:56.573 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#24. FAILED]
04:24:56.573 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop started...]
04:24:56.595 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
04:24:56.596 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:56.613 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#26. FAILED]
04:24:56.613 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2 started...]
04:24:56.632 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
04:24:56.633 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:56.651 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#28. FAILED]
04:24:56.651 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition started...]
04:24:56.666 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
04:24:56.666 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7 started...]
04:24:56.695 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
04:24:56.696 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:24:56.713 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
04:24:56.714 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:24:56.733 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
04:24:56.733 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#33. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:24:56.780 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
04:24:56.781 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#34. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:24:56.796 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
04:24:56.796 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#35. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:24:56.813 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
04:24:56.813 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#36. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:24:56.830 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
04:24:56.831 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#37. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:24:56.846 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
04:24:56.846 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#38. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:24:56.898 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
04:24:56.899 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#39. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:24:56.947 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
04:24:56.947 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#40. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:24:56.996 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
04:24:56.996 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#41. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:24:57.029 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
04:24:57.030 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#42. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:24:57.078 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
04:24:57.078 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#43. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:24:57.106 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
04:24:57.107 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#44. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12 started...]
04:24:57.121 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
04:24:57.122 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#45. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:24:57.142 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
04:24:57.142 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#46. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:24:57.155 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
04:24:57.156 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#47. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath started...]
04:24:57.172 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
04:24:57.172 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#48. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a started...]
04:24:57.194 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
04:24:57.194 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#49. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:24:57.219 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
04:24:57.219 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#50. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle started...]
04:24:57.234 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
04:24:57.234 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#51. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:24:57.252 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
04:24:57.252 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#52. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions started...]
04:24:57.267 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
04:24:57.268 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#53. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:24:57.283 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
04:24:57.284 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#54. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse started...]
04:24:57.298 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
04:24:57.298 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#55. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:24:57.312 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
04:24:57.312 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#56. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:24:57.326 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
04:24:57.326 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#57. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions started...]
04:24:57.340 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
04:24:57.340 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#58. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:24:57.357 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
04:24:57.357 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#59. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp started...]
04:24:57.383 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
04:24:57.383 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#60. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:24:57.406 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
04:24:57.407 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#61. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:24:57.446 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
04:24:57.447 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#62. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement started...]
04:24:57.473 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
04:24:57.474 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#63. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10 started...]
04:24:57.490 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
04:24:57.490 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#64. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:24:57.506 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
04:24:57.506 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#65. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2 started...]
04:24:57.526 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
04:24:57.526 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#66. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:24:57.546 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
04:24:57.547 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#67. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:24:57.565 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
04:24:57.566 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#68. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:24:57.581 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
04:24:57.581 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#69. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:24:57.599 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
04:24:57.599 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#70. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign started...]
04:24:57.616 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
04:24:57.616 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#71. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:24:57.631 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
04:24:57.632 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#72. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath started...]
04:24:57.647 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
04:24:57.648 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#73. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition started...]
04:24:57.681 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
04:24:57.681 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#74. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:24:57.720 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
04:24:57.721 [Thread-86] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (2581 ms)
<> Total tests run: 74
<> Ignored tests: 0
<> Failed tests: 3
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:57.770 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:58.333 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
04:24:58.333 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (564 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:58.338 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:58.363 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
04:24:58.364 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (25 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:58.369 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:58.393 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
04:24:58.394 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (25 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:58.399 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:58.426 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. SUCCESS]
04:24:58.426 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1
04:24:58.426 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:58.431 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:58.468 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. SUCCESS]
04:24:58.469 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a
04:24:58.469 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (38 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:58.474 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:58.509 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. SUCCESS]
04:24:58.509 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3
04:24:58.509 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (35 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:58.515 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:24:58.581 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#7. SUCCESS]
04:24:58.582 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn
04:24:58.582 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (67 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:58.587 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:24:58.662 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#8. SUCCESS]
04:24:58.662 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn
04:24:58.662 [Thread-94] WARN  f.i.l.c.t.SpecificationTestCasesListener - Inconsistent input found when collecting specifications
04:24:58.662 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (76 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:58.667 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:24:58.759 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#9. SUCCESS]
04:24:58.760 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode
04:24:58.760 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (93 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:58.765 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:24:58.785 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#10. FAILED]
04:24:58.786 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:58.791 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:24:58.811 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#11. FAILED]
04:24:58.811 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:58.816 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:24:58.838 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#12. FAILED]
04:24:58.839 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:24:58.844 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:24:58.870 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#13. SUCCESS]
04:24:58.870 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8
04:24:58.870 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:58.875 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:24:58.903 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#14. SUCCESS]
04:24:58.904 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9
04:24:58.904 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:58.909 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:24:58.948 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#15. SUCCESS]
04:24:58.949 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11
04:24:58.949 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:58.954 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:24:58.984 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#16. SUCCESS]
04:24:58.985 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13
04:24:58.985 [Thread-102] WARN  f.i.l.c.t.SpecificationTestCasesListener - Inconsistent input found when collecting specifications
04:24:58.985 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:58.990 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:24:59.018 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#17. SUCCESS]
04:24:59.018 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b
04:24:59.018 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:59.023 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:24:59.039 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#18. SUCCESS]
04:24:59.039 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1
04:24:59.040 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:59.044 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:24:59.062 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#19. SUCCESS]
04:24:59.062 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2
04:24:59.063 [Thread-105] WARN  f.i.l.c.t.SpecificationTestCasesListener - Inconsistent input found when collecting specifications
04:24:59.063 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:59.068 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:24:59.111 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#20. SUCCESS]
04:24:59.112 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777
04:24:59.112 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (44 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:59.117 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:24:59.135 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#21. SUCCESS]
04:24:59.135 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1
04:24:59.135 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:59.140 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:24:59.161 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#22. SUCCESS]
04:24:59.161 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3
04:24:59.161 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:59.166 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:24:59.187 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#23. SUCCESS]
04:24:59.187 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4
04:24:59.188 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:59.192 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:24:59.211 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#24. SUCCESS]
04:24:59.211 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5
04:24:59.211 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:59.230 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#25. com.google.javascript.jscomp.IntegrationTest#testFlowSensitiveInlineVariables2 started...]
04:24:59.572 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#25. SUCCESS]
04:24:59.572 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.IntegrationTest#testFlowSensitiveInlineVariables2
04:24:59.573 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (342 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:59.581 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#26. com.google.javascript.jscomp.IntegrationTest#testIssue550 started...]
04:24:59.615 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#26. SUCCESS]
04:24:59.621 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.IntegrationTest#testIssue550
04:24:59.621 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:24:59.623 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:59,807 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:24:59,808 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:00,016 DEBUG spoon.support.StandardEnvironment - built in 209 ms
2017-03-29 04:25:00,016 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:00,017 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:00.018 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate]
2017-03-29 04:25:00,019 DEBUG spoon.support.StandardEnvironment - processing 'Candidate' with 'fr.inria.lille.spirals.repair.synthesizer.collect.spoon.ConstantCollector'...
04:25:00.019 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate]
04:25:00.022 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:00.218 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
FlowSensitiveInlineVariables$Candidate.java:2: error: modifier private not allowed here
private class Candidate {
        ^
FlowSensitiveInlineVariables$Candidate.java:32: error: cannot find symbol
            if (inlinedNewDependencies.contains(dependency)) {
                ^
  symbol:   variable inlinedNewDependencies
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:44: error: SIDE_EFFECT_PREDICATE has private access in com.google.javascript.jscomp.FlowSensitiveInlineVariables
        if (com.google.javascript.jscomp.FlowSensitiveInlineVariables.checkRightOf(def, getDefCfgNode(), com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE)) {
                                                                                                                                                                  ^
FlowSensitiveInlineVariables$Candidate.java:44: error: checkRightOf(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.common.base.Predicate<com.google.javascript.rhino.Node>) has private access in com.google.javascript.jscomp.FlowSensitiveInlineVariables
        if (com.google.javascript.jscomp.FlowSensitiveInlineVariables.checkRightOf(def, getDefCfgNode(), com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE)) {
                                                                     ^
FlowSensitiveInlineVariables$Candidate.java:47: error: SIDE_EFFECT_PREDICATE has private access in com.google.javascript.jscomp.FlowSensitiveInlineVariables
        if (com.google.javascript.jscomp.FlowSensitiveInlineVariables.checkLeftOf(use, useCfgNode, com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE)) {
                                                                                                                                                            ^
FlowSensitiveInlineVariables$Candidate.java:47: error: checkLeftOf(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.common.base.Predicate<com.google.javascript.rhino.Node>) has private access in com.google.javascript.jscomp.FlowSensitiveInlineVariables
        if (com.google.javascript.jscomp.FlowSensitiveInlineVariables.checkLeftOf(use, useCfgNode, com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE)) {
                                                                     ^
FlowSensitiveInlineVariables$Candidate.java:50: error: cannot find symbol
        if (com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(def.getLastChild(), compiler)) {
                                                                                         ^
  symbol:   variable compiler
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:59: error: cannot find symbol
        java.util.Collection<com.google.javascript.rhino.Node> uses = reachingUses.getUses(varName, getDefCfgNode());
                                                                      ^
  symbol:   variable reachingUses
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:86: error: cannot find symbol
            com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch> pathCheck = new com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>(cfg , cfg.getDirectedGraphNode(getDefCfgNode()) , cfg.getDirectedGraphNode(useCfgNode) , com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE , com.google.common.base.Predicates.<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>>alwaysTrue() , false);
                                                                                                                                                                                                                                                                                                                    ^
  symbol:   variable cfg
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:86: error: cannot find symbol
            com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch> pathCheck = new com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>(cfg , cfg.getDirectedGraphNode(getDefCfgNode()) , cfg.getDirectedGraphNode(useCfgNode) , com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE , com.google.common.base.Predicates.<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>>alwaysTrue() , false);
                                                                                                                                                                                                                                                                                                                          ^
  symbol:   variable cfg
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:86: error: cannot find symbol
            com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch> pathCheck = new com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>(cfg , cfg.getDirectedGraphNode(getDefCfgNode()) , cfg.getDirectedGraphNode(useCfgNode) , com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE , com.google.common.base.Predicates.<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>>alwaysTrue() , false);
                                                                                                                                                                                                                                                                                                                                                                      ^
  symbol:   variable cfg
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:86: error: SIDE_EFFECT_PREDICATE has private access in com.google.javascript.jscomp.FlowSensitiveInlineVariables
            com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch> pathCheck = new com.google.javascript.jscomp.CheckPathsBetweenNodes<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>(cfg , cfg.getDirectedGraphNode(getDefCfgNode()) , cfg.getDirectedGraphNode(useCfgNode) , com.google.javascript.jscomp.FlowSensitiveInlineVariables.SIDE_EFFECT_PREDICATE , com.google.common.base.Predicates.<com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph.Branch>>alwaysTrue() , false);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ^
FlowSensitiveInlineVariables$Candidate.java:113: error: cannot find symbol
        compiler.reportCodeChange();
        ^
  symbol:   variable compiler
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:135: error: cannot find symbol
        com.google.javascript.jscomp.NodeTraversal.traverse(compiler, n, gatherCb);
                                                            ^
  symbol:   variable compiler
  location: class com.google.javascript.jscomp.Candidate
FlowSensitiveInlineVariables$Candidate.java:147: error: cannot find symbol
        com.google.javascript.jscomp.NodeTraversal.traverse(compiler, n, gatherCb);
                                                            ^
  symbol:   variable compiler
  location: class com.google.javascript.jscomp.Candidate
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:124)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:99)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:178)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:25:00.219 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Node{toString(Ljava/lang/StringBuilder;ZZZ)V[946 0.3779644730092272
04:25:00.219 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:00,405 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:00,405 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:00,719 DEBUG spoon.support.StandardEnvironment - built in 314 ms
2017-03-29 04:25:00,719 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:00,719 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:00.720 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Node]
2017-03-29 04:25:00,721 DEBUG spoon.support.StandardEnvironment - processing 'Node' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:00.728 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Node]
04:25:01.141 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:01.401 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (13 classes)]
04:25:01.401 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Node:946.
04:25:01.401 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Node{toString(Ljava/lang/StringBuilder;ZZZ)V[943 0.3692744729379982
04:25:01.402 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:01,585 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:01,586 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:01,897 DEBUG spoon.support.StandardEnvironment - built in 312 ms
2017-03-29 04:25:01,897 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:01,898 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:01.899 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Node]
2017-03-29 04:25:01,899 DEBUG spoon.support.StandardEnvironment - processing 'Node' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:01.906 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Node]
04:25:02.416 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:02.657 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (13 classes)]
04:25:02.657 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:02,841 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:02,842 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:03,151 DEBUG spoon.support.StandardEnvironment - built in 310 ms
2017-03-29 04:25:03,151 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:03,151 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:03.152 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Node]
2017-03-29 04:25:03,152 DEBUG spoon.support.StandardEnvironment - processing 'Node' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:25:03.189 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Node]
04:25:03.607 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:03.891 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (13 classes)]
04:25:03.938 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:25:04.560 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
04:25:04.561 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1 started...]
04:25:04.641 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
04:25:04.641 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2 started...]
04:25:04.671 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
04:25:04.672 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:25:04.695 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
04:25:04.696 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath started...]
04:25:04.730 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
04:25:04.730 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar started...]
04:25:04.798 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
04:25:04.798 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported started...]
04:25:04.815 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
04:25:04.816 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch started...]
04:25:04.853 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
04:25:04.854 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:25:04.925 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
04:25:04.925 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase started...]
04:25:04.942 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
04:25:04.943 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits started...]
04:25:04.960 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
04:25:04.961 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction started...]
04:25:04.982 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
04:25:04.982 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2 started...]
04:25:05.006 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
04:25:05.007 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3 started...]
04:25:05.028 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
04:25:05.029 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:25:05.158 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
04:25:05.158 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:25:05.227 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
04:25:05.227 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:25:05.243 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
04:25:05.244 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors started...]
04:25:05.272 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
04:25:05.272 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits started...]
04:25:05.288 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
04:25:05.289 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop started...]
04:25:05.311 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
04:25:05.312 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits started...]
04:25:05.329 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
04:25:05.329 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:25:05.416 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
04:25:05.416 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp started...]
04:25:05.434 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
04:25:05.434 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:25:05.456 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#24. FAILED]
04:25:05.456 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop started...]
04:25:05.475 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
04:25:05.476 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:25:05.497 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#26. FAILED]
04:25:05.497 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2 started...]
04:25:05.518 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
04:25:05.518 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:25:05.537 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#28. FAILED]
04:25:05.538 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition started...]
04:25:05.553 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
04:25:05.553 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7 started...]
04:25:05.584 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
04:25:05.584 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:25:05.603 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
04:25:05.603 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:25:05.623 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
04:25:05.624 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#33. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:25:05.673 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
04:25:05.673 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#34. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:25:05.689 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
04:25:05.689 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#35. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:25:05.707 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
04:25:05.707 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#36. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:25:05.725 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
04:25:05.725 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#37. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:25:05.741 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
04:25:05.741 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#38. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:25:05.795 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
04:25:05.795 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#39. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:25:05.842 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
04:25:05.842 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#40. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:25:05.891 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
04:25:05.891 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#41. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:25:05.927 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
04:25:05.927 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#42. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:25:05.973 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
04:25:05.973 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#43. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:25:06.001 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
04:25:06.001 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#44. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12 started...]
04:25:06.016 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
04:25:06.016 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#45. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:25:06.036 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
04:25:06.037 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#46. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:25:06.050 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
04:25:06.050 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#47. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath started...]
04:25:06.066 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
04:25:06.067 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#48. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a started...]
04:25:06.088 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
04:25:06.088 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#49. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:25:06.110 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
04:25:06.110 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#50. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle started...]
04:25:06.123 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
04:25:06.124 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#51. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:25:06.140 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
04:25:06.140 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#52. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions started...]
04:25:06.153 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
04:25:06.154 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#53. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:25:06.168 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
04:25:06.168 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#54. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse started...]
04:25:06.180 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
04:25:06.181 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#55. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:25:06.192 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
04:25:06.193 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#56. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:25:06.205 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
04:25:06.206 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#57. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions started...]
04:25:06.218 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
04:25:06.218 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#58. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:25:06.232 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
04:25:06.232 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#59. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp started...]
04:25:06.255 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
04:25:06.255 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#60. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:25:06.275 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
04:25:06.276 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#61. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:25:06.312 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
04:25:06.312 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#62. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement started...]
04:25:06.333 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
04:25:06.334 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#63. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10 started...]
04:25:06.346 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
04:25:06.346 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#64. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:25:06.359 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
04:25:06.359 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#65. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2 started...]
04:25:06.372 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
04:25:06.373 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#66. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:25:06.386 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
04:25:06.386 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#67. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:25:06.400 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
04:25:06.400 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#68. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:25:06.412 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
04:25:06.412 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#69. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:25:06.425 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
04:25:06.425 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#70. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign started...]
04:25:06.435 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
04:25:06.436 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#71. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:25:06.448 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
04:25:06.448 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#72. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath started...]
04:25:06.459 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
04:25:06.460 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#73. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition started...]
04:25:06.485 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
04:25:06.485 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#74. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:25:06.518 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
04:25:06.519 [Thread-113] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (2581 ms)
<> Total tests run: 74
<> Ignored tests: 0
<> Failed tests: 3
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:06.562 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:25:07.112 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
04:25:07.113 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (551 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION <invalid> 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION <invalid> 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION <invalid> 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION <invalid> 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:07.118 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:25:07.146 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
04:25:07.147 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION <invalid> 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION <invalid> 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION <invalid> 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION <invalid> 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:07.152 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:25:07.178 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
04:25:07.179 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION <invalid> 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION <invalid> 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION <invalid> 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION <invalid> 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:07.184 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:25:07.211 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
04:25:07.211 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:07.216 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:25:07.255 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. FAILED]
04:25:07.255 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:07.261 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:25:07.295 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. FAILED]
04:25:07.295 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (35 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:07.296 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation com.google.javascript.rhino.Node:943
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest), testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)]
04:25:07.297 [main] DEBUG tests.output - First set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION <invalid> 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION <invalid> 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION <invalid> 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION <invalid> 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION <invalid> 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION <invalid> 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:25:07.297 [main] DEBUG tests.output - Second set: 
[testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
, testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest): 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
04:25:07.298 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation com.google.javascript.rhino.Node:943 otherwise the patch would be "true" or "false"
04:25:07.298 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in com.google.javascript.rhino.Node{toString(Ljava/lang/StringBuilder;ZZZ)V[943 0.3692744729379982
04:25:07.298 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Node{toString(Ljava/lang/StringBuilder;ZZZ)V[939 0.3692744729379982
04:25:07.298 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:07,480 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:07,481 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:07,794 DEBUG spoon.support.StandardEnvironment - built in 313 ms
2017-03-29 04:25:07,794 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:07,794 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:07.795 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Node]
2017-03-29 04:25:07,795 DEBUG spoon.support.StandardEnvironment - processing 'Node' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:07.803 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Node]
04:25:08.213 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:08.438 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (13 classes)]
04:25:08.439 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Node:939.
04:25:08.439 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Token{name(I)Ljava/lang/String;[230 0.3692744729379982
04:25:08.439 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:25:08,623 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:25:08,624 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:25:08,759 DEBUG spoon.support.StandardEnvironment - built in 136 ms
2017-03-29 04:25:08,760 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:08,760 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:08.761 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Token]
2017-03-29 04:25:08,761 DEBUG spoon.support.StandardEnvironment - processing 'Token' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:08.762 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Token]
04:25:08.769 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:08.806 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
04:25:08.806 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Token:230.
04:25:08.807 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Node{propToString(I)Ljava/lang/String;[133 0.3611575592573076
04:25:08.807 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:08,988 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:08,989 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:09,301 DEBUG spoon.support.StandardEnvironment - built in 312 ms
2017-03-29 04:25:09,301 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:09,301 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:09.303 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Node]
2017-03-29 04:25:09,303 DEBUG spoon.support.StandardEnvironment - processing 'Node' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:09.310 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Node]
04:25:09.708 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:09.932 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (13 classes)]
04:25:09.932 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Node:133.
04:25:09.932 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Node{propToString(I)Ljava/lang/String;[121 0.3611575592573076
04:25:09.932 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:10,114 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:10,114 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Node.java]
2017-03-29 04:25:10,427 DEBUG spoon.support.StandardEnvironment - built in 313 ms
2017-03-29 04:25:10,428 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:10,428 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:10.429 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Node]
2017-03-29 04:25:10,429 DEBUG spoon.support.StandardEnvironment - processing 'Node' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:10.437 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Node]
04:25:10.838 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:11.085 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (13 classes)]
04:25:11.086 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Node:121.
04:25:11.086 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.InputId{toString()Ljava/lang/String;[74 0.3611575592573076
04:25:11.086 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/InputId.java]
2017-03-29 04:25:11,270 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/InputId.java]
2017-03-29 04:25:11,271 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/InputId.java]
2017-03-29 04:25:11,397 DEBUG spoon.support.StandardEnvironment - built in 127 ms
2017-03-29 04:25:11,397 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:11,397 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:11.398 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.InputId]
2017-03-29 04:25:11,399 DEBUG spoon.support.StandardEnvironment - processing 'InputId' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:11.399 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.InputId]
04:25:11.400 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:11.428 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
04:25:11.429 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.InputId:74.
04:25:11.429 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.MustBeReachingVariableDef{dependsOnOuterScopeVars(Lcom/google/javascript/jscomp/MustBeReachingVariableDef$Definition;)Z[438 0.3611575592573076
04:25:11.429 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:11,624 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:11,624 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:11,950 DEBUG spoon.support.StandardEnvironment - built in 326 ms
2017-03-29 04:25:11,951 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:11,951 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:11.952 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.MustBeReachingVariableDef]
2017-03-29 04:25:11,952 DEBUG spoon.support.StandardEnvironment - processing 'MustBeReachingVariableDef' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:11.954 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.MustBeReachingVariableDef]
04:25:11.978 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:12.232 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:12.232 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.MustBeReachingVariableDef:438.
04:25:12.232 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.rhino.Token{name(I)Ljava/lang/String;[215 0.3535533905932738
04:25:12.232 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:25:12,416 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:25:12,416 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/rhino/Token.java]
2017-03-29 04:25:12,557 DEBUG spoon.support.StandardEnvironment - built in 141 ms
2017-03-29 04:25:12,557 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:12,574 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:12.575 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.rhino.Token]
2017-03-29 04:25:12,576 DEBUG spoon.support.StandardEnvironment - processing 'Token' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:12.577 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.rhino.Token]
04:25:12.584 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:12.621 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
04:25:12.622 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.rhino.Token:215.
04:25:12.622 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate$3{visit(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V[460 0.3333333333333333
04:25:12.622 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:12,801 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:12,802 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:13,004 DEBUG spoon.support.StandardEnvironment - built in 202 ms
2017-03-29 04:25:13,004 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:13,004 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:13.005 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:25:13,005 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:13.007 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:25:13.017 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:13.280 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:25:13.281 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate$3:460.
04:25:13.281 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{ignoreEdge(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphEdge;)Z[156 0.3333333333333333
04:25:13.281 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:13,464 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:13,465 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:13,610 DEBUG spoon.support.StandardEnvironment - built in 145 ms
2017-03-29 04:25:13,610 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:13,610 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:13.612 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:13,612 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:13.613 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:13.616 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:13.806 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:13.806 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:156.
04:25:13.806 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{discoverBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)V[151 0.3333333333333333
04:25:13.806 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:13,989 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:13,989 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:14,135 DEBUG spoon.support.StandardEnvironment - built in 146 ms
2017-03-29 04:25:14,135 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:14,135 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:14.136 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:14,137 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:14.138 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:14.140 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:14.325 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:14.325 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:151.
04:25:14.325 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{discoverBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)V[147 0.3333333333333333
04:25:14.325 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:14,508 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:14,509 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:14,654 DEBUG spoon.support.StandardEnvironment - built in 146 ms
2017-03-29 04:25:14,654 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:14,654 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:14.655 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:14,656 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:14.657 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:14.659 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:14.846 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:14.847 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:147.
04:25:14.847 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{discoverBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)V[146 0.3333333333333333
04:25:14.847 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:15,027 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:15,027 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:15,172 DEBUG spoon.support.StandardEnvironment - built in 145 ms
2017-03-29 04:25:15,172 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:15,172 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:15.173 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:15,173 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:15.174 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:15.177 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:15.378 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:15.378 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:15,561 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:15,562 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:15,707 DEBUG spoon.support.StandardEnvironment - built in 146 ms
2017-03-29 04:25:15,707 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:15,707 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:15.709 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:15,709 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:25:15.716 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:15.719 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:15.902 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
CheckPathsBetweenNodes.java:71: error: variable e is already defined in method discoverBackEdges(com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N,E>)
            try{spoonDefaultValue=(v.getAnnotation()) == (com.google.javascript.jscomp.CheckPathsBetweenNodes.WHITE);}catch(java.lang.Exception e){};
                                                                                                                                                ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:25:15.903 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{discoverBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)V[145 0.3333333333333333
04:25:15.903 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:16,085 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:16,086 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:16,231 DEBUG spoon.support.StandardEnvironment - built in 146 ms
2017-03-29 04:25:16,231 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:16,232 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:16.233 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:16,233 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:16.234 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:16.237 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:16.418 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:16.418 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:145.
04:25:16.418 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{discoverBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)V[142 0.3333333333333333
04:25:16.419 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:16,603 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:16,603 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:16,749 DEBUG spoon.support.StandardEnvironment - built in 146 ms
2017-03-29 04:25:16,749 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:16,749 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:16.751 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:16,751 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:16.752 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:16.755 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:16.934 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:16.935 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:17,117 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:17,117 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:17,263 DEBUG spoon.support.StandardEnvironment - built in 146 ms
2017-03-29 04:25:17,263 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:17,264 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:17.265 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:17,265 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:25:17.272 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:17.275 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:17.456 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
CheckPathsBetweenNodes.java:67: error: variable e is already defined in method discoverBackEdges(com.google.javascript.jscomp.graph.DiGraph.DiGraphNode<N,E>)
            try{spoonDefaultValue=ignoreEdge(e);}catch(java.lang.Exception e){};
                                                                           ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:25:17.457 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.graph.LinkedDirectedGraph{getEdges()Ljava/util/List;[317 0.3333333333333333
04:25:17.458 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:17,682 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:17,699 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:17,897 DEBUG spoon.support.StandardEnvironment - built in 199 ms
2017-03-29 04:25:17,898 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:17,898 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:17.899 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
2017-03-29 04:25:17,899 DEBUG spoon.support.StandardEnvironment - processing 'LinkedDirectedGraph' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:17.902 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
04:25:17.932 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:18.200 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
LinkedDirectedGraph.java:7: error: improperly formed type, type arguments given on a raw type
        return new com.google.javascript.jscomp.graph.Graph.SimpleSubGraph<N, E>(this);
                                                                          ^
Note: LinkedDirectedGraph.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:124)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:25:18.201 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.graph.LinkedDirectedGraph{getEdges()Ljava/util/List;[316 0.3333333333333333
04:25:18.201 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:18,385 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:18,386 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:18,583 DEBUG spoon.support.StandardEnvironment - built in 198 ms
2017-03-29 04:25:18,583 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:18,583 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:18.584 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
2017-03-29 04:25:18,584 DEBUG spoon.support.StandardEnvironment - processing 'LinkedDirectedGraph' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:18.587 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
04:25:18.617 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:18.903 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
LinkedDirectedGraph.java:7: error: improperly formed type, type arguments given on a raw type
        return new com.google.javascript.jscomp.graph.Graph.SimpleSubGraph<N, E>(this);
                                                                          ^
Note: LinkedDirectedGraph.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:124)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:25:18.904 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.graph.LinkedDirectedGraph$AnnotatedLinkedDirectedGraphEdge{setAnnotation(Lcom/google/javascript/jscomp/graph/Annotation;)V[579 0.3333333333333333
04:25:18.905 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:19,087 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:19,088 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:19,285 DEBUG spoon.support.StandardEnvironment - built in 198 ms
2017-03-29 04:25:19,285 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:19,286 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:19.287 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
2017-03-29 04:25:19,287 DEBUG spoon.support.StandardEnvironment - processing 'LinkedDirectedGraph' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:19.289 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
04:25:19.321 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:19.595 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
LinkedDirectedGraph.java:7: error: improperly formed type, type arguments given on a raw type
        return new com.google.javascript.jscomp.graph.Graph.SimpleSubGraph<N, E>(this);
                                                                          ^
Note: LinkedDirectedGraph.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:124)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:25:19.596 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.graph.LinkedDirectedGraph$AnnotatedLinkedDirectedGraphEdge{setAnnotation(Lcom/google/javascript/jscomp/graph/Annotation;)V[578 0.3333333333333333
04:25:19.597 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:19,780 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:19,780 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:19,976 DEBUG spoon.support.StandardEnvironment - built in 196 ms
2017-03-29 04:25:19,976 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:19,976 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:19.977 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
2017-03-29 04:25:19,977 DEBUG spoon.support.StandardEnvironment - processing 'LinkedDirectedGraph' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:19.979 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
04:25:20.010 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:20.270 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
LinkedDirectedGraph.java:7: error: improperly formed type, type arguments given on a raw type
        return new com.google.javascript.jscomp.graph.Graph.SimpleSubGraph<N, E>(this);
                                                                          ^
Note: LinkedDirectedGraph.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:124)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:25:20.272 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.graph.LinkedDirectedGraph$AnnotatedLinkedDirectedGraphEdge{getAnnotation()Lcom/google/javascript/jscomp/graph/Annotation;[573 0.3333333333333333
04:25:20.272 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:20,455 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:20,456 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:20,650 DEBUG spoon.support.StandardEnvironment - built in 195 ms
2017-03-29 04:25:20,651 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:20,651 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:20.652 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
2017-03-29 04:25:20,652 DEBUG spoon.support.StandardEnvironment - processing 'LinkedDirectedGraph' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:20.654 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
04:25:20.686 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:21.092 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
LinkedDirectedGraph.java:7: error: improperly formed type, type arguments given on a raw type
        return new com.google.javascript.jscomp.graph.Graph.SimpleSubGraph<N, E>(this);
                                                                          ^
Note: LinkedDirectedGraph.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:124)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:25:21.094 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate$3{visit(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V[462 0.3273268353539886
04:25:21.094 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:21,274 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:21,275 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:21,479 DEBUG spoon.support.StandardEnvironment - built in 205 ms
2017-03-29 04:25:21,480 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:21,480 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:21.481 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:25:21,481 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:21.482 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:25:21.493 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:21.745 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:25:21.745 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate$3:462.
04:25:21.746 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate$3{visit(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V[459 0.3273268353539886
04:25:21.746 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:21,932 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:21,933 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:22,138 DEBUG spoon.support.StandardEnvironment - built in 206 ms
2017-03-29 04:25:22,138 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:22,138 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:22.139 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:25:22,140 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:22.141 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:25:22.152 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:22.403 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:25:22.403 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:22,599 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:22,599 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:22,799 DEBUG spoon.support.StandardEnvironment - built in 200 ms
2017-03-29 04:25:22,799 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:22,810 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:22.811 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:25:22,811 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:25:22.838 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:25:22.848 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:23.308 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:25:23.351 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:25:23.984 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
04:25:23.985 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1 started...]
04:25:24.062 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
04:25:24.062 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2 started...]
04:25:24.092 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
04:25:24.093 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:25:24.116 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
04:25:24.116 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath started...]
04:25:24.148 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
04:25:24.149 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar started...]
04:25:24.213 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
04:25:24.213 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported started...]
04:25:24.230 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
04:25:24.230 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch started...]
04:25:24.266 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
04:25:24.267 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:25:24.331 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
04:25:24.332 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase started...]
04:25:24.348 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
04:25:24.349 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits started...]
04:25:24.366 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
04:25:24.366 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction started...]
04:25:24.387 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
04:25:24.387 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2 started...]
04:25:24.410 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
04:25:24.410 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3 started...]
04:25:24.431 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
04:25:24.431 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:25:24.558 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
04:25:24.558 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:25:24.619 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
04:25:24.620 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:25:24.636 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
04:25:24.636 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors started...]
04:25:24.654 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
04:25:24.654 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits started...]
04:25:24.670 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
04:25:24.671 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop started...]
04:25:24.692 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
04:25:24.693 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits started...]
04:25:24.710 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
04:25:24.710 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:25:24.794 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
04:25:24.795 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp started...]
04:25:24.812 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
04:25:24.812 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:25:24.834 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#24. FAILED]
04:25:24.834 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop started...]
04:25:24.853 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
04:25:24.853 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:25:24.871 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#26. FAILED]
04:25:24.871 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2 started...]
04:25:24.891 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
04:25:24.891 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:25:24.910 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#28. FAILED]
04:25:24.910 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition started...]
04:25:24.925 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
04:25:24.925 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7 started...]
04:25:24.955 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
04:25:24.956 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:25:24.973 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
04:25:24.974 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:25:24.993 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
04:25:24.993 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#33. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:25:25.041 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
04:25:25.042 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#34. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:25:25.057 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
04:25:25.058 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#35. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:25:25.075 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
04:25:25.075 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#36. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:25:25.092 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
04:25:25.093 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#37. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:25:25.108 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
04:25:25.108 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#38. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:25:25.161 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
04:25:25.161 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#39. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:25:25.207 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
04:25:25.208 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#40. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:25:25.255 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
04:25:25.255 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#41. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:25:25.287 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
04:25:25.295 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#42. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:25:25.341 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
04:25:25.342 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#43. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:25:25.369 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
04:25:25.370 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#44. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12 started...]
04:25:25.383 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
04:25:25.384 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#45. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:25:25.404 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
04:25:25.404 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#46. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:25:25.417 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
04:25:25.418 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#47. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath started...]
04:25:25.434 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
04:25:25.434 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#48. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a started...]
04:25:25.455 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
04:25:25.455 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#49. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:25:25.477 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
04:25:25.478 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#50. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle started...]
04:25:25.491 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
04:25:25.491 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#51. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:25:25.507 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
04:25:25.508 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#52. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions started...]
04:25:25.521 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
04:25:25.521 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#53. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:25:25.535 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
04:25:25.536 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#54. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse started...]
04:25:25.548 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
04:25:25.548 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#55. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:25:25.560 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
04:25:25.560 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#56. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:25:25.573 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
04:25:25.573 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#57. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions started...]
04:25:25.585 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
04:25:25.585 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#58. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:25:25.599 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
04:25:25.600 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#59. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp started...]
04:25:25.622 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
04:25:25.623 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#60. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:25:25.643 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
04:25:25.643 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#61. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:25:25.679 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
04:25:25.679 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#62. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement started...]
04:25:25.701 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
04:25:25.701 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#63. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10 started...]
04:25:25.714 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
04:25:25.715 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#64. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:25:25.727 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
04:25:25.727 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#65. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2 started...]
04:25:25.740 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
04:25:25.740 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#66. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:25:25.753 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
04:25:25.754 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#67. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:25:25.767 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
04:25:25.767 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#68. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:25:25.779 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
04:25:25.779 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#69. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:25:25.791 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
04:25:25.791 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#70. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign started...]
04:25:25.801 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
04:25:25.801 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#71. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:25:25.813 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
04:25:25.813 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#72. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath started...]
04:25:25.824 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
04:25:25.824 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#73. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition started...]
04:25:25.849 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
04:25:25.850 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#74. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:25:25.881 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
04:25:25.882 [Thread-120] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (2532 ms)
<> Total tests run: 74
<> Ignored tests: 0
<> Failed tests: 3
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:25.924 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:25:26.464 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. SUCCESS]
04:25:26.465 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1
04:25:26.465 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (541 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:26.470 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:25:26.497 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. SUCCESS]
04:25:26.498 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a
04:25:26.498 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:26.503 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:25:26.530 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. SUCCESS]
04:25:26.530 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3
04:25:26.530 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:26.535 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:25:26.578 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
04:25:26.579 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (43 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:26.584 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:25:26.617 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. FAILED]
04:25:26.617 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (34 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:26.622 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:25:26.645 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. FAILED]
04:25:26.645 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (23 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:26.651 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:25:26.674 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#7. SUCCESS]
04:25:26.674 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction
04:25:26.675 [Thread-127] WARN  f.i.l.c.t.SpecificationTestCasesListener - Inconsistent input found when collecting specifications
04:25:26.675 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (25 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:26.679 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:25:26.746 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#8. SUCCESS]
04:25:26.746 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn
04:25:26.746 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (67 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:26.751 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:25:26.817 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#9. SUCCESS]
04:25:26.817 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign
04:25:26.817 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (66 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:26.822 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:25:26.839 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#10. SUCCESS]
04:25:26.839 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse
04:25:26.839 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:26.844 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:25:26.938 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#11. SUCCESS]
04:25:26.938 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode
04:25:26.938 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (94 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:26.943 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:25:26.964 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#12. FAILED]
04:25:26.964 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:26.969 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:25:26.990 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#13. FAILED]
04:25:26.990 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:26.995 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:25:27.019 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#14. FAILED]
04:25:27.019 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (24 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:27.025 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:25:27.048 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#15. SUCCESS]
04:25:27.049 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8
04:25:27.049 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (24 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.054 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:25:27.080 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#16. SUCCESS]
04:25:27.080 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9
04:25:27.080 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.085 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:25:27.146 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#17. SUCCESS]
04:25:27.146 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments
04:25:27.146 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (61 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.151 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:25:27.170 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#18. SUCCESS]
04:25:27.170 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine
04:25:27.170 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.175 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:25:27.199 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#19. SUCCESS]
04:25:27.199 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths
04:25:27.199 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (24 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.204 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:25:27.241 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#20. SUCCESS]
04:25:27.242 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes
04:25:27.242 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (38 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.247 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:25:27.286 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#21. SUCCESS]
04:25:27.286 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11
04:25:27.286 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.291 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:25:27.310 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#22. SUCCESS]
04:25:27.310 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach
04:25:27.310 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.315 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:25:27.342 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#23. SUCCESS]
04:25:27.342 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b
04:25:27.343 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.347 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:25:27.365 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#24. SUCCESS]
04:25:27.365 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue
04:25:27.365 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.375 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:25:27.394 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#25. SUCCESS]
04:25:27.394 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse
04:25:27.395 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.399 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:25:27.454 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#26. SUCCESS]
04:25:27.454 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777
04:25:27.455 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (55 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.459 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:25:27.479 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#27. SUCCESS]
04:25:27.479 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3
04:25:27.479 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.484 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:25:27.504 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#28. SUCCESS]
04:25:27.505 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4
04:25:27.505 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.509 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:25:27.528 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#29. SUCCESS]
04:25:27.528 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5
04:25:27.528 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.532 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:25:27.551 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#30. SUCCESS]
04:25:27.551 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6
04:25:27.551 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.556 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:25:27.574 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#31. SUCCESS]
04:25:27.574 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode
04:25:27.574 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.578 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:25:27.629 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#32. SUCCESS]
04:25:27.630 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels
04:25:27.630 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (52 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.646 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#33. com.google.javascript.jscomp.IntegrationTest#testFlowSensitiveInlineVariables1 started...]
04:25:27.832 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#33. SUCCESS]
04:25:27.832 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.IntegrationTest#testFlowSensitiveInlineVariables1
04:25:27.832 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (186 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.838 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#34. com.google.javascript.jscomp.IntegrationTest#testFlowSensitiveInlineVariables2 started...]
04:25:27.996 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#34. SUCCESS]
04:25:27.997 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.IntegrationTest#testFlowSensitiveInlineVariables2
04:25:27.997 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (159 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:27.997 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 1 input values set(s). There are not enough tests for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate$3:459 otherwise the patch would be "true" or "false"
04:25:27.997 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate$3{visit(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V[459 0.3273268353539886
04:25:27.997 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate$3{visit(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V[458 0.3273268353539886
04:25:27.998 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:28,225 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:28,225 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java]
2017-03-29 04:25:28,423 DEBUG spoon.support.StandardEnvironment - built in 198 ms
2017-03-29 04:25:28,424 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:28,424 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:28.425 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
2017-03-29 04:25:28,425 DEBUG spoon.support.StandardEnvironment - processing 'FlowSensitiveInlineVariables' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:28.427 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.FlowSensitiveInlineVariables]
04:25:28.437 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:28.685 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (9 classes)]
04:25:28.685 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate$3:458.
04:25:28.685 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{discoverBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)V[153 0.3273268353539886
04:25:28.686 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:28,868 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:28,869 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:29,014 DEBUG spoon.support.StandardEnvironment - built in 145 ms
2017-03-29 04:25:29,014 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:29,014 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:29.015 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:29,015 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:29.016 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:29.019 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:29.200 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:29.200 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:153.
04:25:29.200 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{discoverBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)V[152 0.3273268353539886
04:25:29.200 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:29,384 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:29,384 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:29,528 DEBUG spoon.support.StandardEnvironment - built in 144 ms
2017-03-29 04:25:29,528 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:29,529 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:29.530 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:29,530 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:29.531 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:29.534 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:29.713 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:29.745 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:152.
04:25:29.746 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{discoverBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)V[141 0.3273268353539886
04:25:29.746 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:29,929 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:29,929 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:30,075 DEBUG spoon.support.StandardEnvironment - built in 146 ms
2017-03-29 04:25:30,075 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:30,076 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:30.077 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:30,077 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:30.078 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:30.081 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:30.259 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:30.260 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:141.
04:25:30.260 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{discoverBackEdges(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)V[140 0.3273268353539886
04:25:30.260 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:30,441 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:30,442 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:30,586 DEBUG spoon.support.StandardEnvironment - built in 144 ms
2017-03-29 04:25:30,586 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:30,586 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:30.587 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:30,587 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:30.588 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:30.591 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:30.771 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:30.771 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:140.
04:25:30.771 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{tearDown()V[137 0.3273268353539886
04:25:30.772 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:30,953 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:30,953 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:31,099 DEBUG spoon.support.StandardEnvironment - built in 146 ms
2017-03-29 04:25:31,099 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:31,099 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:31.100 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:31,100 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:31.101 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:31.104 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:31.430 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:31.431 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:137.
04:25:31.431 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{tearDown()V[136 0.3273268353539886
04:25:31.431 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:31,616 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:31,617 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:31,761 DEBUG spoon.support.StandardEnvironment - built in 145 ms
2017-03-29 04:25:31,761 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:31,761 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:31.762 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:31,762 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:31.763 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:31.766 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:31.943 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:31.944 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:136.
04:25:31.944 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{tearDown()V[135 0.3273268353539886
04:25:31.944 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:32,127 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:32,127 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:32,272 DEBUG spoon.support.StandardEnvironment - built in 145 ms
2017-03-29 04:25:32,272 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:32,272 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:32.273 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:32,273 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:32.274 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:32.277 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:32.456 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:32.456 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:135.
04:25:32.456 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{setUp()V[132 0.3273268353539886
04:25:32.457 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:32,639 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:32,640 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:32,793 DEBUG spoon.support.StandardEnvironment - built in 154 ms
2017-03-29 04:25:32,793 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:32,793 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:32.794 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:32,794 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:32.795 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:32.798 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:32.975 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:32.976 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:132.
04:25:32.976 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{setUp()V[131 0.3273268353539886
04:25:32.976 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:33,156 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:33,157 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:33,300 DEBUG spoon.support.StandardEnvironment - built in 144 ms
2017-03-29 04:25:33,316 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:33,316 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:33.317 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:33,317 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:33.318 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:33.321 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:33.499 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:33.500 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:131.
04:25:33.500 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{setUp()V[130 0.3273268353539886
04:25:33.500 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:33,682 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:33,683 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:33,833 DEBUG spoon.support.StandardEnvironment - built in 151 ms
2017-03-29 04:25:33,833 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:33,833 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:33.834 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:33,834 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:33.835 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:33.838 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:34.018 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:34.018 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:130.
04:25:34.018 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.CheckPathsBetweenNodes{setUp()V[129 0.3273268353539886
04:25:34.019 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:34,202 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:34,202 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java]
2017-03-29 04:25:34,346 DEBUG spoon.support.StandardEnvironment - built in 144 ms
2017-03-29 04:25:34,347 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:34,347 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:34.348 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.CheckPathsBetweenNodes]
2017-03-29 04:25:34,348 DEBUG spoon.support.StandardEnvironment - processing 'CheckPathsBetweenNodes' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:34.349 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.CheckPathsBetweenNodes]
04:25:34.352 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:34.531 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:34.531 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthesizer found for SourceLocation com.google.javascript.jscomp.CheckPathsBetweenNodes:129.
04:25:34.531 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.graph.LinkedDirectedGraph{getEdges()Ljava/util/List;[319 0.3273268353539886
04:25:34.531 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:34,714 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:34,807 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:34,998 DEBUG spoon.support.StandardEnvironment - built in 191 ms
2017-03-29 04:25:34,998 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:34,998 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:34.999 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
2017-03-29 04:25:34,999 DEBUG spoon.support.StandardEnvironment - processing 'LinkedDirectedGraph' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:35.001 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
04:25:35.032 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:35.277 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
LinkedDirectedGraph.java:7: error: improperly formed type, type arguments given on a raw type
        return new com.google.javascript.jscomp.graph.Graph.SimpleSubGraph<N, E>(this);
                                                                          ^
Note: LinkedDirectedGraph.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:124)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:25:35.278 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.graph.LinkedDirectedGraph{getEdges()Ljava/util/List;[318 0.3273268353539886
04:25:35.279 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:35,466 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:35,466 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:35,656 DEBUG spoon.support.StandardEnvironment - built in 190 ms
2017-03-29 04:25:35,656 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:35,657 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:35.658 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
2017-03-29 04:25:35,658 DEBUG spoon.support.StandardEnvironment - processing 'LinkedDirectedGraph' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:35.660 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
04:25:35.690 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:35.932 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
LinkedDirectedGraph.java:7: error: improperly formed type, type arguments given on a raw type
        return new com.google.javascript.jscomp.graph.Graph.SimpleSubGraph<N, E>(this);
                                                                          ^
Note: LinkedDirectedGraph.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:124)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:25:35.933 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.graph.LinkedDirectedGraph{getEdges()Ljava/util/List;[315 0.3273268353539886
04:25:35.934 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:36,116 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:36,117 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:36,307 DEBUG spoon.support.StandardEnvironment - built in 190 ms
2017-03-29 04:25:36,307 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:36,307 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:36.308 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
2017-03-29 04:25:36,309 DEBUG spoon.support.StandardEnvironment - processing 'LinkedDirectedGraph' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:36.311 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
04:25:36.340 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:36.584 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
LinkedDirectedGraph.java:7: error: improperly formed type, type arguments given on a raw type
        return new com.google.javascript.jscomp.graph.Graph.SimpleSubGraph<N, E>(this);
                                                                          ^
Note: LinkedDirectedGraph.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:124)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:25:36.585 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.graph.LinkedDirectedGraph{getEdges()Ljava/util/List;[314 0.3273268353539886
04:25:36.585 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:36,768 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:36,769 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:36,963 DEBUG spoon.support.StandardEnvironment - built in 194 ms
2017-03-29 04:25:36,963 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:36,963 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:36.964 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
2017-03-29 04:25:36,964 DEBUG spoon.support.StandardEnvironment - processing 'LinkedDirectedGraph' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:36.966 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
04:25:36.996 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:37.233 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
LinkedDirectedGraph.java:7: error: improperly formed type, type arguments given on a raw type
        return new com.google.javascript.jscomp.graph.Graph.SimpleSubGraph<N, E>(this);
                                                                          ^
Note: LinkedDirectedGraph.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:124)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:25:37.235 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.graph.LinkedDirectedGraph{getEdges()Ljava/util/List;[313 0.3273268353539886
04:25:37.235 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:37,418 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:37,419 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java]
2017-03-29 04:25:37,608 DEBUG spoon.support.StandardEnvironment - built in 189 ms
2017-03-29 04:25:37,608 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:37,609 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:37.610 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
2017-03-29 04:25:37,610 DEBUG spoon.support.StandardEnvironment - processing 'LinkedDirectedGraph' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:37.612 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.graph.LinkedDirectedGraph]
04:25:37.644 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:37.884 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
LinkedDirectedGraph.java:7: error: improperly formed type, type arguments given on a raw type
        return new com.google.javascript.jscomp.graph.Graph.SimpleSubGraph<N, E>(this);
                                                                          ^
Note: LinkedDirectedGraph.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:124)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:157)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:120)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:83)
	at fr.inria.lille.repair.Main.main(Main.java:59)
04:25:37.885 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing com.google.javascript.jscomp.MustBeReachingVariableDef{dependsOnOuterScopeVars(Lcom/google/javascript/jscomp/MustBeReachingVariableDef$Definition;)Z[435 0.3273268353539886
04:25:37.885 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:38,066 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:38,067 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:38,259 DEBUG spoon.support.StandardEnvironment - built in 192 ms
2017-03-29 04:25:38,259 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:38,259 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:38.260 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.MustBeReachingVariableDef]
2017-03-29 04:25:38,261 DEBUG spoon.support.StandardEnvironment - processing 'MustBeReachingVariableDef' with 'fr.inria.lille.repair.common.synth.StatementTypeDetector'...
04:25:38.262 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.MustBeReachingVariableDef]
04:25:38.286 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:38.520 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:38.521 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:38,704 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:38,704 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:38,914 DEBUG spoon.support.StandardEnvironment - built in 210 ms
2017-03-29 04:25:38,915 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:38,915 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:38.916 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.MustBeReachingVariableDef]
2017-03-29 04:25:38,916 DEBUG spoon.support.StandardEnvironment - processing 'MustBeReachingVariableDef' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
04:25:38.922 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.MustBeReachingVariableDef]
04:25:38.946 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:39.189 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:39.232 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:25:39.849 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
04:25:39.849 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1 started...]
04:25:39.927 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
04:25:39.928 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2 started...]
04:25:39.959 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
04:25:39.959 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction started...]
04:25:39.982 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
04:25:39.982 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath started...]
04:25:40.014 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
04:25:40.015 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar started...]
04:25:40.079 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
04:25:40.079 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported started...]
04:25:40.096 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
04:25:40.096 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch started...]
04:25:40.132 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
04:25:40.132 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:25:40.196 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
04:25:40.196 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase started...]
04:25:40.213 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
04:25:40.213 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits started...]
04:25:40.230 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
04:25:40.231 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction started...]
04:25:40.251 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
04:25:40.251 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2 started...]
04:25:40.274 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
04:25:40.274 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3 started...]
04:25:40.295 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
04:25:40.295 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign started...]
04:25:40.420 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
04:25:40.421 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign started...]
04:25:40.482 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
04:25:40.482 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse started...]
04:25:40.498 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
04:25:40.498 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors started...]
04:25:40.516 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
04:25:40.516 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits started...]
04:25:40.532 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
04:25:40.532 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop started...]
04:25:40.553 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
04:25:40.554 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits started...]
04:25:40.570 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
04:25:40.571 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:25:40.654 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
04:25:40.655 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp started...]
04:25:40.672 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
04:25:40.672 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:25:40.693 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#24. FAILED]
04:25:40.693 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop started...]
04:25:40.712 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
04:25:40.712 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:25:40.730 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#26. FAILED]
04:25:40.730 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2 started...]
04:25:40.750 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
04:25:40.750 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:25:40.768 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#28. FAILED]
04:25:40.769 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition started...]
04:25:40.784 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
04:25:40.784 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7 started...]
04:25:40.813 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
04:25:40.814 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:25:40.831 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
04:25:40.832 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#32. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:25:40.851 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
04:25:40.851 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#33. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments started...]
04:25:40.899 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
04:25:40.899 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#34. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine started...]
04:25:40.914 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
04:25:40.915 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#35. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths started...]
04:25:40.931 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
04:25:40.932 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#36. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:25:40.949 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
04:25:40.949 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#37. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:25:40.964 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
04:25:40.964 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#38. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:25:41.016 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
04:25:41.016 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#39. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:25:41.062 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
04:25:41.062 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#40. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:25:41.109 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
04:25:41.109 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#41. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes started...]
04:25:41.138 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
04:25:41.139 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#42. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:25:41.183 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
04:25:41.183 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#43. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:25:41.214 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
04:25:41.214 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#44. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12 started...]
04:25:41.228 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
04:25:41.228 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#45. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:25:41.248 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
04:25:41.248 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#46. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach started...]
04:25:41.261 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
04:25:41.261 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#47. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath started...]
04:25:41.276 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
04:25:41.277 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#48. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a started...]
04:25:41.298 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
04:25:41.298 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#49. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:25:41.320 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
04:25:41.320 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#50. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle started...]
04:25:41.333 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
04:25:41.333 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#51. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:25:41.349 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
04:25:41.349 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#52. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions started...]
04:25:41.362 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
04:25:41.363 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#53. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue started...]
04:25:41.376 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
04:25:41.377 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#54. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse started...]
04:25:41.389 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
04:25:41.389 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#55. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:25:41.401 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
04:25:41.401 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#56. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:25:41.413 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
04:25:41.414 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#57. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions started...]
04:25:41.425 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
04:25:41.426 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#58. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse started...]
04:25:41.440 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
04:25:41.440 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#59. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp started...]
04:25:41.463 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
04:25:41.463 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#60. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698 started...]
04:25:41.483 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
04:25:41.483 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#61. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:25:41.517 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
04:25:41.517 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#62. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement started...]
04:25:41.540 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
04:25:41.540 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#63. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10 started...]
04:25:41.554 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
04:25:41.554 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#64. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:25:41.566 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
04:25:41.566 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#65. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2 started...]
04:25:41.579 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
04:25:41.579 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#66. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:25:41.592 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
04:25:41.592 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#67. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:25:41.606 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
04:25:41.606 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#68. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:25:41.617 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
04:25:41.617 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#69. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6 started...]
04:25:41.629 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
04:25:41.630 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#70. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign started...]
04:25:41.639 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
04:25:41.640 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#71. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode started...]
04:25:41.651 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
04:25:41.651 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#72. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath started...]
04:25:41.662 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
04:25:41.662 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#73. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition started...]
04:25:41.687 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
04:25:41.687 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#74. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels started...]
04:25:41.719 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
04:25:41.720 [Thread-155] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (2488 ms)
<> Total tests run: 74
<> Ignored tests: 0
<> Failed tests: 3
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:41.761 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:25:42.305 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. SUCCESS]
04:25:42.305 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1
04:25:42.305 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (544 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:42.309 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:25:42.337 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. SUCCESS]
04:25:42.337 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a
04:25:42.337 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:42.341 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:25:42.368 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. SUCCESS]
04:25:42.368 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3
04:25:42.369 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:42.374 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:25:42.419 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
04:25:42.419 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (45 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:42.601 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:25:42.631 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#5. FAILED]
04:25:42.632 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (31 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:42.636 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:25:42.659 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#6. FAILED]
04:25:42.659 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (23 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:42.664 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#7. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn started...]
04:25:42.730 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#7. SUCCESS]
04:25:42.730 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn
04:25:42.730 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (66 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:42.734 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#8. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn started...]
04:25:42.799 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#8. SUCCESS]
04:25:42.800 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn
04:25:42.800 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (66 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:42.804 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#9. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode started...]
04:25:42.895 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#9. SUCCESS]
04:25:42.896 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode
04:25:42.896 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (93 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:42.900 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#10. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a started...]
04:25:42.920 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#10. FAILED]
04:25:42.921 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1a(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        ADD 4 [source_file: expected0]
                                            NAME err 4 [source_file: expected0]
                                            NUMBER 1.0 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        ADD 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            NUMBER 1.0 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            ADD 4 [source_file: expected0]
                NAME err 4 [source_file: expected0]
                NUMBER 1.0 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:42.925 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#11. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1 started...]
04:25:42.945 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#11. FAILED]
04:25:42.945 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression1(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME a 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                RETURN 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME a 6 [source_file: expected0]
                        STRING stack 6 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                RETURN 6 [source_file: testcode]
                    GETPROP 6 [source_file: testcode]
                        NAME err 4 [source_file: testcode]
                        STRING stack 6 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:42.949 [Thread-167] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#12. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3 started...]
04:25:42.971 [Thread-167] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#12. FAILED]
04:25:42.972 [Thread-167] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoNotInlineCatchExpression3(com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest)
[
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack}
Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION _func 1 [source_file: expected0]
            NAME _func 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                TRY 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        THROW 3 [source_file: expected0]
                            CALL 3 [free_call: 1] [source_file: expected0]
                                NAME Error 3 [source_file: expected0]
                                STRING  3 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        CATCH 4 [source_file: expected0]
                            NAME err 4 [source_file: expected0]
                            BLOCK 4 [source_file: expected0]
                                EXPR_RESULT 4 [source_file: expected0]
                                    ASSIGN 4 [source_file: expected0]
                                        NAME err 4 [source_file: expected0]
                                        NAME x 4 [source_file: expected0]
                                EXPR_RESULT 5 [source_file: expected0]
                                    ASSIGN 5 [source_file: expected0]
                                        NAME a 5 [source_file: expected0]
                                        NAME err 5 [source_file: expected0]
                RETURN 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME a 7 [source_file: expected0]
                        STRING stack 7 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION _func 1 [source_file: testcode]
            NAME _func 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME a 1 [source_file: testcode]
                TRY 2 [source_file: testcode]
                    BLOCK 2 [source_file: testcode]
                        THROW 3 [source_file: testcode]
                            CALL 3 [free_call: 1] [source_file: testcode]
                                NAME Error 3 [source_file: testcode]
                                STRING  3 [source_file: testcode]
                    BLOCK 4 [source_file: testcode]
                        CATCH 4 [source_file: testcode]
                            NAME err 4 [source_file: testcode]
                            BLOCK 4 [source_file: testcode]
                                EXPR_RESULT 4 [source_file: testcode]
                                    ASSIGN 4 [source_file: testcode]
                                        NAME err 4 [source_file: testcode]
                                        NAME x 4 [source_file: testcode]
                RETURN 7 [source_file: testcode]
                    GETPROP 7 [source_file: testcode]
                        NAME err 5 [source_file: testcode]
                        STRING stack 7 [source_file: testcode]


Subtree1: BLOCK 4 [source_file: expected0]
    EXPR_RESULT 4 [source_file: expected0]
        ASSIGN 4 [source_file: expected0]
            NAME err 4 [source_file: expected0]
            NAME x 4 [source_file: expected0]
    EXPR_RESULT 5 [source_file: expected0]
        ASSIGN 5 [source_file: expected0]
            NAME a 5 [source_file: expected0]
            NAME err 5 [source_file: expected0]


Subtree2: BLOCK 4 [source_file: testcode]
    EXPR_RESULT 4 [source_file: testcode]
        ASSIGN 4 [source_file: testcode]
            NAME err 4 [source_file: testcode]
            NAME x 4 [source_file: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)
04:25:42.976 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#13. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8 started...]
04:25:42.998 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#13. SUCCESS]
04:25:42.998 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8
04:25:42.998 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.002 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#14. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9 started...]
04:25:43.029 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#14. SUCCESS]
04:25:43.029 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9
04:25:43.029 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.033 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#15. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop started...]
04:25:43.056 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#15. SUCCESS]
04:25:43.056 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop
04:25:43.057 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (24 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.060 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#16. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1 started...]
04:25:43.080 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#16. SUCCESS]
04:25:43.080 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1
04:25:43.080 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.084 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#17. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2 started...]
04:25:43.149 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#17. SUCCESS]
04:25:43.149 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2
04:25:43.149 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (65 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.153 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#18. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3 started...]
04:25:43.210 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#18. SUCCESS]
04:25:43.210 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3
04:25:43.210 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (57 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.214 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#19. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4 started...]
04:25:43.271 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#19. SUCCESS]
04:25:43.271 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4
04:25:43.272 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (58 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.275 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#20. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables started...]
04:25:43.333 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#20. SUCCESS]
04:25:43.333 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables
04:25:43.333 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (58 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.337 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#21. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11 started...]
04:25:43.371 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#21. SUCCESS]
04:25:43.371 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11
04:25:43.371 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (34 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.375 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#22. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13 started...]
04:25:43.400 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#22. SUCCESS]
04:25:43.401 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13
04:25:43.401 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.405 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#23. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b started...]
04:25:43.431 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#23. SUCCESS]
04:25:43.431 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b
04:25:43.432 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.435 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#24. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect started...]
04:25:43.455 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#24. SUCCESS]
04:25:43.456 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect
04:25:43.456 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.460 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#25. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1 started...]
04:25:43.475 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#25. SUCCESS]
04:25:43.476 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1
04:25:43.476 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.480 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#26. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2 started...]
04:25:43.496 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#26. SUCCESS]
04:25:43.497 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2
04:25:43.497 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.501 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#27. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777 started...]
04:25:43.539 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#27. SUCCESS]
04:25:43.540 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777
04:25:43.540 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.544 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#28. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1 started...]
04:25:43.561 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#28. SUCCESS]
04:25:43.561 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1
04:25:43.561 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.565 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#29. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3 started...]
04:25:43.584 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#29. SUCCESS]
04:25:43.584 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3
04:25:43.585 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.589 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#30. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4 started...]
04:25:43.609 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#30. SUCCESS]
04:25:43.609 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4
04:25:43.609 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.613 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#31. com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5 started...]
04:25:43.632 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#31. SUCCESS]
04:25:43.632 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5
04:25:43.632 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:43.648 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#32. com.google.javascript.jscomp.IntegrationTest#testFlowSensitiveInlineVariables2 started...]
04:25:44.008 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#32. SUCCESS]
04:25:44.009 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.IntegrationTest#testFlowSensitiveInlineVariables2
04:25:44.009 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (361 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:44.015 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#33. com.google.javascript.jscomp.IntegrationTest#testIssue550 started...]
04:25:44.044 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#33. SUCCESS]
04:25:44.044 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.IntegrationTest#testIssue550
04:25:44.044 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:44.062 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#34. com.google.javascript.jscomp.CommandLineRunnerTest#testInlineVariables started...]
04:25:44.378 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#34. SUCCESS]
04:25:44.378 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from com.google.javascript.jscomp.CommandLineRunnerTest#testInlineVariables
04:25:44.378 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (316 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
04:25:44.379 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:44,561 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:44,562 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:44,761 DEBUG spoon.support.StandardEnvironment - built in 199 ms
2017-03-29 04:25:44,761 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:44,761 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:44.762 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.MustBeReachingVariableDef]
2017-03-29 04:25:44,762 DEBUG spoon.support.StandardEnvironment - processing 'MustBeReachingVariableDef' with 'fr.inria.lille.spirals.repair.synthesizer.collect.spoon.ConstantCollector'...
04:25:44.764 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.MustBeReachingVariableDef]
04:25:44.788 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:45.021 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
{1=1, 0=0, -1=-1}
04:25:45.323 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Specifications:
input: {def.node!=null=true, def.depends.size()=1, com.google.javascript.jscomp.MustBeReachingVariableDef.this.jsScope!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.size()=1, def.unknownDependencies=false, def.depends.isEmpty()=false, (s.scope) != (jsScope)=false, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.isEmpty()=false, def!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.compiler!=null=true, def.depends!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped!=null=true}. output: true
input: {def.node!=null=true, def.depends.size()=1, com.google.javascript.jscomp.MustBeReachingVariableDef.this.jsScope!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.size()=2, def.unknownDependencies=false, def.depends.isEmpty()=false, (s.scope) != (jsScope)=false, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.isEmpty()=false, def!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.compiler!=null=true, def.depends!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped!=null=true}. output: false
input: {def.node!=null=true, def.depends.size()=1, com.google.javascript.jscomp.MustBeReachingVariableDef.this.jsScope!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.size()=0, def.unknownDependencies=false, def.depends.isEmpty()=false, (s.scope) != (jsScope)=false, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.isEmpty()=true, def!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.compiler!=null=true, def.depends!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped!=null=true}. output: false
input: {def.node!=null=true, def.depends.size()=2, com.google.javascript.jscomp.MustBeReachingVariableDef.this.jsScope!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.size()=0, def.unknownDependencies=false, def.depends.isEmpty()=false, (s.scope) != (jsScope)=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.isEmpty()=true, def!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.compiler!=null=true, def.depends!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped!=null=true}. output: true
input: {def.node!=null=true, def.depends.size()=1, com.google.javascript.jscomp.MustBeReachingVariableDef.this.jsScope!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.size()=0, def.unknownDependencies=false, def.depends.isEmpty()=false, (s.scope) != (jsScope)=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.isEmpty()=true, def!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.compiler!=null=true, def.depends!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped!=null=true}. output: true
input: {def.node!=null=true, def.depends.size()=2, com.google.javascript.jscomp.MustBeReachingVariableDef.this.jsScope!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.size()=0, def.unknownDependencies=false, def.depends.isEmpty()=false, (s.scope) != (jsScope)=false, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.isEmpty()=true, def!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.compiler!=null=true, def.depends!=null=true, com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped!=null=true}. output: false
04:25:45.324 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
04:25:45.430 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - SMTLib Script:
(set-option :produce-models true)
(set-logic AUFNIRA)
(declare-fun L@out () Int)
(define-fun Acyclicity () Bool true)
(define-fun Consistency () Bool true)
(define-fun LineBound ((L@out Int)) Bool (or (= 0 L@out) (= 4 L@out) (= 7 L@out) (= 8 L@out) (= 9 L@out) (= 10 L@out) (= 11 L@out) (= 12 L@out) (= 13 L@out) (= 14 L@out)))
(define-fun WellFormedProgram ((L@out Int)) Bool (and Acyclicity Consistency (LineBound L@out)))
(define-fun Connectivity ((L@out Int)(in<0> Bool)(in<1> Real)(in<2> Real)(in<3> Real)(in<4> Bool)(in<5> Real)(in<6> Real)(in<7> Bool)(in<8> Bool)(in<9> Bool)(in<10> Bool)(in<11> Bool)(in<12> Bool)(in<13> Bool)(in<14> Bool)(out Bool)) Bool (and (=> (= L@out 0) (= out in<0>)) (=> (= L@out 4) (= out in<4>)) (=> (= L@out 7) (= out in<7>)) (=> (= L@out 8) (= out in<8>)) (=> (= L@out 9) (= out in<9>)) (=> (= L@out 10) (= out in<10>)) (=> (= L@out 11) (= out in<11>)) (=> (= L@out 12) (= out in<12>)) (=> (= L@out 13) (= out in<13>)) (=> (= L@out 14) (= out in<14>))))
(define-fun Library () Bool true)
(define-fun Verification ((L@out Int)(in<0> Bool)(in<1> Real)(in<2> Real)(in<3> Real)(in<4> Bool)(in<5> Real)(in<6> Real)(in<7> Bool)(in<8> Bool)(in<9> Bool)(in<10> Bool)(in<11> Bool)(in<12> Bool)(in<13> Bool)(in<14> Bool)(out Bool)) Bool (and (Connectivity L@out in<0> in<1> in<2> in<3> in<4> in<5> in<6> in<7> in<8> in<9> in<10> in<11> in<12> in<13> in<14> out) Library))
(assert (Verification L@out true 1.0 0.0 1.0 true (- 1.0) 1.0 false false false false true true true true true))
(assert (Verification L@out true 1.0 0.0 1.0 true (- 1.0) 2.0 false false false false true true true true false))
(assert (Verification L@out true 1.0 0.0 1.0 true (- 1.0) 0.0 false false false true true true true true false))
(assert (Verification L@out true 1.0 0.0 2.0 true (- 1.0) 0.0 false false true true true true true true true))
(assert (Verification L@out true 1.0 0.0 1.0 true (- 1.0) 0.0 false false true true true true true true true))
(assert (Verification L@out true 1.0 0.0 2.0 true (- 1.0) 0.0 false false false true true true true true false))
(assert (WellFormedProgram L@out))
04:25:45.515 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
04:25:45.577 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - SMTLib Script:
(set-option :produce-models true)
(set-logic AUFNIRA)
(declare-fun L@op<0> () Int)
(declare-fun L@op<1> () Int)
(declare-fun L@op<2> () Int)
(declare-fun L@op<3> () Int)
(declare-fun L@op<0><0> () Int)
(declare-fun L@op<0><1> () Int)
(declare-fun L@op<1><0> () Int)
(declare-fun L@op<1><1> () Int)
(declare-fun L@op<2><0> () Int)
(declare-fun L@op<2><1> () Int)
(declare-fun L@op<3><0> () Int)
(declare-fun L@op<3><1> () Int)
(declare-fun L@out () Int)
(define-fun Acyclicity ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)) Bool (and (< L@op<0><0> L@op<0>) (< L@op<0><1> L@op<0>) (< L@op<1><0> L@op<1>) (< L@op<1><1> L@op<1>) (< L@op<2><0> L@op<2>) (< L@op<2><1> L@op<2>) (< L@op<3><0> L@op<3>) (< L@op<3><1> L@op<3>)))
(define-fun Consistency ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)) Bool (and (distinct L@op<0> L@op<1>) (distinct L@op<0> L@op<2>) (distinct L@op<0> L@op<3>) (distinct L@op<1> L@op<2>) (distinct L@op<1> L@op<3>) (distinct L@op<2> L@op<3>)))
(define-fun LineBound ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)(L@out Int)) Bool (and (and (<= 15 L@op<0>) (<= L@op<0> 18)) (and (<= 15 L@op<1>) (<= L@op<1> 18)) (and (<= 15 L@op<2>) (<= L@op<2> 18)) (and (<= 15 L@op<3>) (<= L@op<3> 18)) (or (= 1 L@op<0><0>) (= 2 L@op<0><0>) (= 3 L@op<0><0>) (= 5 L@op<0><0>) (= 6 L@op<0><0>)) (or (= 1 L@op<0><1>) (= 2 L@op<0><1>) (= 3 L@op<0><1>) (= 5 L@op<0><1>) (= 6 L@op<0><1>)) (or (= 1 L@op<1><0>) (= 2 L@op<1><0>) (= 3 L@op<1><0>) (= 5 L@op<1><0>) (= 6 L@op<1><0>)) (or (= 1 L@op<1><1>) (= 2 L@op<1><1>) (= 3 L@op<1><1>) (= 5 L@op<1><1>) (= 6 L@op<1><1>)) (or (= 1 L@op<2><0>) (= 2 L@op<2><0>) (= 3 L@op<2><0>) (= 5 L@op<2><0>) (= 6 L@op<2><0>)) (or (= 1 L@op<2><1>) (= 2 L@op<2><1>) (= 3 L@op<2><1>) (= 5 L@op<2><1>) (= 6 L@op<2><1>)) (or (= 1 L@op<3><0>) (= 2 L@op<3><0>) (= 3 L@op<3><0>) (= 5 L@op<3><0>) (= 6 L@op<3><0>)) (or (= 1 L@op<3><1>) (= 2 L@op<3><1>) (= 3 L@op<3><1>) (= 5 L@op<3><1>) (= 6 L@op<3><1>)) (or (= 0 L@out) (= 4 L@out) (= 7 L@out) (= 8 L@out) (= 9 L@out) (= 10 L@out) (= 11 L@out) (= 12 L@out) (= 13 L@out) (= 14 L@out) (= L@op<0> L@out) (= L@op<1> L@out) (= L@op<2> L@out) (= L@op<3> L@out))))
(define-fun WellFormedProgram ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)(L@out Int)) Bool (and (Acyclicity L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1>) (Consistency L@op<0> L@op<1> L@op<2> L@op<3>) (LineBound L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out)))
(define-fun Connectivity ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)(L@out Int)(in<0> Bool)(in<1> Real)(in<2> Real)(in<3> Real)(in<4> Bool)(in<5> Real)(in<6> Real)(in<7> Bool)(in<8> Bool)(in<9> Bool)(in<10> Bool)(in<11> Bool)(in<12> Bool)(in<13> Bool)(in<14> Bool)(op<0> Bool)(op<1> Bool)(op<2> Bool)(op<3> Bool)(op<0><0> Real)(op<0><1> Real)(op<1><0> Real)(op<1><1> Real)(op<2><0> Real)(op<2><1> Real)(op<3><0> Real)(op<3><1> Real)(out Bool)) Bool (and (=> (= L@out 0) (= out in<0>)) (=> (= L@out 4) (= out in<4>)) (=> (= L@out 7) (= out in<7>)) (=> (= L@out 8) (= out in<8>)) (=> (= L@out 9) (= out in<9>)) (=> (= L@out 10) (= out in<10>)) (=> (= L@out 11) (= out in<11>)) (=> (= L@out 12) (= out in<12>)) (=> (= L@out 13) (= out in<13>)) (=> (= L@out 14) (= out in<14>)) (=> (= L@out L@op<0>) (= out op<0>)) (=> (= L@out L@op<1>) (= out op<1>)) (=> (= L@out L@op<2>) (= out op<2>)) (=> (= L@out L@op<3>) (= out op<3>)) (=> (= L@op<0><0> 1) (= op<0><0> in<1>)) (=> (= L@op<0><0> 2) (= op<0><0> in<2>)) (=> (= L@op<0><0> 3) (= op<0><0> in<3>)) (=> (= L@op<0><0> 5) (= op<0><0> in<5>)) (=> (= L@op<0><0> 6) (= op<0><0> in<6>)) (=> (= L@op<0><1> 1) (= op<0><1> in<1>)) (=> (= L@op<0><1> 2) (= op<0><1> in<2>)) (=> (= L@op<0><1> 3) (= op<0><1> in<3>)) (=> (= L@op<0><1> 5) (= op<0><1> in<5>)) (=> (= L@op<0><1> 6) (= op<0><1> in<6>)) (=> (= L@op<1><0> 1) (= op<1><0> in<1>)) (=> (= L@op<1><0> 2) (= op<1><0> in<2>)) (=> (= L@op<1><0> 3) (= op<1><0> in<3>)) (=> (= L@op<1><0> 5) (= op<1><0> in<5>)) (=> (= L@op<1><0> 6) (= op<1><0> in<6>)) (=> (= L@op<1><1> 1) (= op<1><1> in<1>)) (=> (= L@op<1><1> 2) (= op<1><1> in<2>)) (=> (= L@op<1><1> 3) (= op<1><1> in<3>)) (=> (= L@op<1><1> 5) (= op<1><1> in<5>)) (=> (= L@op<1><1> 6) (= op<1><1> in<6>)) (=> (= L@op<2><0> 1) (= op<2><0> in<1>)) (=> (= L@op<2><0> 2) (= op<2><0> in<2>)) (=> (= L@op<2><0> 3) (= op<2><0> in<3>)) (=> (= L@op<2><0> 5) (= op<2><0> in<5>)) (=> (= L@op<2><0> 6) (= op<2><0> in<6>)) (=> (= L@op<2><1> 1) (= op<2><1> in<1>)) (=> (= L@op<2><1> 2) (= op<2><1> in<2>)) (=> (= L@op<2><1> 3) (= op<2><1> in<3>)) (=> (= L@op<2><1> 5) (= op<2><1> in<5>)) (=> (= L@op<2><1> 6) (= op<2><1> in<6>)) (=> (= L@op<3><0> 1) (= op<3><0> in<1>)) (=> (= L@op<3><0> 2) (= op<3><0> in<2>)) (=> (= L@op<3><0> 3) (= op<3><0> in<3>)) (=> (= L@op<3><0> 5) (= op<3><0> in<5>)) (=> (= L@op<3><0> 6) (= op<3><0> in<6>)) (=> (= L@op<3><1> 1) (= op<3><1> in<1>)) (=> (= L@op<3><1> 2) (= op<3><1> in<2>)) (=> (= L@op<3><1> 3) (= op<3><1> in<3>)) (=> (= L@op<3><1> 5) (= op<3><1> in<5>)) (=> (= L@op<3><1> 6) (= op<3><1> in<6>))))
(define-fun Library ((op<0> Bool)(op<1> Bool)(op<2> Bool)(op<3> Bool)(op<0><0> Real)(op<0><1> Real)(op<1><0> Real)(op<1><1> Real)(op<2><0> Real)(op<2><1> Real)(op<3><0> Real)(op<3><1> Real)) Bool (and (= op<0> (= op<0><0> op<0><1>)) (= op<1> (distinct op<1><0> op<1><1>)) (= op<2> (< op<2><0> op<2><1>)) (= op<3> (<= op<3><0> op<3><1>))))
(define-fun Verification ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)(L@out Int)(in<0> Bool)(in<1> Real)(in<2> Real)(in<3> Real)(in<4> Bool)(in<5> Real)(in<6> Real)(in<7> Bool)(in<8> Bool)(in<9> Bool)(in<10> Bool)(in<11> Bool)(in<12> Bool)(in<13> Bool)(in<14> Bool)(out Bool)) Bool (exists ((op<0> Bool) (op<1> Bool) (op<2> Bool) (op<3> Bool) (op<0><0> Real) (op<0><1> Real) (op<1><0> Real) (op<1><1> Real) (op<2><0> Real) (op<2><1> Real) (op<3><0> Real) (op<3><1> Real) ) (and (Connectivity L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out in<0> in<1> in<2> in<3> in<4> in<5> in<6> in<7> in<8> in<9> in<10> in<11> in<12> in<13> in<14> op<0> op<1> op<2> op<3> op<0><0> op<0><1> op<1><0> op<1><1> op<2><0> op<2><1> op<3><0> op<3><1> out) (Library op<0> op<1> op<2> op<3> op<0><0> op<0><1> op<1><0> op<1><1> op<2><0> op<2><1> op<3><0> op<3><1>))))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out true 1.0 0.0 1.0 true (- 1.0) 1.0 false false false false true true true true true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out true 1.0 0.0 1.0 true (- 1.0) 2.0 false false false false true true true true false))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out true 1.0 0.0 1.0 true (- 1.0) 0.0 false false false true true true true true false))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out true 1.0 0.0 2.0 true (- 1.0) 0.0 false false true true true true true true true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out true 1.0 0.0 1.0 true (- 1.0) 0.0 false false true true true true true true true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out true 1.0 0.0 2.0 true (- 1.0) 0.0 false false false true true true true true false))
(assert (WellFormedProgram L@op<0> L@op<1> L@op<2> L@op<3> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@out))
04:25:45.683 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
04:25:45.742 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - SMTLib Script:
(set-option :produce-models true)
(set-logic AUFNIRA)
(declare-fun L@op<0> () Int)
(declare-fun L@op<1> () Int)
(declare-fun L@op<2> () Int)
(declare-fun L@op<3> () Int)
(declare-fun L@op<4> () Int)
(declare-fun L@op<5> () Int)
(declare-fun L@op<6> () Int)
(declare-fun L@op<0><0> () Int)
(declare-fun L@op<0><1> () Int)
(declare-fun L@op<1><0> () Int)
(declare-fun L@op<1><1> () Int)
(declare-fun L@op<2><0> () Int)
(declare-fun L@op<2><1> () Int)
(declare-fun L@op<3><0> () Int)
(declare-fun L@op<3><1> () Int)
(declare-fun L@op<4><0> () Int)
(declare-fun L@op<5><0> () Int)
(declare-fun L@op<5><1> () Int)
(declare-fun L@op<6><0> () Int)
(declare-fun L@op<6><1> () Int)
(declare-fun L@out () Int)
(define-fun Acyclicity ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<4> Int)(L@op<5> Int)(L@op<6> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)(L@op<4><0> Int)(L@op<5><0> Int)(L@op<5><1> Int)(L@op<6><0> Int)(L@op<6><1> Int)) Bool (and (< L@op<0><0> L@op<0>) (< L@op<0><1> L@op<0>) (< L@op<1><0> L@op<1>) (< L@op<1><1> L@op<1>) (< L@op<2><0> L@op<2>) (< L@op<2><1> L@op<2>) (< L@op<3><0> L@op<3>) (< L@op<3><1> L@op<3>) (< L@op<4><0> L@op<4>) (< L@op<5><0> L@op<5>) (< L@op<5><1> L@op<5>) (< L@op<6><0> L@op<6>) (< L@op<6><1> L@op<6>)))
(define-fun Consistency ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<4> Int)(L@op<5> Int)(L@op<6> Int)) Bool (and (distinct L@op<0> L@op<1>) (distinct L@op<0> L@op<2>) (distinct L@op<0> L@op<3>) (distinct L@op<0> L@op<4>) (distinct L@op<0> L@op<5>) (distinct L@op<0> L@op<6>) (distinct L@op<1> L@op<2>) (distinct L@op<1> L@op<3>) (distinct L@op<1> L@op<4>) (distinct L@op<1> L@op<5>) (distinct L@op<1> L@op<6>) (distinct L@op<2> L@op<3>) (distinct L@op<2> L@op<4>) (distinct L@op<2> L@op<5>) (distinct L@op<2> L@op<6>) (distinct L@op<3> L@op<4>) (distinct L@op<3> L@op<5>) (distinct L@op<3> L@op<6>) (distinct L@op<4> L@op<5>) (distinct L@op<4> L@op<6>) (distinct L@op<5> L@op<6>)))
(define-fun LineBound ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<4> Int)(L@op<5> Int)(L@op<6> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)(L@op<4><0> Int)(L@op<5><0> Int)(L@op<5><1> Int)(L@op<6><0> Int)(L@op<6><1> Int)(L@out Int)) Bool (and (and (<= 15 L@op<0>) (<= L@op<0> 21)) (and (<= 15 L@op<1>) (<= L@op<1> 21)) (and (<= 15 L@op<2>) (<= L@op<2> 21)) (and (<= 15 L@op<3>) (<= L@op<3> 21)) (and (<= 15 L@op<4>) (<= L@op<4> 21)) (and (<= 15 L@op<5>) (<= L@op<5> 21)) (and (<= 15 L@op<6>) (<= L@op<6> 21)) (or (= 1 L@op<0><0>) (= 2 L@op<0><0>) (= 3 L@op<0><0>) (= 5 L@op<0><0>) (= 6 L@op<0><0>)) (or (= 1 L@op<0><1>) (= 2 L@op<0><1>) (= 3 L@op<0><1>) (= 5 L@op<0><1>) (= 6 L@op<0><1>)) (or (= 1 L@op<1><0>) (= 2 L@op<1><0>) (= 3 L@op<1><0>) (= 5 L@op<1><0>) (= 6 L@op<1><0>)) (or (= 1 L@op<1><1>) (= 2 L@op<1><1>) (= 3 L@op<1><1>) (= 5 L@op<1><1>) (= 6 L@op<1><1>)) (or (= 1 L@op<2><0>) (= 2 L@op<2><0>) (= 3 L@op<2><0>) (= 5 L@op<2><0>) (= 6 L@op<2><0>)) (or (= 1 L@op<2><1>) (= 2 L@op<2><1>) (= 3 L@op<2><1>) (= 5 L@op<2><1>) (= 6 L@op<2><1>)) (or (= 1 L@op<3><0>) (= 2 L@op<3><0>) (= 3 L@op<3><0>) (= 5 L@op<3><0>) (= 6 L@op<3><0>)) (or (= 1 L@op<3><1>) (= 2 L@op<3><1>) (= 3 L@op<3><1>) (= 5 L@op<3><1>) (= 6 L@op<3><1>)) (or (= 0 L@op<4><0>) (= 4 L@op<4><0>) (= 7 L@op<4><0>) (= 8 L@op<4><0>) (= 9 L@op<4><0>) (= 10 L@op<4><0>) (= 11 L@op<4><0>) (= 12 L@op<4><0>) (= 13 L@op<4><0>) (= 14 L@op<4><0>) (= L@op<0> L@op<4><0>) (= L@op<1> L@op<4><0>) (= L@op<2> L@op<4><0>) (= L@op<3> L@op<4><0>) (= L@op<5> L@op<4><0>) (= L@op<6> L@op<4><0>)) (or (= 0 L@op<5><0>) (= 4 L@op<5><0>) (= 7 L@op<5><0>) (= 8 L@op<5><0>) (= 9 L@op<5><0>) (= 10 L@op<5><0>) (= 11 L@op<5><0>) (= 12 L@op<5><0>) (= 13 L@op<5><0>) (= 14 L@op<5><0>) (= L@op<0> L@op<5><0>) (= L@op<1> L@op<5><0>) (= L@op<2> L@op<5><0>) (= L@op<3> L@op<5><0>) (= L@op<4> L@op<5><0>) (= L@op<6> L@op<5><0>)) (or (= 0 L@op<5><1>) (= 4 L@op<5><1>) (= 7 L@op<5><1>) (= 8 L@op<5><1>) (= 9 L@op<5><1>) (= 10 L@op<5><1>) (= 11 L@op<5><1>) (= 12 L@op<5><1>) (= 13 L@op<5><1>) (= 14 L@op<5><1>) (= L@op<0> L@op<5><1>) (= L@op<1> L@op<5><1>) (= L@op<2> L@op<5><1>) (= L@op<3> L@op<5><1>) (= L@op<4> L@op<5><1>) (= L@op<6> L@op<5><1>)) (or (= 0 L@op<6><0>) (= 4 L@op<6><0>) (= 7 L@op<6><0>) (= 8 L@op<6><0>) (= 9 L@op<6><0>) (= 10 L@op<6><0>) (= 11 L@op<6><0>) (= 12 L@op<6><0>) (= 13 L@op<6><0>) (= 14 L@op<6><0>) (= L@op<0> L@op<6><0>) (= L@op<1> L@op<6><0>) (= L@op<2> L@op<6><0>) (= L@op<3> L@op<6><0>) (= L@op<4> L@op<6><0>) (= L@op<5> L@op<6><0>)) (or (= 0 L@op<6><1>) (= 4 L@op<6><1>) (= 7 L@op<6><1>) (= 8 L@op<6><1>) (= 9 L@op<6><1>) (= 10 L@op<6><1>) (= 11 L@op<6><1>) (= 12 L@op<6><1>) (= 13 L@op<6><1>) (= 14 L@op<6><1>) (= L@op<0> L@op<6><1>) (= L@op<1> L@op<6><1>) (= L@op<2> L@op<6><1>) (= L@op<3> L@op<6><1>) (= L@op<4> L@op<6><1>) (= L@op<5> L@op<6><1>)) (or (= 0 L@out) (= 4 L@out) (= 7 L@out) (= 8 L@out) (= 9 L@out) (= 10 L@out) (= 11 L@out) (= 12 L@out) (= 13 L@out) (= 14 L@out) (= L@op<0> L@out) (= L@op<1> L@out) (= L@op<2> L@out) (= L@op<3> L@out) (= L@op<4> L@out) (= L@op<5> L@out) (= L@op<6> L@out))))
(define-fun WellFormedProgram ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<4> Int)(L@op<5> Int)(L@op<6> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)(L@op<4><0> Int)(L@op<5><0> Int)(L@op<5><1> Int)(L@op<6><0> Int)(L@op<6><1> Int)(L@out Int)) Bool (and (Acyclicity L@op<0> L@op<1> L@op<2> L@op<3> L@op<4> L@op<5> L@op<6> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@op<4><0> L@op<5><0> L@op<5><1> L@op<6><0> L@op<6><1>) (Consistency L@op<0> L@op<1> L@op<2> L@op<3> L@op<4> L@op<5> L@op<6>) (LineBound L@op<0> L@op<1> L@op<2> L@op<3> L@op<4> L@op<5> L@op<6> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@op<4><0> L@op<5><0> L@op<5><1> L@op<6><0> L@op<6><1> L@out)))
(define-fun Connectivity ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<4> Int)(L@op<5> Int)(L@op<6> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)(L@op<4><0> Int)(L@op<5><0> Int)(L@op<5><1> Int)(L@op<6><0> Int)(L@op<6><1> Int)(L@out Int)(in<0> Bool)(in<1> Real)(in<2> Real)(in<3> Real)(in<4> Bool)(in<5> Real)(in<6> Real)(in<7> Bool)(in<8> Bool)(in<9> Bool)(in<10> Bool)(in<11> Bool)(in<12> Bool)(in<13> Bool)(in<14> Bool)(op<0> Bool)(op<1> Bool)(op<2> Bool)(op<3> Bool)(op<4> Bool)(op<5> Bool)(op<6> Bool)(op<0><0> Real)(op<0><1> Real)(op<1><0> Real)(op<1><1> Real)(op<2><0> Real)(op<2><1> Real)(op<3><0> Real)(op<3><1> Real)(op<4><0> Bool)(op<5><0> Bool)(op<5><1> Bool)(op<6><0> Bool)(op<6><1> Bool)(out Bool)) Bool (and (=> (= L@out 0) (= out in<0>)) (=> (= L@out 4) (= out in<4>)) (=> (= L@out 7) (= out in<7>)) (=> (= L@out 8) (= out in<8>)) (=> (= L@out 9) (= out in<9>)) (=> (= L@out 10) (= out in<10>)) (=> (= L@out 11) (= out in<11>)) (=> (= L@out 12) (= out in<12>)) (=> (= L@out 13) (= out in<13>)) (=> (= L@out 14) (= out in<14>)) (=> (= L@out L@op<0>) (= out op<0>)) (=> (= L@out L@op<1>) (= out op<1>)) (=> (= L@out L@op<2>) (= out op<2>)) (=> (= L@out L@op<3>) (= out op<3>)) (=> (= L@out L@op<4>) (= out op<4>)) (=> (= L@out L@op<5>) (= out op<5>)) (=> (= L@out L@op<6>) (= out op<6>)) (=> (= L@op<0><0> 1) (= op<0><0> in<1>)) (=> (= L@op<0><0> 2) (= op<0><0> in<2>)) (=> (= L@op<0><0> 3) (= op<0><0> in<3>)) (=> (= L@op<0><0> 5) (= op<0><0> in<5>)) (=> (= L@op<0><0> 6) (= op<0><0> in<6>)) (=> (= L@op<0><1> 1) (= op<0><1> in<1>)) (=> (= L@op<0><1> 2) (= op<0><1> in<2>)) (=> (= L@op<0><1> 3) (= op<0><1> in<3>)) (=> (= L@op<0><1> 5) (= op<0><1> in<5>)) (=> (= L@op<0><1> 6) (= op<0><1> in<6>)) (=> (= L@op<1><0> 1) (= op<1><0> in<1>)) (=> (= L@op<1><0> 2) (= op<1><0> in<2>)) (=> (= L@op<1><0> 3) (= op<1><0> in<3>)) (=> (= L@op<1><0> 5) (= op<1><0> in<5>)) (=> (= L@op<1><0> 6) (= op<1><0> in<6>)) (=> (= L@op<1><1> 1) (= op<1><1> in<1>)) (=> (= L@op<1><1> 2) (= op<1><1> in<2>)) (=> (= L@op<1><1> 3) (= op<1><1> in<3>)) (=> (= L@op<1><1> 5) (= op<1><1> in<5>)) (=> (= L@op<1><1> 6) (= op<1><1> in<6>)) (=> (= L@op<2><0> 1) (= op<2><0> in<1>)) (=> (= L@op<2><0> 2) (= op<2><0> in<2>)) (=> (= L@op<2><0> 3) (= op<2><0> in<3>)) (=> (= L@op<2><0> 5) (= op<2><0> in<5>)) (=> (= L@op<2><0> 6) (= op<2><0> in<6>)) (=> (= L@op<2><1> 1) (= op<2><1> in<1>)) (=> (= L@op<2><1> 2) (= op<2><1> in<2>)) (=> (= L@op<2><1> 3) (= op<2><1> in<3>)) (=> (= L@op<2><1> 5) (= op<2><1> in<5>)) (=> (= L@op<2><1> 6) (= op<2><1> in<6>)) (=> (= L@op<3><0> 1) (= op<3><0> in<1>)) (=> (= L@op<3><0> 2) (= op<3><0> in<2>)) (=> (= L@op<3><0> 3) (= op<3><0> in<3>)) (=> (= L@op<3><0> 5) (= op<3><0> in<5>)) (=> (= L@op<3><0> 6) (= op<3><0> in<6>)) (=> (= L@op<3><1> 1) (= op<3><1> in<1>)) (=> (= L@op<3><1> 2) (= op<3><1> in<2>)) (=> (= L@op<3><1> 3) (= op<3><1> in<3>)) (=> (= L@op<3><1> 5) (= op<3><1> in<5>)) (=> (= L@op<3><1> 6) (= op<3><1> in<6>)) (=> (= L@op<4><0> 0) (= op<4><0> in<0>)) (=> (= L@op<4><0> 4) (= op<4><0> in<4>)) (=> (= L@op<4><0> 7) (= op<4><0> in<7>)) (=> (= L@op<4><0> 8) (= op<4><0> in<8>)) (=> (= L@op<4><0> 9) (= op<4><0> in<9>)) (=> (= L@op<4><0> 10) (= op<4><0> in<10>)) (=> (= L@op<4><0> 11) (= op<4><0> in<11>)) (=> (= L@op<4><0> 12) (= op<4><0> in<12>)) (=> (= L@op<4><0> 13) (= op<4><0> in<13>)) (=> (= L@op<4><0> 14) (= op<4><0> in<14>)) (=> (= L@op<4><0> L@op<0>) (= op<4><0> op<0>)) (=> (= L@op<4><0> L@op<1>) (= op<4><0> op<1>)) (=> (= L@op<4><0> L@op<2>) (= op<4><0> op<2>)) (=> (= L@op<4><0> L@op<3>) (= op<4><0> op<3>)) (=> (= L@op<4><0> L@op<5>) (= op<4><0> op<5>)) (=> (= L@op<4><0> L@op<6>) (= op<4><0> op<6>)) (=> (= L@op<5><0> 0) (= op<5><0> in<0>)) (=> (= L@op<5><0> 4) (= op<5><0> in<4>)) (=> (= L@op<5><0> 7) (= op<5><0> in<7>)) (=> (= L@op<5><0> 8) (= op<5><0> in<8>)) (=> (= L@op<5><0> 9) (= op<5><0> in<9>)) (=> (= L@op<5><0> 10) (= op<5><0> in<10>)) (=> (= L@op<5><0> 11) (= op<5><0> in<11>)) (=> (= L@op<5><0> 12) (= op<5><0> in<12>)) (=> (= L@op<5><0> 13) (= op<5><0> in<13>)) (=> (= L@op<5><0> 14) (= op<5><0> in<14>)) (=> (= L@op<5><0> L@op<0>) (= op<5><0> op<0>)) (=> (= L@op<5><0> L@op<1>) (= op<5><0> op<1>)) (=> (= L@op<5><0> L@op<2>) (= op<5><0> op<2>)) (=> (= L@op<5><0> L@op<3>) (= op<5><0> op<3>)) (=> (= L@op<5><0> L@op<4>) (= op<5><0> op<4>)) (=> (= L@op<5><0> L@op<6>) (= op<5><0> op<6>)) (=> (= L@op<5><1> 0) (= op<5><1> in<0>)) (=> (= L@op<5><1> 4) (= op<5><1> in<4>)) (=> (= L@op<5><1> 7) (= op<5><1> in<7>)) (=> (= L@op<5><1> 8) (= op<5><1> in<8>)) (=> (= L@op<5><1> 9) (= op<5><1> in<9>)) (=> (= L@op<5><1> 10) (= op<5><1> in<10>)) (=> (= L@op<5><1> 11) (= op<5><1> in<11>)) (=> (= L@op<5><1> 12) (= op<5><1> in<12>)) (=> (= L@op<5><1> 13) (= op<5><1> in<13>)) (=> (= L@op<5><1> 14) (= op<5><1> in<14>)) (=> (= L@op<5><1> L@op<0>) (= op<5><1> op<0>)) (=> (= L@op<5><1> L@op<1>) (= op<5><1> op<1>)) (=> (= L@op<5><1> L@op<2>) (= op<5><1> op<2>)) (=> (= L@op<5><1> L@op<3>) (= op<5><1> op<3>)) (=> (= L@op<5><1> L@op<4>) (= op<5><1> op<4>)) (=> (= L@op<5><1> L@op<6>) (= op<5><1> op<6>)) (=> (= L@op<6><0> 0) (= op<6><0> in<0>)) (=> (= L@op<6><0> 4) (= op<6><0> in<4>)) (=> (= L@op<6><0> 7) (= op<6><0> in<7>)) (=> (= L@op<6><0> 8) (= op<6><0> in<8>)) (=> (= L@op<6><0> 9) (= op<6><0> in<9>)) (=> (= L@op<6><0> 10) (= op<6><0> in<10>)) (=> (= L@op<6><0> 11) (= op<6><0> in<11>)) (=> (= L@op<6><0> 12) (= op<6><0> in<12>)) (=> (= L@op<6><0> 13) (= op<6><0> in<13>)) (=> (= L@op<6><0> 14) (= op<6><0> in<14>)) (=> (= L@op<6><0> L@op<0>) (= op<6><0> op<0>)) (=> (= L@op<6><0> L@op<1>) (= op<6><0> op<1>)) (=> (= L@op<6><0> L@op<2>) (= op<6><0> op<2>)) (=> (= L@op<6><0> L@op<3>) (= op<6><0> op<3>)) (=> (= L@op<6><0> L@op<4>) (= op<6><0> op<4>)) (=> (= L@op<6><0> L@op<5>) (= op<6><0> op<5>)) (=> (= L@op<6><1> 0) (= op<6><1> in<0>)) (=> (= L@op<6><1> 4) (= op<6><1> in<4>)) (=> (= L@op<6><1> 7) (= op<6><1> in<7>)) (=> (= L@op<6><1> 8) (= op<6><1> in<8>)) (=> (= L@op<6><1> 9) (= op<6><1> in<9>)) (=> (= L@op<6><1> 10) (= op<6><1> in<10>)) (=> (= L@op<6><1> 11) (= op<6><1> in<11>)) (=> (= L@op<6><1> 12) (= op<6><1> in<12>)) (=> (= L@op<6><1> 13) (= op<6><1> in<13>)) (=> (= L@op<6><1> 14) (= op<6><1> in<14>)) (=> (= L@op<6><1> L@op<0>) (= op<6><1> op<0>)) (=> (= L@op<6><1> L@op<1>) (= op<6><1> op<1>)) (=> (= L@op<6><1> L@op<2>) (= op<6><1> op<2>)) (=> (= L@op<6><1> L@op<3>) (= op<6><1> op<3>)) (=> (= L@op<6><1> L@op<4>) (= op<6><1> op<4>)) (=> (= L@op<6><1> L@op<5>) (= op<6><1> op<5>))))
(define-fun Library ((op<0> Bool)(op<1> Bool)(op<2> Bool)(op<3> Bool)(op<4> Bool)(op<5> Bool)(op<6> Bool)(op<0><0> Real)(op<0><1> Real)(op<1><0> Real)(op<1><1> Real)(op<2><0> Real)(op<2><1> Real)(op<3><0> Real)(op<3><1> Real)(op<4><0> Bool)(op<5><0> Bool)(op<5><1> Bool)(op<6><0> Bool)(op<6><1> Bool)) Bool (and (= op<0> (= op<0><0> op<0><1>)) (= op<1> (distinct op<1><0> op<1><1>)) (= op<2> (< op<2><0> op<2><1>)) (= op<3> (<= op<3><0> op<3><1>)) (= op<4> (not op<4><0>)) (= op<5> (or op<5><0> op<5><1>)) (= op<6> (and op<6><0> op<6><1>))))
(define-fun Verification ((L@op<0> Int)(L@op<1> Int)(L@op<2> Int)(L@op<3> Int)(L@op<4> Int)(L@op<5> Int)(L@op<6> Int)(L@op<0><0> Int)(L@op<0><1> Int)(L@op<1><0> Int)(L@op<1><1> Int)(L@op<2><0> Int)(L@op<2><1> Int)(L@op<3><0> Int)(L@op<3><1> Int)(L@op<4><0> Int)(L@op<5><0> Int)(L@op<5><1> Int)(L@op<6><0> Int)(L@op<6><1> Int)(L@out Int)(in<0> Bool)(in<1> Real)(in<2> Real)(in<3> Real)(in<4> Bool)(in<5> Real)(in<6> Real)(in<7> Bool)(in<8> Bool)(in<9> Bool)(in<10> Bool)(in<11> Bool)(in<12> Bool)(in<13> Bool)(in<14> Bool)(out Bool)) Bool (exists ((op<0> Bool) (op<1> Bool) (op<2> Bool) (op<3> Bool) (op<4> Bool) (op<5> Bool) (op<6> Bool) (op<0><0> Real) (op<0><1> Real) (op<1><0> Real) (op<1><1> Real) (op<2><0> Real) (op<2><1> Real) (op<3><0> Real) (op<3><1> Real) (op<4><0> Bool) (op<5><0> Bool) (op<5><1> Bool) (op<6><0> Bool) (op<6><1> Bool) ) (and (Connectivity L@op<0> L@op<1> L@op<2> L@op<3> L@op<4> L@op<5> L@op<6> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@op<4><0> L@op<5><0> L@op<5><1> L@op<6><0> L@op<6><1> L@out in<0> in<1> in<2> in<3> in<4> in<5> in<6> in<7> in<8> in<9> in<10> in<11> in<12> in<13> in<14> op<0> op<1> op<2> op<3> op<4> op<5> op<6> op<0><0> op<0><1> op<1><0> op<1><1> op<2><0> op<2><1> op<3><0> op<3><1> op<4><0> op<5><0> op<5><1> op<6><0> op<6><1> out) (Library op<0> op<1> op<2> op<3> op<4> op<5> op<6> op<0><0> op<0><1> op<1><0> op<1><1> op<2><0> op<2><1> op<3><0> op<3><1> op<4><0> op<5><0> op<5><1> op<6><0> op<6><1>))))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<4> L@op<5> L@op<6> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@op<4><0> L@op<5><0> L@op<5><1> L@op<6><0> L@op<6><1> L@out true 1.0 0.0 1.0 true (- 1.0) 1.0 false false false false true true true true true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<4> L@op<5> L@op<6> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@op<4><0> L@op<5><0> L@op<5><1> L@op<6><0> L@op<6><1> L@out true 1.0 0.0 1.0 true (- 1.0) 2.0 false false false false true true true true false))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<4> L@op<5> L@op<6> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@op<4><0> L@op<5><0> L@op<5><1> L@op<6><0> L@op<6><1> L@out true 1.0 0.0 1.0 true (- 1.0) 0.0 false false false true true true true true false))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<4> L@op<5> L@op<6> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@op<4><0> L@op<5><0> L@op<5><1> L@op<6><0> L@op<6><1> L@out true 1.0 0.0 2.0 true (- 1.0) 0.0 false false true true true true true true true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<4> L@op<5> L@op<6> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@op<4><0> L@op<5><0> L@op<5><1> L@op<6><0> L@op<6><1> L@out true 1.0 0.0 1.0 true (- 1.0) 0.0 false false true true true true true true true))
(assert (Verification L@op<0> L@op<1> L@op<2> L@op<3> L@op<4> L@op<5> L@op<6> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@op<4><0> L@op<5><0> L@op<5><1> L@op<6><0> L@op<6><1> L@out true 1.0 0.0 2.0 true (- 1.0) 0.0 false false false true true true true true false))
(assert (WellFormedProgram L@op<0> L@op<1> L@op<2> L@op<3> L@op<4> L@op<5> L@op<6> L@op<0><0> L@op<0><1> L@op<1><0> L@op<1><1> L@op<2><0> L@op<2><1> L@op<3><0> L@op<3><1> L@op<4><0> L@op<5><0> L@op<5><1> L@op<6><0> L@op<6><1> L@out))
04:25:45.934 [main] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Successful code synthesis: ((s.scope) != (jsScope)) || (com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.size() == def.depends.size())
04:25:45.935 [main] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: com.google.javascript.jscomp.MustBeReachingVariableDef:435: CONDITIONAL ((s.scope) != (jsScope)) || (com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.size() == def.depends.size())
04:25:45.935 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:46,119 DEBUG spoon.support.StandardEnvironment - building sources: [/gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:46,119 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -encoding, UTF-8, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/classes/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/build/test/:/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/all0.jar:/home/qx5/ssFix2/lib/commons-lang3-3.5.jar:/home/qx5/ssFix2/lib/myprinter.jar:/home/qx5/ssFix2/lib/evosuite-1.0.2.jar:, /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java]
2017-03-29 04:25:46,314 DEBUG spoon.support.StandardEnvironment - built in 195 ms
2017-03-29 04:25:46,314 DEBUG spoon.support.StandardEnvironment - building templates: []
2017-03-29 04:25:46,314 DEBUG spoon.support.StandardEnvironment - built in 0 ms
04:25:46.315 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.MustBeReachingVariableDef]
2017-03-29 04:25:46,315 DEBUG spoon.support.StandardEnvironment - processing 'MustBeReachingVariableDef' with 'fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer'...
04:25:46.318 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.MustBeReachingVariableDef]
04:25:46.342 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:25:46.575 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
04:25:46.575 [main] INFO  f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "((s.scope) != (jsScope)) || (com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.size() == def.depends.size())" is working
Mar 29, 2017 4:26:00 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:00 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:00 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:00 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:00 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:00 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:00 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 2 syntax errors.
Mar 29, 2017 4:26:00 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 2 syntax errors.
Mar 29, 2017 4:26:00 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 2 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 1 syntax errors.
Mar 29, 2017 4:26:01 AM com.google.javascript.jscomp.parsing.ParserRunner parse
INFO: Error parsing input: JSCompiler test code: Compilation produced 2 syntax errors.
Mar 29, 2017 4:26:02 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

Mar 29, 2017 4:26:02 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:02 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

Mar 29, 2017 4:26:02 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
Mar 29, 2017 4:26:02 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

Mar 29, 2017 4:26:02 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
Mar 29, 2017 4:26:02 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

Mar 29, 2017 4:26:02 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:02 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

Mar 29, 2017 4:26:02 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

Mar 29, 2017 4:26:03 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
^

Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:9: WARNING - actual parameter 1 of C.prototype.someMethod does not match formal parameter
found   : number
required: string
x.someMethod(x.someProperty);
             ^

Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

Mar 29, 2017 4:26:04 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - invalid cast - must be a subtype or supertype
from: number
to  : string
function f() { var xyz = /** @type {string} */ (0); }
                                                ^

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

Mar 29, 2017 4:26:05 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2017/02/21 15:07
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2017/02/21 15:07
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:2: WARNING - Property dom never defined on goog
goog.dom.DomHelper = function(){};
^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:3: WARNING - Property dom never defined on goog
var y = goog.dom.DomHelper;
        ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:2: ERROR - variable goog is undeclared
goog.dom.DomHelper = function(){};
^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 4 warning(s), 60% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - Parse error. illegal use of unknown JSDoc tag "contstructor"; ignoring it
/** @contstructor */function F() {  this.field1 = 3;}F.prototype.method1 = function() {  this.field1 = 5;};(new F()).method1();
    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 90.9% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:12: WARNING - Property inherits never defined on goog
goog.inherits(a.b.DerivedClass, a.b.BaseClass);
^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:5: ERROR - variable alert is undeclared
  alert('hi');
  ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:12: ERROR - variable goog is undeclared
goog.inherits(a.b.DerivedClass, a.b.BaseClass);
^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 3 warning(s), 92.6% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - Suspicious code. The result of the 'add' operator is not being used.
/** @constructor */ var DomHelper = function(){};/** method */ DomHelper.method = function() {};function f() { var x = DomHelper; x.method() + x.method(); }
                                                                                                                                  ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:3: WARNING - Bad type annotation. Unknown type Missing
 * @extends {Missing}
             ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 78.6% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - dangerous use of the global this object
this.foo = {}; this.foo.bar = {};
^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - dangerous use of the global this object
this.foo = {}; this.foo.bar = {};
               ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s), 87.5% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 28.6% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:1: ERROR - variable x is undeclared
/** @constructor */ var DomHelper = function(){};DomHelper.prototype.method = function() {   this.field = 3;  return x.field;}
                                                                                                                     ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 2 warning(s), 83.3% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:22 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 99.1% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:2: WARNING - goog.dom.Foo defined before its owner. goog.dom is defined at in1:3
/** @constructor */ goog.dom.Foo = function() {};
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 50% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - Suspicious code. The result of the 'getprop' operator is not being used.
/** @constructor */ function Foo() {} this.Foo;
                                      ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - dangerous use of the global this object
/** @constructor */ function Foo() {} this.Foo;
                                      ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:9: WARNING - Property c never defined on A.prototype.b
  var x; if (x) { x = a.b.b; } else { x = a.b.c; }
                                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 86.7% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:1: ERROR - variable goog is undeclared
/** @constructor */ goog.Foo = function(){};
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 2 warning(s), 66.7% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:3: WARNING - Bad type annotation. Unknown type Missing
 * @extends {Missing}
             ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 78.6% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - dangerous use of the global this object
function F() {  this.field1 = 3;}F.prototype.method1 = function() {  this.field1 = 5;};(new F()).method1();
                ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - cannot instantiate non-constructor
function F() {  this.field1 = 3;}F.prototype.method1 = function() {  this.field1 = 5;};(new F()).method1();
                                                                                        ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s), 75% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:2: WARNING - Property require never defined on goog
goog.require('foo.bar')
^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:1: ERROR - variable foo is undeclared
foo.bar = function(){};  // definition
^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:2: ERROR - variable goog is undeclared
goog.require('foo.bar')
^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 3 warning(s), 57.1% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Syntax error: Wrong type of child number 1 for VarDecl. Expected: [InitPatt, IdPatt]. Found: IdExpr.

Mar 29, 2017 4:26:23 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Mar 29, 2017 4:26:31 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: foo.js:1: WARNING - 'foo.bar.goo' used but not goog.require'd
var foo = {}; var bar = new foo.bar.goo();
                        ^

Mar 29, 2017 4:26:31 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+46: Semicolon inserted
LOG:unknown:///unknown:1+46: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+28: Semicolon inserted
LOG:unknown:///unknown:1+28: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+109: Semicolon inserted
LOG:unknown:///unknown:1+110: Semicolon inserted
LOG:unknown:///unknown:1+109: Semicolon inserted
LOG:unknown:///unknown:1+110: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+44: Semicolon inserted
LOG:unknown:///unknown:1+71: Semicolon inserted
LOG:unknown:///unknown:1+44: Semicolon inserted
LOG:unknown:///unknown:1+71: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+134: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+134: Semicolon inserted
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray(JsonMLConversionTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:39)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:86)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray(JsonMLConversionTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:39)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+36: Semicolon inserted
LOG:unknown:///unknown:1+36: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+40: Semicolon inserted
LOG:unknown:///unknown:1+40: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+66: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+66: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+103: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+103: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+99: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+99: Semicolon inserted
LOG:unknown:///unknown:1+104: Semicolon inserted
LOG:unknown:///unknown:1+105: Semicolon inserted
LOG:unknown:///unknown:1+104: Semicolon inserted
LOG:unknown:///unknown:1+105: Semicolon inserted
LOG:unknown:///unknown:1+18: Semicolon inserted
LOG:unknown:///unknown:1+18: Semicolon inserted
LOG:unknown:///unknown:1+97: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+97: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+15: Semicolon inserted
LOG:unknown:///unknown:1+15: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+108: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+108: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+5: Semicolon inserted
LOG:unknown:///unknown:1+5: Semicolon inserted
LOG:unknown:///unknown:1+84: Semicolon inserted
LOG:unknown:///unknown:1+84: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+38: Semicolon inserted
LOG:unknown:///unknown:1+38: Semicolon inserted
LOG:unknown:///unknown:1+13: Semicolon inserted
LOG:unknown:///unknown:1+13: Semicolon inserted
LOG:unknown:///unknown:1+29: Semicolon inserted
LOG:unknown:///unknown:1+29: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+25: Semicolon inserted
LOG:unknown:///unknown:1+25: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+61: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+61: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+41: Semicolon inserted
LOG:unknown:///unknown:1+41: Semicolon inserted
LOG:unknown:///unknown:1+16: Semicolon inserted
LOG:unknown:///unknown:1+16: Semicolon inserted
LOG:unknown:///unknown:1+20: Semicolon inserted
LOG:unknown:///unknown:1+20: Semicolon inserted
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray1(JsonMLConversionTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:39)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:86)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray1(JsonMLConversionTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:39)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+26: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+26: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+87: Semicolon inserted
LOG:unknown:///unknown:1+88: Semicolon inserted
LOG:unknown:///unknown:1+87: Semicolon inserted
LOG:unknown:///unknown:1+88: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+106: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+106: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+72: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+72: Semicolon inserted
LOG:unknown:///unknown:1+33: Semicolon inserted
LOG:unknown:///unknown:1+33: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+32: Semicolon inserted
LOG:unknown:///unknown:1+32: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+58: Semicolon inserted
LOG:unknown:///unknown:1+58: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b for exported function p1
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                            ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                     ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                        ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                           ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function g
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                            ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function h
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                               ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function i
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                                  ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 7 warning(s), 100% typed
Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = function(d, e, f) {};goog.exportSymbol('foobar', a)
                                                                                                                  ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = function(d, e, f) {};goog.exportSymbol('foobar', a)
                                                                                                                     ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = function(d, e, f) {};goog.exportSymbol('foobar', a)
                                                                                                                        ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine return type for exported function InternalName
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var InternalName = function() {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                                                                                                                    ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:2: WARNING - assignment to property A of enum{E}
found   : number
required: string
 @export */ var E = {A:8, B:9};goog.exportSymbol('E', E);
                     ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:2: WARNING - assignment to property B of enum{E}
found   : number
required: string
 @export */ var E = {A:8, B:9};goog.exportSymbol('E', E);
                          ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportSymbol('foobar', a.b.c)
                                                                                                                                        ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportSymbol('foobar', a.b.c)
                                                                                                                                           ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportSymbol('foobar', a.b.c)
                                                                                                                                              ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                     ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                        ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                           ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function g
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                            ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function h
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                               ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function i
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                                  ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 6 warning(s), 100% typed
Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b for exported function p1
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                            ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                                                     ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                                                        ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                                                           ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s), 100% typed
Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportProperty(a.b, 'cprop', a.b.c)
                                                                                                                                        ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportProperty(a.b, 'cprop', a.b.c)
                                                                                                                                           ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportProperty(a.b, 'cprop', a.b.c)
                                                                                                                                              ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:4: WARNING - Unable to determine type of parameter InternalName for exported function b
 var InternalName = function(a,b,c) {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                               ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:4: WARNING - Unable to determine type of parameter InternalName for exported function c
 var InternalName = function(a,b,c) {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                                 ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - Unable to determine return type for exported function internalName
internalName = function(a) {  return 6;
               ^

Mar 29, 2017 4:26:35 AM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
04:27:49.881 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of com.google.javascript.jscomp.MustBeReachingVariableDef]
2017-03-29 04:27:49,881 DEBUG spoon.support.StandardEnvironment - processing 'MustBeReachingVariableDef' with 'spoon.support.JavaOutputProcessor'...
2017-03-29 04:27:49,884 DEBUG spoon.support.StandardEnvironment - printing com.google.javascript.jscomp.MustBeReachingVariableDef to /gpfs/data/people/qx5/defects4j-bugs/closures/projs/Closure_3_buggy/spooned
04:27:49.938 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of com.google.javascript.jscomp.MustBeReachingVariableDef]
04:27:49.965 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
04:27:50.986 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (5 classes)]
----INFORMATION----
Nb classes : 413
Nb methods : 4849
Nb statements: 43539
Nb statement executed by the passing tests of the patched line: 0
Nb statement executed by the failing tests of the patched line: 0
Nb unit tests : 7818
Nb Statements Analyzed : 90
Nb Statements with Angelic Value Found : 3
Nb inputs in SMT : 6
Nb SMT level: 3
Nb SMT components: [7] [== of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2]
                  class java.lang.Boolean: 7
Nb variables in SMT : 16
Nb run failing test  : [2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1]
Nb run passing test : [7, 23, 7, 27, 7, 7, 7, 7, 7, 34, 7, 42, 42]
NoPol Execution time : 693271ms
----PATCH FOUND----
com.google.javascript.jscomp.MustBeReachingVariableDef:435: CONDITIONAL ((s.scope) != (jsScope)) || (com.google.javascript.jscomp.MustBeReachingVariableDef.this.escaped.size() == def.depends.size())
